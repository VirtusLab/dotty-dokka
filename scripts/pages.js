var pages = [{"name":"case class Args(name: String, tastyRoots: Seq[File], classpath: String, output: File, docsRoot: Option[String], projectVersion: String, projectTitle: Option[String], projectLogo: Option[String], defaultSyntax: Option[CommentSyntax], sourceLinks: List[String])","description":"dotty.dokka.Args","location":"api/dotty.dokka/-args/index.html","searchKeys":["Args","case class Args(name: String, tastyRoots: Seq[File], classpath: String, output: File, docsRoot: Option[String], projectVersion: String, projectTitle: Option[String], projectLogo: Option[String], defaultSyntax: Option[CommentSyntax], sourceLinks: List[String])"]},{"name":" enum CommentSyntax","description":"dotty.dokka.Args$","location":"api/dotty.dokka/-args$/-comment-syntax/index.html","searchKeys":["Args$"," enum CommentSyntax"]},{"name":" def fromString(str: String): Option[CommentSyntax]","description":"dotty.dokka.Args$.fromString","location":"api/dotty.dokka/-args$/-comment-syntax$/from-string.html","searchKeys":["fromString"," def fromString(str: String): Option[CommentSyntax]"]},{"name":" trait BaseDocConfiguration","description":"dotty.dokka.BaseDocConfiguration","location":"api/dotty.dokka/-base-doc-configuration/index.html","searchKeys":["BaseDocConfiguration"," trait BaseDocConfiguration"]},{"name":" class BaseKey[T, V] extends Key[T, V]","description":"dotty.dokka.BaseKey","location":"api/dotty.dokka/-base-key/index.html","searchKeys":["BaseKey"," class BaseKey[T, V] extends Key[T, V]"]},{"name":" def definedIn(e: T): Boolean","description":"dotty.dokka.BaseKey.definedIn","location":"api/dotty.dokka/-base-key/defined-in.html","searchKeys":["definedIn"," def definedIn(e: T): Boolean"]},{"name":" def getFrom(e: T): Option[V]","description":"dotty.dokka.BaseKey.getFrom","location":"api/dotty.dokka/-base-key/get-from.html","searchKeys":["getFrom"," def getFrom(e: T): Option[V]"]},{"name":"override def mergeStrategyFor(left: V, right: V): MergeStrategy[T]","description":"dotty.dokka.BaseKey.mergeStrategyFor","location":"api/dotty.dokka/-base-key/merge-strategy-for.html","searchKeys":["mergeStrategyFor","override def mergeStrategyFor(left: V, right: V): MergeStrategy[T]"]},{"name":" def mergeStrategyFor(left: Null, right: Null): MergeStrategy[ContentNode]","description":"dotty.dokka.ScalaCommentToContentConverter$.mergeStrategyFor","location":"api/dotty.dokka/-scala-comment-to-content-converter/-link-attributes-key/merge-strategy-for.html","searchKeys":["mergeStrategyFor"," def mergeStrategyFor(left: Null, right: Null): MergeStrategy[ContentNode]"]},{"name":"override def mergeStrategyFor(left: CompositeMemberExtension, right: CompositeMemberExtension): MergeStrategy[Documentable]","description":"dotty.dokka.model.api.CompositeMemberExtension$.mergeStrategyFor","location":"api/dotty.dokka/model/api/-composite-member-extension$/merge-strategy-for.html","searchKeys":["mergeStrategyFor","override def mergeStrategyFor(left: CompositeMemberExtension, right: CompositeMemberExtension): MergeStrategy[Documentable]"]},{"name":"case class ClasslikeExtension(constructor: Option[DFunction], companion: Option[DRI]) extends ExtraProperty[DClasslike]","description":"dotty.dokka.ClasslikeExtension","location":"api/dotty.dokka/-classlike-extension/index.html","searchKeys":["ClasslikeExtension","case class ClasslikeExtension(constructor: Option[DFunction], companion: Option[DRI]) extends ExtraProperty[DClasslike]"]},{"name":" object ClasslikeExtension extends BaseKey[DClasslike, ClasslikeExtension]","description":"dotty.dokka.ClasslikeExtension$","location":"api/dotty.dokka/-classlike-extension$/index.html","searchKeys":["ClasslikeExtension$"," object ClasslikeExtension extends BaseKey[DClasslike, ClasslikeExtension]"]},{"name":"override def getKey: ClasslikeExtension.type","description":"dotty.dokka.ClasslikeExtension.getKey","location":"api/dotty.dokka/-classlike-extension/get-key.html","searchKeys":["getKey","override def getKey: ClasslikeExtension.type"]},{"name":"override def getKey: IsInherited.type","description":"dotty.dokka.IsInherited.getKey","location":"api/dotty.dokka/-is-inherited/get-key.html","searchKeys":["getKey","override def getKey: IsInherited.type"]},{"name":"override def getKey: MethodExtension.type","description":"dotty.dokka.MethodExtension.getKey","location":"api/dotty.dokka/-method-extension/get-key.html","searchKeys":["getKey","override def getKey: MethodExtension.type"]},{"name":"override def getKey: ModuleExtension.type","description":"dotty.dokka.ModuleExtension.getKey","location":"api/dotty.dokka/-module-extension/get-key.html","searchKeys":["getKey","override def getKey: ModuleExtension.type"]},{"name":"override def getKey: ParameterExtension.type","description":"dotty.dokka.ParameterExtension.getKey","location":"api/dotty.dokka/-parameter-extension/get-key.html","searchKeys":["getKey","override def getKey: ParameterExtension.type"]},{"name":" def getKey(): Key[ContentNode,  <: <FromJavaObject>]","description":"dotty.dokka.ScalaCommentToContentConverter$.getKey","location":"api/dotty.dokka/-scala-comment-to-content-converter/-extra-link-attributes/get-key.html","searchKeys":["getKey"," def getKey(): Key[ContentNode,  <: <FromJavaObject>]"]},{"name":"override def getKey: SourceLinks.type","description":"dotty.dokka.SourceLinks.getKey","location":"api/dotty.dokka/-source-links/get-key.html","searchKeys":["getKey","override def getKey: SourceLinks.type"]},{"name":"override def getKey: CompositeMemberExtension.type","description":"dotty.dokka.model.api.CompositeMemberExtension.getKey","location":"api/dotty.dokka/model/api/-composite-member-extension/get-key.html","searchKeys":["getKey","override def getKey: CompositeMemberExtension.type"]},{"name":"case class ContentNodeParams(dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode])","description":"dotty.dokka.ContentNodeParams","location":"api/dotty.dokka/-content-node-params/index.html","searchKeys":["ContentNodeParams","case class ContentNodeParams(dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode])"]},{"name":" def dri: DRI","description":"dotty.dokka.ContentNodeParams.dri","location":"api/dotty.dokka/-content-node-params/dri.html","searchKeys":["dri"," def dri: DRI"]},{"name":" enum DocConfiguration extends BaseDocConfiguration","description":"dotty.dokka.DocConfiguration","location":"api/dotty.dokka/-doc-configuration/index.html","searchKeys":["DocConfiguration"," enum DocConfiguration extends BaseDocConfiguration"]},{"name":"case Sbt(args: Args, tastyFiles: List[String], rootCtx: Context)","description":"dotty.dokka.DocConfiguration$","location":"api/dotty.dokka/-doc-configuration/-sbt/index.html","searchKeys":["DocConfiguration$","case Sbt(args: Args, tastyFiles: List[String], rootCtx: Context)"]},{"name":" def enumLabel: String","description":"dotty.dokka.DocConfiguration$.enumLabel","location":"api/dotty.dokka/-doc-configuration/-sbt/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"dotty.dokka.model.api.Kind$.enumLabel","location":"api/dotty.dokka/model/api/-kind/-given/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"dotty.dokka.model.api.Origin$.enumLabel","location":"api/dotty.dokka/model/api/-origin/-inherited-from/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"dotty.dokka.model.api.Visibility$.enumLabel","location":"api/dotty.dokka/model/api/-visibility/-protected/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"dotty.dokka.model.api.VisibilityScope$.enumLabel","location":"api/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"dotty.dokka.tasty.comments.Query$.enumLabel","location":"api/dotty.dokka/tasty/comments/-query$/-qual/-id/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"tests.enumSignatures.Enum2$.enumLabel","location":"api/tests/enumSignatures/-enum2/-b/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def enumLabel: String","description":"tests.enumSignatures.Enum4$.enumLabel","location":"api/tests/enumSignatures/-enum4/-c/enum-label.html","searchKeys":["enumLabel"," def enumLabel: String"]},{"name":" def ordinal: Int","description":"dotty.dokka.DocConfiguration$.ordinal","location":"api/dotty.dokka/-doc-configuration/-standalone/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"dotty.dokka.model.api.Kind$.ordinal","location":"api/dotty.dokka/model/api/-kind/-given/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"dotty.dokka.model.api.Origin$.ordinal","location":"api/dotty.dokka/model/api/-origin/-inherited-from/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"dotty.dokka.model.api.Visibility$.ordinal","location":"api/dotty.dokka/model/api/-visibility/-private/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"dotty.dokka.model.api.VisibilityScope$.ordinal","location":"api/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"dotty.dokka.tasty.comments.Query$.ordinal","location":"api/dotty.dokka/tasty/comments/-query$/-qual/-id/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"tests.enumSignatures.Enum2$.ordinal","location":"api/tests/enumSignatures/-enum2/-b/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":" def ordinal: Int","description":"tests.enumSignatures.Enum4$.ordinal","location":"api/tests/enumSignatures/-enum4/-d/ordinal.html","searchKeys":["ordinal"," def ordinal: Int"]},{"name":"case class DocumentableElement(annotations: Signature, modifiers: Signature, name: String, signature: Signature, brief: Seq[ContentNode], originInfo: Signature, attributes: Map[String, String], params: ContentNodeParams) extends ScalaContentNode","description":"dotty.dokka.DocumentableElement","location":"api/dotty.dokka/-documentable-element/index.html","searchKeys":["DocumentableElement","case class DocumentableElement(annotations: Signature, modifiers: Signature, name: String, signature: Signature, brief: Seq[ContentNode], originInfo: Signature, attributes: Map[String, String], params: ContentNodeParams) extends ScalaContentNode"]},{"name":"override def newInstance(params: ContentNodeParams): ScalaContentNode","description":"dotty.dokka.DocumentableElement.newInstance","location":"api/dotty.dokka/-documentable-element/new-instance.html","searchKeys":["newInstance","override def newInstance(params: ContentNodeParams): ScalaContentNode"]},{"name":"override def newInstance(params: ContentNodeParams): ScalaContentNode","description":"dotty.dokka.DocumentableElementGroup.newInstance","location":"api/dotty.dokka/-documentable-element-group/new-instance.html","searchKeys":["newInstance","override def newInstance(params: ContentNodeParams): ScalaContentNode"]},{"name":"override def newInstance(params: ContentNodeParams): ScalaContentNode","description":"dotty.dokka.DocumentableFilter.newInstance","location":"api/dotty.dokka/-documentable-filter/new-instance.html","searchKeys":["newInstance","override def newInstance(params: ContentNodeParams): ScalaContentNode"]},{"name":"override def newInstance(params: ContentNodeParams): ScalaContentNode","description":"dotty.dokka.DocumentableList.newInstance","location":"api/dotty.dokka/-documentable-list/new-instance.html","searchKeys":["newInstance","override def newInstance(params: ContentNodeParams): ScalaContentNode"]},{"name":" def newInstance(params: ContentNodeParams): ScalaContentNode","description":"dotty.dokka.ScalaContentNode.newInstance","location":"api/dotty.dokka/-scala-content-node/new-instance.html","searchKeys":["newInstance"," def newInstance(params: ContentNodeParams): ScalaContentNode"]},{"name":"case class DocumentableElementGroup(header: Signature, elements: Seq[DocumentableElement], params: ContentNodeParams) extends ScalaContentNode","description":"dotty.dokka.DocumentableElementGroup","location":"api/dotty.dokka/-documentable-element-group/index.html","searchKeys":["DocumentableElementGroup","case class DocumentableElementGroup(header: Signature, elements: Seq[DocumentableElement], params: ContentNodeParams) extends ScalaContentNode"]},{"name":"override def getChildren: List[ContentNode]","description":"dotty.dokka.DocumentableElementGroup.getChildren","location":"api/dotty.dokka/-documentable-element-group/get-children.html","searchKeys":["getChildren","override def getChildren: List[ContentNode]"]},{"name":"override def getChildren: List[ContentNode]","description":"dotty.dokka.DocumentableList.getChildren","location":"api/dotty.dokka/-documentable-list/get-children.html","searchKeys":["getChildren","override def getChildren: List[ContentNode]"]},{"name":"override def getChildren: List[ContentNode]","description":"dotty.dokka.HierarchyGraphContentNode.getChildren","location":"api/dotty.dokka/-hierarchy-graph-content-node/get-children.html","searchKeys":["getChildren","override def getChildren: List[ContentNode]"]},{"name":"override def getChildren: List[ContentNode]","description":"dotty.dokka.HtmlContentNode.getChildren","location":"api/dotty.dokka/-html-content-node/get-children.html","searchKeys":["getChildren","override def getChildren: List[ContentNode]"]},{"name":"override def getChildren: List[ContentNode]","description":"dotty.dokka.ScalaContentNode.getChildren","location":"api/dotty.dokka/-scala-content-node/get-children.html","searchKeys":["getChildren","override def getChildren: List[ContentNode]"]},{"name":"override def hasAnyContent: Boolean","description":"dotty.dokka.DocumentableElementGroup.hasAnyContent","location":"api/dotty.dokka/-documentable-element-group/has-any-content.html","searchKeys":["hasAnyContent","override def hasAnyContent: Boolean"]},{"name":"override def hasAnyContent: Boolean","description":"dotty.dokka.DocumentableList.hasAnyContent","location":"api/dotty.dokka/-documentable-list/has-any-content.html","searchKeys":["hasAnyContent","override def hasAnyContent: Boolean"]},{"name":"override def hasAnyContent: Boolean","description":"dotty.dokka.HierarchyGraphContentNode.hasAnyContent","location":"api/dotty.dokka/-hierarchy-graph-content-node/has-any-content.html","searchKeys":["hasAnyContent","override def hasAnyContent: Boolean"]},{"name":"override def hasAnyContent: Boolean","description":"dotty.dokka.HtmlContentNode.hasAnyContent","location":"api/dotty.dokka/-html-content-node/has-any-content.html","searchKeys":["hasAnyContent","override def hasAnyContent: Boolean"]},{"name":"override def hasAnyContent: Boolean","description":"dotty.dokka.ScalaContentNode.hasAnyContent","location":"api/dotty.dokka/-scala-content-node/has-any-content.html","searchKeys":["hasAnyContent","override def hasAnyContent: Boolean"]},{"name":"case class DocumentableFilter(params: ContentNodeParams) extends ScalaContentNode","description":"dotty.dokka.DocumentableFilter","location":"api/dotty.dokka/-documentable-filter/index.html","searchKeys":["DocumentableFilter","case class DocumentableFilter(params: ContentNodeParams) extends ScalaContentNode"]},{"name":"case class DocumentableGroup(name: Option[String | Documentable], documenables: Seq[Documentable | DocumentableSubGroup])","description":"dotty.dokka.DocumentableGroup","location":"api/dotty.dokka/-documentable-group/index.html","searchKeys":["DocumentableGroup","case class DocumentableGroup(name: Option[String | Documentable], documenables: Seq[Documentable | DocumentableSubGroup])"]},{"name":"case class DocumentableList(groupName: Signature, elements: Seq[DocumentableElement | DocumentableElementGroup], params: ContentNodeParams) extends ScalaContentNode","description":"dotty.dokka.DocumentableList","location":"api/dotty.dokka/-documentable-list/index.html","searchKeys":["DocumentableList","case class DocumentableList(groupName: Signature, elements: Seq[DocumentableElement | DocumentableElementGroup], params: ContentNodeParams) extends ScalaContentNode"]},{"name":"case class DocumentableSubGroup(title: Signature, extensions: Seq[Documentable])","description":"dotty.dokka.DocumentableSubGroup","location":"api/dotty.dokka/-documentable-sub-group/index.html","searchKeys":["DocumentableSubGroup","case class DocumentableSubGroup(title: Signature, extensions: Seq[Documentable])"]},{"name":" object DotDiagramBuilder","description":"dotty.dokka.DotDiagramBuilder$","location":"api/dotty.dokka/-dot-diagram-builder/index.html","searchKeys":["DotDiagramBuilder$"," object DotDiagramBuilder"]},{"name":" def build(diagram: HierarchyGraph, renderer: SignatureRenderer): String","description":"dotty.dokka.DotDiagramBuilder$.build","location":"api/dotty.dokka/-dot-diagram-builder/build.html","searchKeys":["build"," def build(diagram: HierarchyGraph, renderer: SignatureRenderer): String"]},{"name":" def build(): List[ContentGroup]","description":"dotty.dokka.ScalaPageContentBuilder.build","location":"api/dotty.dokka/-scala-page-content-builder/-scala-table-builder/build.html","searchKeys":["build"," def build(): List[ContentGroup]"]},{"name":"case class DottyDokkaConfig(docConfiguration: DocConfiguration) extends DokkaConfiguration","description":"dotty.dokka.DottyDokkaConfig","location":"api/dotty.dokka/-dotty-dokka-config/index.html","searchKeys":["DottyDokkaConfig","case class DottyDokkaConfig(docConfiguration: DocConfiguration) extends DokkaConfiguration"]},{"name":"override def getCacheRoot: File","description":"dotty.dokka.DottyDokkaConfig.getCacheRoot","location":"api/dotty.dokka/-dotty-dokka-config/get-cache-root.html","searchKeys":["getCacheRoot","override def getCacheRoot: File"]},{"name":"override def getFailOnWarning: Boolean","description":"dotty.dokka.DottyDokkaConfig.getFailOnWarning","location":"api/dotty.dokka/-dotty-dokka-config/get-fail-on-warning.html","searchKeys":["getFailOnWarning","override def getFailOnWarning: Boolean"]},{"name":"override def getModuleName(): String","description":"dotty.dokka.DottyDokkaConfig.getModuleName","location":"api/dotty.dokka/-dotty-dokka-config/get-module-name.html","searchKeys":["getModuleName","override def getModuleName(): String"]},{"name":"override def getModuleVersion(): String","description":"dotty.dokka.DottyDokkaConfig.getModuleVersion","location":"api/dotty.dokka/-dotty-dokka-config/get-module-version.html","searchKeys":["getModuleVersion","override def getModuleVersion(): String"]},{"name":"override def getModules: List[DokkaModuleDescription]","description":"dotty.dokka.DottyDokkaConfig.getModules","location":"api/dotty.dokka/-dotty-dokka-config/get-modules.html","searchKeys":["getModules","override def getModules: List[DokkaModuleDescription]"]},{"name":"override def getOfflineMode: Boolean","description":"dotty.dokka.DottyDokkaConfig.getOfflineMode","location":"api/dotty.dokka/-dotty-dokka-config/get-offline-mode.html","searchKeys":["getOfflineMode","override def getOfflineMode: Boolean"]},{"name":"override def getOutputDir: File","description":"dotty.dokka.DottyDokkaConfig.getOutputDir","location":"api/dotty.dokka/-dotty-dokka-config/get-output-dir.html","searchKeys":["getOutputDir","override def getOutputDir: File"]},{"name":"override def getPluginsClasspath: List[File]","description":"dotty.dokka.DottyDokkaConfig.getPluginsClasspath","location":"api/dotty.dokka/-dotty-dokka-config/get-plugins-classpath.html","searchKeys":["getPluginsClasspath","override def getPluginsClasspath: List[File]"]},{"name":"override def getPluginsConfiguration: List[PluginConfiguration]","description":"dotty.dokka.DottyDokkaConfig.getPluginsConfiguration","location":"api/dotty.dokka/-dotty-dokka-config/get-plugins-configuration.html","searchKeys":["getPluginsConfiguration","override def getPluginsConfiguration: List[PluginConfiguration]"]},{"name":"override def getSourceSets: List[DokkaSourceSet]","description":"dotty.dokka.DottyDokkaConfig.getSourceSets","location":"api/dotty.dokka/-dotty-dokka-config/get-source-sets.html","searchKeys":["getSourceSets","override def getSourceSets: List[DokkaSourceSet]"]},{"name":"override def getSourceSets: Set[DisplaySourceSet]","description":"dotty.dokka.HierarchyGraphContentNode.getSourceSets","location":"api/dotty.dokka/-hierarchy-graph-content-node/get-source-sets.html","searchKeys":["getSourceSets","override def getSourceSets: Set[DisplaySourceSet]"]},{"name":"override def getSourceSets: Set[DisplaySourceSet]","description":"dotty.dokka.HtmlContentNode.getSourceSets","location":"api/dotty.dokka/-html-content-node/get-source-sets.html","searchKeys":["getSourceSets","override def getSourceSets: Set[DisplaySourceSet]"]},{"name":"override def getSourceSets: Set[DisplaySourceSet]","description":"dotty.dokka.ScalaContentNode.getSourceSets","location":"api/dotty.dokka/-scala-content-node/get-source-sets.html","searchKeys":["getSourceSets","override def getSourceSets: Set[DisplaySourceSet]"]},{"name":" def mkSourceSet: DokkaSourceSet","description":"dotty.dokka.DottyDokkaConfig.mkSourceSet","location":"api/dotty.dokka/-dotty-dokka-config/mk-source-set.html","searchKeys":["mkSourceSet"," def mkSourceSet: DokkaSourceSet"]},{"name":" class DottyDokkaPlugin extends DokkaJavaPlugin","description":"dotty.dokka.DottyDokkaPlugin","location":"api/dotty.dokka/-dotty-dokka-plugin/index.html","searchKeys":["DottyDokkaPlugin"," class DottyDokkaPlugin extends DokkaJavaPlugin"]},{"name":" def after[T](exts: Extension[, , ]*): ExtensionBuilder[T]","description":"dotty.dokka.DottyDokkaPlugin$package$.extension_after","location":"api/dotty.dokka/extension_after.html","searchKeys":["extension_after"," def after[T](exts: Extension[, , ]*): ExtensionBuilder[T]"]},{"name":" def before[T](exts: Extension[, , ]*): ExtensionBuilder[T]","description":"dotty.dokka.DottyDokkaPlugin$package$.extension_before","location":"api/dotty.dokka/extension_before.html","searchKeys":["extension_before"," def before[T](exts: Extension[, , ]*): ExtensionBuilder[T]"]},{"name":" object EmptyModuleProvider extends JavaSourceToDocumentableTranslator","description":"dotty.dokka.EmptyModuleProvider$","location":"api/dotty.dokka/-empty-module-provider/index.html","searchKeys":["EmptyModuleProvider$"," object EmptyModuleProvider extends JavaSourceToDocumentableTranslator"]},{"name":"override def process(sourceSet: DokkaConfiguration$DokkaSourceSet, context: DokkaContext): DModule","description":"dotty.dokka.EmptyModuleProvider$.process","location":"api/dotty.dokka/-empty-module-provider/process.html","searchKeys":["process","override def process(sourceSet: DokkaConfiguration$DokkaSourceSet, context: DokkaContext): DModule"]},{"name":"override def process(rawSourceSet: DokkaConfiguration$DokkaSourceSet, cxt: DokkaContext): DModule","description":"dotty.dokka.ScalaModuleProvider$.process","location":"api/dotty.dokka/-scala-module-provider/process.html","searchKeys":["process","override def process(rawSourceSet: DokkaConfiguration$DokkaSourceSet, cxt: DokkaContext): DModule"]},{"name":"override def process(args: Array[String], rootCtx: Context): Reporter","description":"dotty.tools.dottydoc.Main$.process","location":"api/dotty.tools/dottydoc/-main/process.html","searchKeys":["process","override def process(args: Array[String], rootCtx: Context): Reporter"]},{"name":"case class HierarchyGraphContentNode(diagram: HierarchyGraph, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode","description":"dotty.dokka.HierarchyGraphContentNode","location":"api/dotty.dokka/-hierarchy-graph-content-node/index.html","searchKeys":["HierarchyGraphContentNode","case class HierarchyGraphContentNode(diagram: HierarchyGraph, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode"]},{"name":"override def getDci: DCI","description":"dotty.dokka.HierarchyGraphContentNode.getDci","location":"api/dotty.dokka/-hierarchy-graph-content-node/get-dci.html","searchKeys":["getDci","override def getDci: DCI"]},{"name":"override def getDci: DCI","description":"dotty.dokka.HtmlContentNode.getDci","location":"api/dotty.dokka/-html-content-node/get-dci.html","searchKeys":["getDci","override def getDci: DCI"]},{"name":"override def getDci: DCI","description":"dotty.dokka.ScalaContentNode.getDci","location":"api/dotty.dokka/-scala-content-node/get-dci.html","searchKeys":["getDci","override def getDci: DCI"]},{"name":"override def getExtra: PropertyContainer[ContentNode]","description":"dotty.dokka.HierarchyGraphContentNode.getExtra","location":"api/dotty.dokka/-hierarchy-graph-content-node/get-extra.html","searchKeys":["getExtra","override def getExtra: PropertyContainer[ContentNode]"]},{"name":"override def getExtra: PropertyContainer[ContentNode]","description":"dotty.dokka.HtmlContentNode.getExtra","location":"api/dotty.dokka/-html-content-node/get-extra.html","searchKeys":["getExtra","override def getExtra: PropertyContainer[ContentNode]"]},{"name":"override def getExtra: PropertyContainer[ContentNode]","description":"dotty.dokka.ScalaContentNode.getExtra","location":"api/dotty.dokka/-scala-content-node/get-extra.html","searchKeys":["getExtra","override def getExtra: PropertyContainer[ContentNode]"]},{"name":"override def getStyle: Set[Style]","description":"dotty.dokka.HierarchyGraphContentNode.getStyle","location":"api/dotty.dokka/-hierarchy-graph-content-node/get-style.html","searchKeys":["getStyle","override def getStyle: Set[Style]"]},{"name":"override def getStyle: Set[Style]","description":"dotty.dokka.HtmlContentNode.getStyle","location":"api/dotty.dokka/-html-content-node/get-style.html","searchKeys":["getStyle","override def getStyle: Set[Style]"]},{"name":"override def getStyle: Set[Style]","description":"dotty.dokka.ScalaContentNode.getStyle","location":"api/dotty.dokka/-scala-content-node/get-style.html","searchKeys":["getStyle","override def getStyle: Set[Style]"]},{"name":"override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode","description":"dotty.dokka.HierarchyGraphContentNode.withNewExtras","location":"api/dotty.dokka/-hierarchy-graph-content-node/with-new-extras.html","searchKeys":["withNewExtras","override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode"]},{"name":"override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode","description":"dotty.dokka.HtmlContentNode.withNewExtras","location":"api/dotty.dokka/-html-content-node/with-new-extras.html","searchKeys":["withNewExtras","override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode"]},{"name":"override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode","description":"dotty.dokka.ScalaContentNode.withNewExtras","location":"api/dotty.dokka/-scala-content-node/with-new-extras.html","searchKeys":["withNewExtras","override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode"]},{"name":" def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode","description":"dotty.dokka.HierarchyGraphContentNode.withSourceSets","location":"api/dotty.dokka/-hierarchy-graph-content-node/with-source-sets.html","searchKeys":["withSourceSets"," def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode"]},{"name":" def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode","description":"dotty.dokka.HtmlContentNode.withSourceSets","location":"api/dotty.dokka/-html-content-node/with-source-sets.html","searchKeys":["withSourceSets"," def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode"]},{"name":" def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode","description":"dotty.dokka.ScalaContentNode.withSourceSets","location":"api/dotty.dokka/-scala-content-node/with-source-sets.html","searchKeys":["withSourceSets"," def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode"]},{"name":"case class HtmlContentNode(body: String, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode","description":"dotty.dokka.HtmlContentNode","location":"api/dotty.dokka/-html-content-node/index.html","searchKeys":["HtmlContentNode","case class HtmlContentNode(body: String, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode"]},{"name":"case class ImplicitConversion(conversion: Documentable, from: DRI, to: DRI)","description":"dotty.dokka.ImplicitConversion","location":"api/dotty.dokka/-implicit-conversion/index.html","searchKeys":["ImplicitConversion","case class ImplicitConversion(conversion: Documentable, from: DRI, to: DRI)"]},{"name":"case class ImplicitConversion(from: DRI, to: DRI, fromType: Signature, toType: Signature)","description":"dotty.dokka.model.api.ImplicitConversion","location":"api/dotty.dokka/model/api/-implicit-conversion/index.html","searchKeys":["ImplicitConversion","case class ImplicitConversion(from: DRI, to: DRI, fromType: Signature, toType: Signature)"]},{"name":" class ImplicitMembersExtensionTransformer(ctx: DokkaContext) extends DocumentableTransformer","description":"dotty.dokka.ImplicitMembersExtensionTransformer","location":"api/dotty.dokka/-implicit-members-extension-transformer/index.html","searchKeys":["ImplicitMembersExtensionTransformer"," class ImplicitMembersExtensionTransformer(ctx: DokkaContext) extends DocumentableTransformer"]},{"name":"override def invoke(original: DModule, context: DokkaContext): DModule","description":"dotty.dokka.ImplicitMembersExtensionTransformer.invoke","location":"api/dotty.dokka/-implicit-members-extension-transformer/invoke.html","searchKeys":["invoke","override def invoke(original: DModule, context: DokkaContext): DModule"]},{"name":"override def invoke(original: DModule, context: DokkaContext): DModule","description":"dotty.dokka.InheritanceInformationTransformer.invoke","location":"api/dotty.dokka/-inheritance-information-transformer/invoke.html","searchKeys":["invoke","override def invoke(original: DModule, context: DokkaContext): DModule"]},{"name":"override def invoke(input: RootPageNode): RootPageNode","description":"dotty.dokka.PackageHierarchyTransformer.invoke","location":"api/dotty.dokka/-package-hierarchy-transformer/invoke.html","searchKeys":["invoke","override def invoke(input: RootPageNode): RootPageNode"]},{"name":"override def invoke(module: DModule): ModulePageNode","description":"dotty.dokka.ScalaDocumentableToPageTranslator.invoke","location":"api/dotty.dokka/-scala-documentable-to-page-translator/invoke.html","searchKeys":["invoke","override def invoke(module: DModule): ModulePageNode"]},{"name":"override def invoke(input: RootPageNode): RootPageNode","description":"dotty.dokka.ScalaEmbeddedResourceAppender.invoke","location":"api/dotty.dokka/-scala-embedded-resource-appender/invoke.html","searchKeys":["invoke","override def invoke(input: RootPageNode): RootPageNode"]},{"name":"override def invoke(input: RootPageNode): RootPageNode","description":"dotty.dokka.ScalaResourceInstaller.invoke","location":"api/dotty.dokka/-scala-resource-installer/invoke.html","searchKeys":["invoke","override def invoke(input: RootPageNode): RootPageNode"]},{"name":"override def invoke(input: DModule, context: DokkaContext): DModule","description":"dotty.dokka.ScalaSourceLinksTransformer.invoke","location":"api/dotty.dokka/-scala-source-links-transformer/invoke.html","searchKeys":["invoke","override def invoke(input: DModule, context: DokkaContext): DModule"]},{"name":" class InheritanceInformationTransformer(val ctx: DokkaContext) extends DocumentableTransformer","description":"dotty.dokka.InheritanceInformationTransformer","location":"api/dotty.dokka/-inheritance-information-transformer/index.html","searchKeys":["InheritanceInformationTransformer"," class InheritanceInformationTransformer(val ctx: DokkaContext) extends DocumentableTransformer"]},{"name":"case class InlineSignatureBuilder(names: Signature, preName: Signature) extends SignatureBuilder","description":"dotty.dokka.InlineSignatureBuilder","location":"api/dotty.dokka/-inline-signature-builder/index.html","searchKeys":["InlineSignatureBuilder","case class InlineSignatureBuilder(names: Signature, preName: Signature) extends SignatureBuilder"]},{"name":" object InlineSignatureBuilder","description":"dotty.dokka.InlineSignatureBuilder$","location":"api/dotty.dokka/-inline-signature-builder$/index.html","searchKeys":["InlineSignatureBuilder$"," object InlineSignatureBuilder"]},{"name":" def typeSignatureFor(d: Documentable): Signature","description":"dotty.dokka.InlineSignatureBuilder$.typeSignatureFor","location":"api/dotty.dokka/-inline-signature-builder$/type-signature-for.html","searchKeys":["typeSignatureFor"," def typeSignatureFor(d: Documentable): Signature"]},{"name":"override def driLink(text: String, dri: DRI): SignatureBuilder","description":"dotty.dokka.InlineSignatureBuilder.driLink","location":"api/dotty.dokka/-inline-signature-builder/dri-link.html","searchKeys":["driLink","override def driLink(text: String, dri: DRI): SignatureBuilder"]},{"name":" def driLink(text: String, address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.driLink","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/dri-link.html","searchKeys":["driLink"," def driLink(text: String, address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def driLink(text: String, dri: DRI): SignatureBuilder","description":"dotty.dokka.ScalaSignatureProvider.driLink","location":"api/dotty.dokka/-scala-signature-provider/-content-node-builder/dri-link.html","searchKeys":["driLink"," def driLink(text: String, dri: DRI): SignatureBuilder"]},{"name":" def driLink(text: String, dri: DRI): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.driLink","location":"api/dotty.dokka/-signature-builder/dri-link.html","searchKeys":["driLink"," def driLink(text: String, dri: DRI): SignatureBuilder"]},{"name":"override def name(str: String, dri: DRI): SignatureBuilder","description":"dotty.dokka.InlineSignatureBuilder.name","location":"api/dotty.dokka/-inline-signature-builder/name.html","searchKeys":["name","override def name(str: String, dri: DRI): SignatureBuilder"]},{"name":" def name(str: String, dri: DRI): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.name","location":"api/dotty.dokka/-signature-builder/name.html","searchKeys":["name"," def name(str: String, dri: DRI): SignatureBuilder"]},{"name":"override def text(str: String): SignatureBuilder","description":"dotty.dokka.InlineSignatureBuilder.text","location":"api/dotty.dokka/-inline-signature-builder/text.html","searchKeys":["text","override def text(str: String): SignatureBuilder"]},{"name":" def text(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.text","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/text.html","searchKeys":["text"," def text(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def text(str: String): SignatureBuilder","description":"dotty.dokka.ScalaSignatureProvider.text","location":"api/dotty.dokka/-scala-signature-provider/-content-node-builder/text.html","searchKeys":["text"," def text(str: String): SignatureBuilder"]},{"name":" def text(str: String): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.text","location":"api/dotty.dokka/-signature-builder/text.html","searchKeys":["text"," def text(str: String): SignatureBuilder"]},{"name":" def text(str: String): Text","description":"dotty.dokka.tasty.comments.dkk$.text","location":"api/dotty.dokka/tasty/comments/dkk/text.html","searchKeys":["text"," def text(str: String): Text"]},{"name":"case class IsInherited(flag: Boolean) extends ExtraProperty[Documentable]","description":"dotty.dokka.IsInherited","location":"api/dotty.dokka/-is-inherited/index.html","searchKeys":["IsInherited","case class IsInherited(flag: Boolean) extends ExtraProperty[Documentable]"]},{"name":" object IsInherited extends BaseKey[Documentable, IsInherited]","description":"dotty.dokka.IsInherited$","location":"api/dotty.dokka/-is-inherited$/index.html","searchKeys":["IsInherited$"," object IsInherited extends BaseKey[Documentable, IsInherited]"]},{"name":" object JList","description":"dotty.dokka.JList$","location":"api/dotty.dokka/-j-list/index.html","searchKeys":["JList$"," object JList"]},{"name":" object JSet","description":"dotty.dokka.JSet$","location":"api/dotty.dokka/-j-set/index.html","searchKeys":["JSet$"," object JSet"]},{"name":" object Main","description":"dotty.dokka.Main$","location":"api/dotty.dokka/-main/index.html","searchKeys":["Main$"," object Main"]},{"name":" object Main extends Driver","description":"dotty.tools.dottydoc.Main$","location":"api/dotty.tools/dottydoc/-main/index.html","searchKeys":["Main$"," object Main extends Driver"]},{"name":" def main(args: Array[String]): Unit","description":"dotty.dokka.Main$.main","location":"api/dotty.dokka/-main/main.html","searchKeys":["main"," def main(args: Array[String]): Unit"]},{"name":"case class MethodExtension(parametersListSizes: Seq[Int]) extends ExtraProperty[DFunction]","description":"dotty.dokka.MethodExtension","location":"api/dotty.dokka/-method-extension/index.html","searchKeys":["MethodExtension","case class MethodExtension(parametersListSizes: Seq[Int]) extends ExtraProperty[DFunction]"]},{"name":" object MethodExtension extends BaseKey[DFunction, MethodExtension]","description":"dotty.dokka.MethodExtension$","location":"api/dotty.dokka/-method-extension$/index.html","searchKeys":["MethodExtension$"," object MethodExtension extends BaseKey[DFunction, MethodExtension]"]},{"name":"case class ModuleExtension(driMap: Map[DRI, Member]) extends ExtraProperty[DModule]","description":"dotty.dokka.ModuleExtension","location":"api/dotty.dokka/-module-extension/index.html","searchKeys":["ModuleExtension","case class ModuleExtension(driMap: Map[DRI, Member]) extends ExtraProperty[DModule]"]},{"name":" object ModuleExtension extends BaseKey[DModule, ModuleExtension]","description":"dotty.dokka.ModuleExtension$","location":"api/dotty.dokka/-module-extension$/index.html","searchKeys":["ModuleExtension$"," object ModuleExtension extends BaseKey[DModule, ModuleExtension]"]},{"name":" class PackageHierarchyTransformer(context: DokkaContext) extends PageTransformer","description":"dotty.dokka.PackageHierarchyTransformer","location":"api/dotty.dokka/-package-hierarchy-transformer/index.html","searchKeys":["PackageHierarchyTransformer"," class PackageHierarchyTransformer(context: DokkaContext) extends PageTransformer"]},{"name":" def rearangePackagePages(page: ModulePageNode): ModulePageNode","description":"dotty.dokka.PackageHierarchyTransformer.rearangePackagePages","location":"api/dotty.dokka/-package-hierarchy-transformer/rearange-package-pages.html","searchKeys":["rearangePackagePages"," def rearangePackagePages(page: ModulePageNode): ModulePageNode"]},{"name":"case class ParameterExtension(isExtendedSymbol: Boolean, isGrouped: Boolean) extends ExtraProperty[DParameter]","description":"dotty.dokka.ParameterExtension","location":"api/dotty.dokka/-parameter-extension/index.html","searchKeys":["ParameterExtension","case class ParameterExtension(isExtendedSymbol: Boolean, isGrouped: Boolean) extends ExtraProperty[DParameter]"]},{"name":" object ParameterExtension extends BaseKey[DParameter, ParameterExtension]","description":"dotty.dokka.ParameterExtension$","location":"api/dotty.dokka/-parameter-extension$/index.html","searchKeys":["ParameterExtension$"," object ParameterExtension extends BaseKey[DParameter, ParameterExtension]"]},{"name":" class RawArgs","description":"dotty.dokka.RawArgs","location":"api/dotty.dokka/-raw-args/index.html","searchKeys":["RawArgs"," class RawArgs"]},{"name":" def toArgs: Args","description":"dotty.dokka.RawArgs.toArgs","location":"api/dotty.dokka/-raw-args/to-args.html","searchKeys":["toArgs"," def toArgs: Args"]},{"name":"case class ExtraLinkAttributes(title: Option[String]) extends ExtraProperty[ContentNode]","description":"dotty.dokka.ScalaCommentToContentConverter$","location":"api/dotty.dokka/-scala-comment-to-content-converter/-extra-link-attributes/index.html","searchKeys":["ScalaCommentToContentConverter$","case class ExtraLinkAttributes(title: Option[String]) extends ExtraProperty[ContentNode]"]},{"name":"override def buildContent(docTag: DocTag, dci: DCI, sourceSets: Set[ <: DokkaConfiguration$DokkaSourceSet], styles: Set[ <: Style], extra: PropertyContainer[ContentNode]): List[ContentNode]","description":"dotty.dokka.ScalaCommentToContentConverter$.buildContent","location":"api/dotty.dokka/-scala-comment-to-content-converter/build-content.html","searchKeys":["buildContent","override def buildContent(docTag: DocTag, dci: DCI, sourceSets: Set[ <: DokkaConfiguration$DokkaSourceSet], styles: Set[ <: Style], extra: PropertyContainer[ContentNode]): List[ContentNode]"]},{"name":" def buildContent(): ContentDivergentInstance","description":"dotty.dokka.ScalaPageContentBuilder.buildContent","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/build-content.html","searchKeys":["buildContent"," def buildContent(): ContentDivergentInstance"]},{"name":"abstract class ScalaContentNode(params: ContentNodeParams) extends ContentNode","description":"dotty.dokka.ScalaContentNode","location":"api/dotty.dokka/-scala-content-node/index.html","searchKeys":["ScalaContentNode","abstract class ScalaContentNode(params: ContentNodeParams) extends ContentNode"]},{"name":" class ScalaDocumentableToPageTranslator(val commentsToContentConverter: CommentsToContentConverter, val signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DocumentableToPageTranslator","description":"dotty.dokka.ScalaDocumentableToPageTranslator","location":"api/dotty.dokka/-scala-documentable-to-page-translator/index.html","searchKeys":["ScalaDocumentableToPageTranslator"," class ScalaDocumentableToPageTranslator(val commentsToContentConverter: CommentsToContentConverter, val signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DocumentableToPageTranslator"]},{"name":" class ScalaEmbeddedResourceAppender extends PageTransformer","description":"dotty.dokka.ScalaEmbeddedResourceAppender","location":"api/dotty.dokka/-scala-embedded-resource-appender/index.html","searchKeys":["ScalaEmbeddedResourceAppender"," class ScalaEmbeddedResourceAppender extends PageTransformer"]},{"name":" class ScalaHtmlRenderer(ctx: DokkaContext) extends SiteRenderer","description":"dotty.dokka.ScalaHtmlRenderer","location":"api/dotty.dokka/-scala-html-renderer/index.html","searchKeys":["ScalaHtmlRenderer"," class ScalaHtmlRenderer(ctx: DokkaContext) extends SiteRenderer"]},{"name":"override def buildCodeBlock(f: FlowContent, code: ContentCodeBlock, pageContext: ContentPage): Unit","description":"dotty.dokka.ScalaHtmlRenderer.buildCodeBlock","location":"api/dotty.dokka/-scala-html-renderer/build-code-block.html","searchKeys":["buildCodeBlock","override def buildCodeBlock(f: FlowContent, code: ContentCodeBlock, pageContext: ContentPage): Unit"]},{"name":"override def buildContentNode(f: FlowContent, node: ContentNode, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit","description":"dotty.dokka.ScalaHtmlRenderer.buildContentNode","location":"api/dotty.dokka/-scala-html-renderer/build-content-node.html","searchKeys":["buildContentNode","override def buildContentNode(f: FlowContent, node: ContentNode, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit"]},{"name":" def buildDescriptionList(node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): String","description":"dotty.dokka.ScalaHtmlRenderer.buildDescriptionList","location":"api/dotty.dokka/-scala-html-renderer/build-description-list.html","searchKeys":["buildDescriptionList"," def buildDescriptionList(node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): String"]},{"name":" def buildDiagram(f: FlowContent, diagram: HierarchyGraph, pageContext: ContentPage): Unit","description":"dotty.dokka.ScalaHtmlRenderer.buildDiagram","location":"api/dotty.dokka/-scala-html-renderer/build-diagram.html","searchKeys":["buildDiagram"," def buildDiagram(f: FlowContent, diagram: HierarchyGraph, pageContext: ContentPage): Unit"]},{"name":"override def buildHtml(page: PageNode, resources: List[String], kotlinxContent: FlowContentConsumer): String","description":"dotty.dokka.ScalaHtmlRenderer.buildHtml","location":"api/dotty.dokka/-scala-html-renderer/build-html.html","searchKeys":["buildHtml","override def buildHtml(page: PageNode, resources: List[String], kotlinxContent: FlowContentConsumer): String"]},{"name":"override def buildResolvedLink(f: FlowContent, node: ContentResolvedLink, pageContext: ContentPage, sourceSetRestriction: Set[DisplaySourceSet]): Unit","description":"dotty.dokka.ScalaHtmlRenderer.buildResolvedLink","location":"api/dotty.dokka/-scala-html-renderer/build-resolved-link.html","searchKeys":["buildResolvedLink","override def buildResolvedLink(f: FlowContent, node: ContentResolvedLink, pageContext: ContentPage, sourceSetRestriction: Set[DisplaySourceSet]): Unit"]},{"name":"override def buildTable(f: FlowContent, node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit","description":"dotty.dokka.ScalaHtmlRenderer.buildTable","location":"api/dotty.dokka/-scala-html-renderer/build-table.html","searchKeys":["buildTable","override def buildTable(f: FlowContent, node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit"]},{"name":"override def wrapGroup(f: FlowContent, node: ContentGroup, pageContext: ContentPage, childrenCallback: FlowContentConsumer): Unit","description":"dotty.dokka.ScalaHtmlRenderer.wrapGroup","location":"api/dotty.dokka/-scala-html-renderer/wrap-group.html","searchKeys":["wrapGroup","override def wrapGroup(f: FlowContent, node: ContentGroup, pageContext: ContentPage, childrenCallback: FlowContentConsumer): Unit"]},{"name":" object ScalaModuleProvider extends JavaSourceToDocumentableTranslator","description":"dotty.dokka.ScalaModuleProvider$","location":"api/dotty.dokka/-scala-module-provider/index.html","searchKeys":["ScalaModuleProvider$"," object ScalaModuleProvider extends JavaSourceToDocumentableTranslator"]},{"name":"case class ScalaDivergentInstanceBuilder(mainDRI: Set[DRI], mainKind: Kind, mainSourcesetData: Set[DokkaConfiguration$DokkaSourceSet], mainStyles: Set[Style], mainExtra: PropertyContainer[ContentNode], before: Option[ContentNode], divergent: ContentNode, after: Option[ContentNode])","description":"dotty.dokka.ScalaPageContentBuilder","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/index.html","searchKeys":["ScalaPageContentBuilder","case class ScalaDivergentInstanceBuilder(mainDRI: Set[DRI], mainKind: Kind, mainSourcesetData: Set[DokkaConfiguration$DokkaSourceSet], mainStyles: Set[Style], mainExtra: PropertyContainer[ContentNode], before: Option[ContentNode], divergent: ContentNode, after: Option[ContentNode])"]},{"name":" def addChild(c: ContentNode): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.addChild","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/add-child.html","searchKeys":["addChild"," def addChild(c: ContentNode): ScalaDocumentableContentBuilder"]},{"name":" def addChildren(c: Seq[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.addChildren","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/add-children.html","searchKeys":["addChildren"," def addChildren(c: Seq[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def after(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder","description":"dotty.dokka.ScalaPageContentBuilder.after","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/after.html","searchKeys":["after"," def after(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder"]},{"name":" def before(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder","description":"dotty.dokka.ScalaPageContentBuilder.before","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/before.html","searchKeys":["before"," def before(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder"]},{"name":" def cell(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaTableBuilder","description":"dotty.dokka.ScalaPageContentBuilder.cell","location":"api/dotty.dokka/-scala-page-content-builder/-scala-table-builder/cell.html","searchKeys":["cell"," def cell(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaTableBuilder"]},{"name":" def comment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.comment","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/comment.html","searchKeys":["comment"," def comment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def contentForBrief(d: Documentable): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.contentForBrief","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/content-for-brief.html","searchKeys":["contentForBrief"," def contentForBrief(d: Documentable): ScalaDocumentableContentBuilder"]},{"name":" def contentForDRI(dri: DRI, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup","description":"dotty.dokka.ScalaPageContentBuilder.contentForDRI","location":"api/dotty.dokka/-scala-page-content-builder/content-for-d-r-i.html","searchKeys":["contentForDRI"," def contentForDRI(dri: DRI, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup"]},{"name":" def contentForDRIs(dris: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup","description":"dotty.dokka.ScalaPageContentBuilder.contentForDRIs","location":"api/dotty.dokka/-scala-page-content-builder/content-for-d-r-is.html","searchKeys":["contentForDRIs"," def contentForDRIs(dris: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup"]},{"name":" def contentForDocumentable(d: Documentable, kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup","description":"dotty.dokka.ScalaPageContentBuilder.contentForDocumentable","location":"api/dotty.dokka/-scala-page-content-builder/content-for-documentable.html","searchKeys":["contentForDocumentable"," def contentForDocumentable(d: Documentable, kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup"]},{"name":" def cover(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.cover","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/cover.html","searchKeys":["cover"," def cover(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def defaultHeaders: List[ContentGroup]","description":"dotty.dokka.ScalaPageContentBuilder.defaultHeaders","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/default-headers.html","searchKeys":["defaultHeaders"," def defaultHeaders: List[ContentGroup]"]},{"name":" def divergent(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder","description":"dotty.dokka.ScalaPageContentBuilder.divergent","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/divergent.html","searchKeys":["divergent"," def divergent(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder"]},{"name":" def divergentBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.divergentBlock","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/divergent-block.html","searchKeys":["divergentBlock"," def divergentBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def divergentGroup(groupId: GroupID, dri: Set[DRI], kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], implicitlySourceSetHinted: Boolean)(buildBlock: ScalaDivergentBuilder => ScalaDivergentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.divergentGroup","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/divergent-group.html","searchKeys":["divergentGroup"," def divergentGroup(groupId: GroupID, dri: Set[DRI], kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], implicitlySourceSetHinted: Boolean)(buildBlock: ScalaDivergentBuilder => ScalaDivergentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def documentableFilter(): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.documentableFilter","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/documentable-filter.html","searchKeys":["documentableFilter"," def documentableFilter(): ScalaDocumentableContentBuilder"]},{"name":" def documentableTab(name: String)(children: DocumentableGroup*): Self","description":"dotty.dokka.ScalaPageContentBuilder.documentableTab","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/documentable-tab.html","searchKeys":["documentableTab"," def documentableTab(name: String)(children: DocumentableGroup*): Self"]},{"name":" def dotDiagram(diagram: HierarchyGraph, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.dotDiagram","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/dot-diagram.html","searchKeys":["dotDiagram"," def dotDiagram(diagram: HierarchyGraph, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def group(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.group","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/group.html","searchKeys":["group"," def group(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def groupingBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder)(elementFunc: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.groupingBlock","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/grouping-block.html","searchKeys":["groupingBlock"," def groupingBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder)(elementFunc: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def header(level: Int, text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.header","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/header.html","searchKeys":["header"," def header(level: Int, text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def instance(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDivergentInstanceBuilder => ScalaDivergentInstanceBuilder): ScalaDivergentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.instance","location":"api/dotty.dokka/-scala-page-content-builder/-scala-divergent-builder/instance.html","searchKeys":["instance"," def instance(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDivergentInstanceBuilder => ScalaDivergentInstanceBuilder): ScalaDivergentBuilder"]},{"name":" def linkWithContent(address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.linkWithContent","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/link-with-content.html","searchKeys":["linkWithContent"," def linkWithContent(address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def list[T](elements: List[T], prefix: String, suffix: String, separator: String, sourceSets: Set[DokkaConfiguration$DokkaSourceSet])(elemOp: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.list","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/list.html","searchKeys":["list"," def list[T](elements: List[T], prefix: String, suffix: String, separator: String, sourceSets: Set[DokkaConfiguration$DokkaSourceSet])(elemOp: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def list[E](elements: List[E], prefix: String, suffix: String, separator: String)(elemOp: (SignatureBuilder, E) => SignatureBuilder): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.list","location":"api/dotty.dokka/-signature-builder/list.html","searchKeys":["list"," def list[E](elements: List[E], prefix: String, suffix: String, separator: String)(elemOp: (SignatureBuilder, E) => SignatureBuilder): SignatureBuilder"]},{"name":" def rawComment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): Seq[ContentNode]","description":"dotty.dokka.ScalaPageContentBuilder.rawComment","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/raw-comment.html","searchKeys":["rawComment"," def rawComment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): Seq[ContentNode]"]},{"name":" def reset(): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.reset","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/reset.html","searchKeys":["reset"," def reset(): ScalaDocumentableContentBuilder"]},{"name":" def resolvedLink(text: String, address: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.resolvedLink","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/resolved-link.html","searchKeys":["resolvedLink"," def resolvedLink(text: String, address: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder"]},{"name":" def signature(d: Documentable): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.signature","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/signature.html","searchKeys":["signature"," def signature(d: Documentable): ScalaDocumentableContentBuilder"]},{"name":"override def signature(documentable: Documentable): List[ContentNode]","description":"dotty.dokka.ScalaSignatureProvider.signature","location":"api/dotty.dokka/-scala-signature-provider/signature.html","searchKeys":["signature","override def signature(documentable: Documentable): List[ContentNode]"]},{"name":" def signature(s: Signature): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.signature","location":"api/dotty.dokka/-signature-builder/signature.html","searchKeys":["signature"," def signature(s: Signature): SignatureBuilder"]},{"name":" def sourceSetDependentHint(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.sourceSetDependentHint","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/source-set-dependent-hint.html","searchKeys":["sourceSetDependentHint"," def sourceSetDependentHint(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder"]},{"name":" def table(kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], headers: List[ContentGroup])(buildBlock: ScalaTableBuilder => ScalaTableBuilder): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageContentBuilder.table","location":"api/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/table.html","searchKeys":["table"," def table(kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], headers: List[ContentGroup])(buildBlock: ScalaTableBuilder => ScalaTableBuilder): ScalaDocumentableContentBuilder"]},{"name":" class ScalaPageCreator(commentsToContentConverter: CommentsToContentConverter, signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DefaultPageCreator","description":"dotty.dokka.ScalaPageCreator","location":"api/dotty.dokka/-scala-page-creator/index.html","searchKeys":["ScalaPageCreator"," class ScalaPageCreator(commentsToContentConverter: CommentsToContentConverter, signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DefaultPageCreator"]},{"name":" def contentForClass(c: DClass): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForClass","location":"api/dotty.dokka/-scala-page-creator/content-for-class.html","searchKeys":["contentForClass"," def contentForClass(c: DClass): ContentGroup"]},{"name":"override def contentForClasslike(c: DClasslike): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForClasslike","location":"api/dotty.dokka/-scala-page-creator/content-for-classlike.html","searchKeys":["contentForClasslike","override def contentForClasslike(c: DClasslike): ContentGroup"]},{"name":"override def contentForFunction(f: DFunction): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForFunction","location":"api/dotty.dokka/-scala-page-creator/content-for-function.html","searchKeys":["contentForFunction","override def contentForFunction(f: DFunction): ContentGroup"]},{"name":"override def contentForMember(d: Documentable): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForMember","location":"api/dotty.dokka/-scala-page-creator/content-for-member.html","searchKeys":["contentForMember","override def contentForMember(d: Documentable): ContentGroup"]},{"name":"override def contentForModule(m: DModule): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForModule","location":"api/dotty.dokka/-scala-page-creator/content-for-module.html","searchKeys":["contentForModule","override def contentForModule(m: DModule): ContentGroup"]},{"name":"override def contentForPackage(p: DPackage): ContentGroup","description":"dotty.dokka.ScalaPageCreator.contentForPackage","location":"api/dotty.dokka/-scala-page-creator/content-for-package.html","searchKeys":["contentForPackage","override def contentForPackage(p: DPackage): ContentGroup"]},{"name":" def contentForComments(d: Documentable): DocBuilder","description":"dotty.dokka.ScalaPageCreator.extension_contentForComments","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-comments.html","searchKeys":["extension_contentForComments"," def contentForComments(d: Documentable): DocBuilder"]},{"name":" def contentForConstructors(c: DClass): Self","description":"dotty.dokka.ScalaPageCreator.extension_contentForConstructors","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-constructors.html","searchKeys":["extension_contentForConstructors"," def contentForConstructors(c: DClass): Self"]},{"name":" def contentForDescription(d: Documentable): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageCreator.extension_contentForDescription","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-description.html","searchKeys":["extension_contentForDescription"," def contentForDescription(d: Documentable): ScalaDocumentableContentBuilder"]},{"name":" def contentForEnum(c: DClass): Self","description":"dotty.dokka.ScalaPageCreator.extension_contentForEnum","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-enum.html","searchKeys":["extension_contentForEnum"," def contentForEnum(c: DClass): Self"]},{"name":" def contentForScope(s: Documentable & WithScope & WithExtraProperties[]): Self","description":"dotty.dokka.ScalaPageCreator.extension_contentForScope","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-scope.html","searchKeys":["extension_contentForScope"," def contentForScope(s: Documentable & WithScope & WithExtraProperties[]): Self"]},{"name":" def contentForTypesInfo(c: DClass): ScalaDocumentableContentBuilder","description":"dotty.dokka.ScalaPageCreator.extension_contentForTypesInfo","location":"api/dotty.dokka/-scala-page-creator/extension_content-for-types-info.html","searchKeys":["extension_contentForTypesInfo"," def contentForTypesInfo(c: DClass): ScalaDocumentableContentBuilder"]},{"name":" def descriptionIfNotEmpty(d: Documentable): DocBuilder","description":"dotty.dokka.ScalaPageCreator.extension_descriptionIfNotEmpty","location":"api/dotty.dokka/-scala-page-creator/extension_description-if-not-empty.html","searchKeys":["extension_descriptionIfNotEmpty"," def descriptionIfNotEmpty(d: Documentable): DocBuilder"]},{"name":"override def pageForClasslike(c: DClasslike): ClasslikePageNode","description":"dotty.dokka.ScalaPageCreator.pageForClasslike","location":"api/dotty.dokka/-scala-page-creator/page-for-classlike.html","searchKeys":["pageForClasslike","override def pageForClasslike(c: DClasslike): ClasslikePageNode"]},{"name":" def pageForDClass(c: DClass): ClasslikePageNode","description":"dotty.dokka.ScalaPageCreator.pageForDClass","location":"api/dotty.dokka/-scala-page-creator/page-for-d-class.html","searchKeys":["pageForDClass"," def pageForDClass(c: DClass): ClasslikePageNode"]},{"name":"override def pageForFunction(f: DFunction): MemberPageNode","description":"dotty.dokka.ScalaPageCreator.pageForFunction","location":"api/dotty.dokka/-scala-page-creator/page-for-function.html","searchKeys":["pageForFunction","override def pageForFunction(f: DFunction): MemberPageNode"]},{"name":"override def pageForModule(m: DModule): ModulePageNode","description":"dotty.dokka.ScalaPageCreator.pageForModule","location":"api/dotty.dokka/-scala-page-creator/page-for-module.html","searchKeys":["pageForModule","override def pageForModule(m: DModule): ModulePageNode"]},{"name":"override def pageForPackage(p: DPackage): PackagePageNode","description":"dotty.dokka.ScalaPageCreator.pageForPackage","location":"api/dotty.dokka/-scala-page-creator/page-for-package.html","searchKeys":["pageForPackage","override def pageForPackage(p: DPackage): PackagePageNode"]},{"name":" class ScalaResourceInstaller extends PageTransformer","description":"dotty.dokka.ScalaResourceInstaller","location":"api/dotty.dokka/-scala-resource-installer/index.html","searchKeys":["ScalaResourceInstaller"," class ScalaResourceInstaller extends PageTransformer"]},{"name":"case class ContentNodeBuilder(builder: ScalaDocumentableContentBuilder) extends SignatureBuilder","description":"dotty.dokka.ScalaSignatureProvider","location":"api/dotty.dokka/-scala-signature-provider/-content-node-builder/index.html","searchKeys":["ScalaSignatureProvider","case class ContentNodeBuilder(builder: ScalaDocumentableContentBuilder) extends SignatureBuilder"]},{"name":" object ScalaSignatureProvider","description":"dotty.dokka.ScalaSignatureProvider$","location":"api/dotty.dokka/-scala-signature-provider$/index.html","searchKeys":["ScalaSignatureProvider$"," object ScalaSignatureProvider"]},{"name":" def rawSignature(documentable: Documentable, builder: SignatureBuilder): SignatureBuilder","description":"dotty.dokka.ScalaSignatureProvider$.rawSignature","location":"api/dotty.dokka/-scala-signature-provider$/raw-signature.html","searchKeys":["rawSignature"," def rawSignature(documentable: Documentable, builder: SignatureBuilder): SignatureBuilder"]},{"name":" trait ScalaSignatureUtils","description":"dotty.dokka.ScalaSignatureUtils","location":"api/dotty.dokka/-scala-signature-utils/index.html","searchKeys":["ScalaSignatureUtils"," trait ScalaSignatureUtils"]},{"name":" def toSignatureString(): String","description":"dotty.dokka.ScalaSignatureUtils.extension_toSignatureString","location":"api/dotty.dokka/-scala-signature-utils/extension_to-signature-string.html","searchKeys":["extension_toSignatureString"," def toSignatureString(): String"]},{"name":" object SourceLink","description":"dotty.dokka.ScalaSourceLinksTransformer","location":"api/dotty.dokka/-scala-source-links-transformer/-source-link$/index.html","searchKeys":["ScalaSourceLinksTransformer"," object SourceLink"]},{"name":" def apply(sourceLinkDef: DokkaConfiguration$SourceLinkDefinition, sourceSetData: DokkaSourceSet): SourceLink","description":"dotty.dokka.ScalaSourceLinksTransformer.apply","location":"api/dotty.dokka/-scala-source-links-transformer/-source-link$/apply.html","searchKeys":["apply"," def apply(sourceLinkDef: DokkaConfiguration$SourceLinkDefinition, sourceSetData: DokkaSourceSet): SourceLink"]},{"name":" def apply(names: String | Link*): Signature","description":"dotty.dokka.model.api.api$package$.apply","location":"api/dotty.dokka/model/api/-signature/apply.html","searchKeys":["apply"," def apply(names: String | Link*): Signature"]},{"name":" def apply[T >: DClass](classDef: ClassDef)(dri: DRI, name: String, signatureOnly: Boolean, modifiers: Seq[Modifier]): DClass","description":"dotty.dokka.tasty.ClassLikeSupport.apply","location":"api/dotty.dokka/tasty/-class-like-support/-d-class/apply.html","searchKeys":["apply"," def apply[T >: DClass](classDef: ClassDef)(dri: DRI, name: String, signatureOnly: Boolean, modifiers: Seq[Modifier]): DClass"]},{"name":" def apply(title: Inline, linkTo: LinkTo): RepresentationLink","description":"dotty.dokka.tasty.comments.wiki.RepresentationLink$.apply","location":"api/dotty.dokka/tasty/comments/wiki/-representation-link$/apply.html","searchKeys":["apply"," def apply(title: Inline, linkTo: LinkTo): RepresentationLink"]},{"name":" def apply(idx: Int): T","description":"example.level2.Documentation.apply","location":"api/example/level2/-documentation/apply.html","searchKeys":["apply"," def apply(idx: Int): T"]},{"name":" class ScalaTagWrapper(root: DocTag) extends TagWrapper","description":"dotty.dokka.ScalaTagWrapper","location":"api/dotty.dokka/-scala-tag-wrapper/index.html","searchKeys":["ScalaTagWrapper"," class ScalaTagWrapper(root: DocTag) extends TagWrapper"]},{"name":"case class Example(root: DocTag) extends ScalaTagWrapper","description":"dotty.dokka.ScalaTagWrapper$","location":"api/dotty.dokka/-scala-tag-wrapper$/-example/index.html","searchKeys":["ScalaTagWrapper$","case class Example(root: DocTag) extends ScalaTagWrapper"]},{"name":"override def getName: String","description":"dotty.dokka.ScalaTagWrapper$.getName","location":"api/dotty.dokka/-scala-tag-wrapper$/-nested-named-tag/get-name.html","searchKeys":["getName","override def getName: String"]},{"name":"override def getRoot: DocTag","description":"dotty.dokka.ScalaTagWrapper$.getRoot","location":"api/dotty.dokka/-scala-tag-wrapper$/-nested-named-tag/get-root.html","searchKeys":["getRoot","override def getRoot: DocTag"]},{"name":"override def getRoot: DocTag","description":"dotty.dokka.ScalaTagWrapper.getRoot","location":"api/dotty.dokka/-scala-tag-wrapper/get-root.html","searchKeys":["getRoot","override def getRoot: DocTag"]},{"name":" trait SignatureBuilder extends ScalaSignatureUtils","description":"dotty.dokka.SignatureBuilder","location":"api/dotty.dokka/-signature-builder/index.html","searchKeys":["SignatureBuilder"," trait SignatureBuilder extends ScalaSignatureUtils"]},{"name":" def annotationsBlock(d: Member): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.annotationsBlock","location":"api/dotty.dokka/-signature-builder/annotations-block.html","searchKeys":["annotationsBlock"," def annotationsBlock(d: Member): SignatureBuilder"]},{"name":" def annotationsInline(d: Documentable & WithExtraProperties[]): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.annotationsInline","location":"api/dotty.dokka/-signature-builder/annotations-inline.html","searchKeys":["annotationsInline"," def annotationsInline(d: Documentable & WithExtraProperties[]): SignatureBuilder"]},{"name":" def functionParameters(method: DFunction): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.functionParameters","location":"api/dotty.dokka/-signature-builder/function-parameters.html","searchKeys":["functionParameters"," def functionParameters(method: DFunction): SignatureBuilder"]},{"name":" def generics(on: WithGenerics): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.generics","location":"api/dotty.dokka/-signature-builder/generics.html","searchKeys":["generics"," def generics(on: WithGenerics): SignatureBuilder"]},{"name":" def modifiersAndVisibility(t: Documentable & WithAbstraction & WithVisibility & WithExtraProperties[], kind: String): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.modifiersAndVisibility","location":"api/dotty.dokka/-signature-builder/modifiers-and-visibility.html","searchKeys":["modifiersAndVisibility"," def modifiersAndVisibility(t: Documentable & WithAbstraction & WithVisibility & WithExtraProperties[], kind: String): SignatureBuilder"]},{"name":" def typeSignature(b: Projection): SignatureBuilder","description":"dotty.dokka.SignatureBuilder.typeSignature","location":"api/dotty.dokka/-signature-builder/type-signature.html","searchKeys":["typeSignature"," def typeSignature(b: Projection): SignatureBuilder"]},{"name":" class SignatureRenderer(pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet], locationProvider: LocationProvider)","description":"dotty.dokka.SignatureRenderer","location":"api/dotty.dokka/-signature-renderer/index.html","searchKeys":["SignatureRenderer"," class SignatureRenderer(pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet], locationProvider: LocationProvider)"]},{"name":" def link(dri: DRI): Option[String]","description":"dotty.dokka.SignatureRenderer.link","location":"api/dotty.dokka/-signature-renderer/link.html","searchKeys":["link"," def link(dri: DRI): Option[String]"]},{"name":" def link(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.link","location":"api/dotty.dokka/tasty/comments/wiki/-parser/link.html","searchKeys":["link"," def link(): Inline"]},{"name":" def link: LinkTo","description":"dotty.dokka.tasty.comments.wiki.RepresentationLink.link","location":"api/dotty.dokka/tasty/comments/wiki/-representation-link/link.html","searchKeys":["link"," def link: LinkTo"]},{"name":" def renderElement(e: String | (String, DRI) | Link): Frag","description":"dotty.dokka.SignatureRenderer.renderElement","location":"api/dotty.dokka/-signature-renderer/render-element.html","searchKeys":["renderElement"," def renderElement(e: String | (String, DRI) | Link): Frag"]},{"name":" def renderElementWith(e: String | (String, DRI) | Link, modifiers: Modifier*): Frag","description":"dotty.dokka.SignatureRenderer.renderElementWith","location":"api/dotty.dokka/-signature-renderer/render-element-with.html","searchKeys":["renderElementWith"," def renderElementWith(e: String | (String, DRI) | Link, modifiers: Modifier*): Frag"]},{"name":" def renderLink(name: String, dri: DRI, modifiers: Modifier*): TypedTag[String]","description":"dotty.dokka.SignatureRenderer.renderLink","location":"api/dotty.dokka/-signature-renderer/render-link.html","searchKeys":["renderLink"," def renderLink(name: String, dri: DRI, modifiers: Modifier*): TypedTag[String]"]},{"name":"case class SourceLinks(links: Map[DokkaConfiguration$DokkaSourceSet, String]) extends ExtraProperty[Documentable]","description":"dotty.dokka.SourceLinks","location":"api/dotty.dokka/-source-links/index.html","searchKeys":["SourceLinks","case class SourceLinks(links: Map[DokkaConfiguration$DokkaSourceSet, String]) extends ExtraProperty[Documentable]"]},{"name":" object SourceLinks extends BaseKey[Documentable, SourceLinks]","description":"dotty.dokka.SourceLinks$","location":"api/dotty.dokka/-source-links$/index.html","searchKeys":["SourceLinks$"," object SourceLinks extends BaseKey[Documentable, SourceLinks]"]},{"name":" enum TableStyle extends Style","description":"dotty.dokka.TableStyle","location":"api/dotty.dokka/-table-style/index.html","searchKeys":["TableStyle"," enum TableStyle extends Style"]},{"name":"case class TastyDocumentableSource(path: String, lineNumber: Int) extends DocumentableSource","description":"dotty.dokka.TastyDocumentableSource","location":"api/dotty.dokka/-tasty-documentable-source/index.html","searchKeys":["TastyDocumentableSource","case class TastyDocumentableSource(path: String, lineNumber: Int) extends DocumentableSource"]},{"name":"override def getPath: String","description":"dotty.dokka.TastyDocumentableSource.getPath","location":"api/dotty.dokka/-tasty-documentable-source/get-path.html","searchKeys":["getPath","override def getPath: String"]},{"name":"case class Annotation(dri: DRI, params: List[AnnotationParameter])","description":"dotty.dokka.model.api.Annotation","location":"api/dotty.dokka/model/api/-annotation/index.html","searchKeys":["Annotation","case class Annotation(dri: DRI, params: List[AnnotationParameter])"]},{"name":"case class LinkParameter(name: Option[String], dri: DRI, value: String) extends AnnotationParameter","description":"dotty.dokka.model.api.Annotation$","location":"api/dotty.dokka/model/api/-annotation$/-link-parameter/index.html","searchKeys":["Annotation$","case class LinkParameter(name: Option[String], dri: DRI, value: String) extends AnnotationParameter"]},{"name":" trait Classlike","description":"dotty.dokka.model.api.Classlike","location":"api/dotty.dokka/model/api/-classlike/index.html","searchKeys":["Classlike"," trait Classlike"]},{"name":"case class CompositeMemberExtension(members: Seq[Member], directParents: Seq[Signature], parents: Seq[LinkToType], knownChildren: Seq[LinkToType]) extends ExtraProperty[Documentable]","description":"dotty.dokka.model.api.CompositeMemberExtension","location":"api/dotty.dokka/model/api/-composite-member-extension/index.html","searchKeys":["CompositeMemberExtension","case class CompositeMemberExtension(members: Seq[Member], directParents: Seq[Signature], parents: Seq[LinkToType], knownChildren: Seq[LinkToType]) extends ExtraProperty[Documentable]"]},{"name":" object CompositeMemberExtension extends BaseKey[Documentable, CompositeMemberExtension]","description":"dotty.dokka.model.api.CompositeMemberExtension$","location":"api/dotty.dokka/model/api/-composite-member-extension$/index.html","searchKeys":["CompositeMemberExtension$"," object CompositeMemberExtension extends BaseKey[Documentable, CompositeMemberExtension]"]},{"name":"case class ExtensionTarget(name: String, signature: Signature, dri: DRI)","description":"dotty.dokka.model.api.ExtensionTarget","location":"api/dotty.dokka/model/api/-extension-target/index.html","searchKeys":["ExtensionTarget","case class ExtensionTarget(name: String, signature: Signature, dri: DRI)"]},{"name":"case class HierarchyGraph(edges: Seq[(LinkToType, LinkToType)])","description":"dotty.dokka.model.api.HierarchyGraph","location":"api/dotty.dokka/model/api/-hierarchy-graph/index.html","searchKeys":["HierarchyGraph","case class HierarchyGraph(edges: Seq[(LinkToType, LinkToType)])"]},{"name":" object HierarchyGraph","description":"dotty.dokka.model.api.HierarchyGraph$","location":"api/dotty.dokka/model/api/-hierarchy-graph$/index.html","searchKeys":["HierarchyGraph$"," object HierarchyGraph"]},{"name":" def empty: HierarchyGraph","description":"dotty.dokka.model.api.HierarchyGraph$.empty","location":"api/dotty.dokka/model/api/-hierarchy-graph$/empty.html","searchKeys":["empty"," def empty: HierarchyGraph"]},{"name":" def withEdges(edges: Seq[(LinkToType, LinkToType)]): HierarchyGraph","description":"dotty.dokka.model.api.HierarchyGraph$.withEdges","location":"api/dotty.dokka/model/api/-hierarchy-graph$/with-edges.html","searchKeys":["withEdges"," def withEdges(edges: Seq[(LinkToType, LinkToType)]): HierarchyGraph"]},{"name":" def +(newEdge: (LinkToType, LinkToType)): HierarchyGraph","description":"dotty.dokka.model.api.HierarchyGraph.+","location":"api/dotty.dokka/model/api/-hierarchy-graph/+.html","searchKeys":["+"," def +(newEdge: (LinkToType, LinkToType)): HierarchyGraph"]},{"name":" def ++(newEdge: Seq[(LinkToType, LinkToType)]): HierarchyGraph","description":"dotty.dokka.model.api.HierarchyGraph.++","location":"api/dotty.dokka/model/api/-hierarchy-graph/++.html","searchKeys":["++"," def ++(newEdge: Seq[(LinkToType, LinkToType)]): HierarchyGraph"]},{"name":" def vertecies: Seq[LinkToType]","description":"dotty.dokka.model.api.HierarchyGraph.vertecies","location":"api/dotty.dokka/model/api/-hierarchy-graph/vertecies.html","searchKeys":["vertecies"," def vertecies: Seq[LinkToType]"]},{"name":" trait ImplicitConversionProvider","description":"dotty.dokka.model.api.ImplicitConversionProvider","location":"api/dotty.dokka/model/api/-implicit-conversion-provider/index.html","searchKeys":["ImplicitConversionProvider"," trait ImplicitConversionProvider"]},{"name":" def conversion: Option[ImplicitConversion]","description":"dotty.dokka.model.api.ImplicitConversionProvider.conversion","location":"api/dotty.dokka/model/api/-implicit-conversion-provider/conversion.html","searchKeys":["conversion"," def conversion: Option[ImplicitConversion]"]},{"name":" enum Kind(val name: String)","description":"dotty.dokka.model.api.Kind","location":"api/dotty.dokka/model/api/-kind/index.html","searchKeys":["Kind"," enum Kind(val name: String)"]},{"name":"case Given(as: Option[Signature], conversion: Option[ImplicitConversion]) extends Kind with ImplicitConversionProvider","description":"dotty.dokka.model.api.Kind$","location":"api/dotty.dokka/model/api/-kind/-given/index.html","searchKeys":["Kind$","case Given(as: Option[Signature], conversion: Option[ImplicitConversion]) extends Kind with ImplicitConversionProvider"]},{"name":"case class Link(name: String, dri: DRI)","description":"dotty.dokka.model.api.Link","location":"api/dotty.dokka/model/api/-link/index.html","searchKeys":["Link","case class Link(name: String, dri: DRI)"]},{"name":"final case class Link(target: String, title: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Link","location":"api/dotty.dokka/tasty/comments/wiki/-link/index.html","searchKeys":["Link","final case class Link(target: String, title: Inline) extends Inline"]},{"name":"case class LinkToType(signature: Signature, dri: DRI, kind: Kind)","description":"dotty.dokka.model.api.LinkToType","location":"api/dotty.dokka/model/api/-link-to-type/index.html","searchKeys":["LinkToType","case class LinkToType(signature: Signature, dri: DRI, kind: Kind)"]},{"name":" object MemberExtension extends BaseKey[Documentable, MemberExtension]","description":"dotty.dokka.model.api.MemberExtension$","location":"api/dotty.dokka/model/api/-member-extension/index.html","searchKeys":["MemberExtension$"," object MemberExtension extends BaseKey[Documentable, MemberExtension]"]},{"name":" enum Modifier(val name: String, val prefix: Boolean)","description":"dotty.dokka.model.api.Modifier","location":"api/dotty.dokka/model/api/-modifier/index.html","searchKeys":["Modifier"," enum Modifier(val name: String, val prefix: Boolean)"]},{"name":" enum Origin","description":"dotty.dokka.model.api.Origin","location":"api/dotty.dokka/model/api/-origin/index.html","searchKeys":["Origin"," enum Origin"]},{"name":"case InheritedFrom(name: String, dri: DRI)","description":"dotty.dokka.model.api.Origin$","location":"api/dotty.dokka/model/api/-origin/-inherited-from/index.html","searchKeys":["Origin$","case InheritedFrom(name: String, dri: DRI)"]},{"name":" enum Visibility(val name: String)","description":"dotty.dokka.model.api.Visibility","location":"api/dotty.dokka/model/api/-visibility/index.html","searchKeys":["Visibility"," enum Visibility(val name: String)"]},{"name":"case Protected(scope: VisibilityScope) extends Visibility","description":"dotty.dokka.model.api.Visibility$","location":"api/dotty.dokka/model/api/-visibility/-protected/index.html","searchKeys":["Visibility$","case Protected(scope: VisibilityScope) extends Visibility"]},{"name":" def asSignature: String","description":"dotty.dokka.model.api.Visibility.asSignature","location":"api/dotty.dokka/model/api/-visibility/as-signature.html","searchKeys":["asSignature"," def asSignature: String"]},{"name":" enum VisibilityScope","description":"dotty.dokka.model.api.VisibilityScope","location":"api/dotty.dokka/model/api/-visibility-scope/index.html","searchKeys":["VisibilityScope"," enum VisibilityScope"]},{"name":"case ExplicitTypeScope(typeName: String)","description":"dotty.dokka.model.api.VisibilityScope$","location":"api/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/index.html","searchKeys":["VisibilityScope$","case ExplicitTypeScope(typeName: String)"]},{"name":" object Member","description":"dotty.dokka.model.api.api$package$","location":"api/dotty.dokka/model/api/-member/index.html","searchKeys":["api$package$"," object Member"]},{"name":" def allMembers[T]: Seq[Member]","description":"dotty.dokka.model.api.api$package$.extension_allMembers","location":"api/dotty.dokka/model/api/extension_all-members.html","searchKeys":["extension_allMembers"," def allMembers[T]: Seq[Member]"]},{"name":" def annotations[T]: List[Annotation]","description":"dotty.dokka.model.api.api$package$.extension_annotations","location":"api/dotty.dokka/model/api/extension_annotations.html","searchKeys":["extension_annotations"," def annotations[T]: List[Annotation]"]},{"name":" def asLink[T]: LinkToType","description":"dotty.dokka.model.api.api$package$.extension_asLink","location":"api/dotty.dokka/model/api/extension_as-link.html","searchKeys":["extension_asLink"," def asLink[T]: LinkToType"]},{"name":" def directParents[T]: Seq[Signature]","description":"dotty.dokka.model.api.api$package$.extension_directParents","location":"api/dotty.dokka/model/api/extension_direct-parents.html","searchKeys":["extension_directParents"," def directParents[T]: Seq[Signature]"]},{"name":" def dri[T]: DRI","description":"dotty.dokka.model.api.api$package$.extension_dri","location":"api/dotty.dokka/model/api/extension_dri.html","searchKeys":["extension_dri"," def dri[T]: DRI"]},{"name":"final def dri: DRI","description":"dotty.dokka.tasty.BasicSupport.extension_dri","location":"api/dotty.dokka/tasty/-basic-support/extension_dri.html","searchKeys":["extension_dri","final def dri: DRI"]},{"name":" def dri: DRI","description":"dotty.dokka.tasty.SymOps.extension_dri","location":"api/dotty.dokka/tasty/-sym-ops/extension_dri.html","searchKeys":["extension_dri"," def dri: DRI"]},{"name":" def driMap: Map[DRI, Member]","description":"dotty.dokka.model.api.api$package$.extension_driMap","location":"api/dotty.dokka/model/api/extension_dri-map.html","searchKeys":["extension_driMap"," def driMap: Map[DRI, Member]"]},{"name":" def join(a: Signature): Signature","description":"dotty.dokka.model.api.api$package$.extension_join","location":"api/dotty.dokka/model/api/extension_join.html","searchKeys":["extension_join"," def join(a: Signature): Signature"]},{"name":" def kind[T]: Kind","description":"dotty.dokka.model.api.api$package$.extension_kind","location":"api/dotty.dokka/model/api/extension_kind.html","searchKeys":["extension_kind"," def kind[T]: Kind"]},{"name":" def knownChildren[T]: Seq[LinkToType]","description":"dotty.dokka.model.api.api$package$.extension_knownChildren","location":"api/dotty.dokka/model/api/extension_known-children.html","searchKeys":["extension_knownChildren"," def knownChildren[T]: Seq[LinkToType]"]},{"name":" def membersBy[T](op: Member => Boolean): (Seq[Member], Seq[Member])","description":"dotty.dokka.model.api.api$package$.extension_membersBy","location":"api/dotty.dokka/model/api/extension_members-by.html","searchKeys":["extension_membersBy"," def membersBy[T](op: Member => Boolean): (Seq[Member], Seq[Member])"]},{"name":" def modifiers[T]: Seq[Modifier]","description":"dotty.dokka.model.api.api$package$.extension_modifiers","location":"api/dotty.dokka/model/api/extension_modifiers.html","searchKeys":["extension_modifiers"," def modifiers[T]: Seq[Modifier]"]},{"name":" def name[T]: String","description":"dotty.dokka.model.api.api$package$.extension_name","location":"api/dotty.dokka/model/api/extension_name.html","searchKeys":["extension_name"," def name[T]: String"]},{"name":" def origin[T]: Origin","description":"dotty.dokka.model.api.api$package$.extension_origin","location":"api/dotty.dokka/model/api/extension_origin.html","searchKeys":["extension_origin"," def origin[T]: Origin"]},{"name":" def parents[T]: Seq[LinkToType]","description":"dotty.dokka.model.api.api$package$.extension_parents","location":"api/dotty.dokka/model/api/extension_parents.html","searchKeys":["extension_parents"," def parents[T]: Seq[LinkToType]"]},{"name":" def signature[T]: Signature","description":"dotty.dokka.model.api.api$package$.extension_signature","location":"api/dotty.dokka/model/api/extension_signature.html","searchKeys":["extension_signature"," def signature[T]: Signature"]},{"name":" def visibility[T]: Visibility","description":"dotty.dokka.model.api.api$package$.extension_visibility","location":"api/dotty.dokka/model/api/extension_visibility.html","searchKeys":["extension_visibility"," def visibility[T]: Visibility"]},{"name":" def merge(signatures: Signature*): Signature","description":"dotty.dokka.model.api.api$package$.merge","location":"api/dotty.dokka/model/api/-signature/merge.html","searchKeys":["merge"," def merge(signatures: Signature*): Signature"]},{"name":" def unapply(d: Documentable): Option[(String, DRI, Visibility, Kind, Origin)]","description":"dotty.dokka.model.api.api$package$.unapply","location":"api/dotty.dokka/model/api/-member/unapply.html","searchKeys":["unapply"," def unapply(d: Documentable): Option[(String, DRI, Visibility, Kind, Origin)]"]},{"name":" def unapply(tpe: Type): Option[(TypeOrBounds, TypeOrBounds)]","description":"dotty.dokka.tasty.SyntheticsSupport.unapply","location":"api/dotty.dokka/tasty/-synthetics-support/-match-type-case/unapply.html","searchKeys":["unapply"," def unapply(tpe: Type): Option[(TypeOrBounds, TypeOrBounds)]"]},{"name":" def unapply(el: RepresentationLink): Some[(Inline, LinkTo)]","description":"dotty.dokka.tasty.comments.wiki.RepresentationLink$.unapply","location":"api/dotty.dokka/tasty/comments/wiki/-representation-link$/unapply.html","searchKeys":["unapply"," def unapply(el: RepresentationLink): Some[(Inline, LinkTo)]"]},{"name":" def asSignature: Signature","description":"dotty.dokka.model.api.internalExtensions$package$.extension_asSignature","location":"api/dotty.dokka/model/api/extension_as-signature.html","searchKeys":["extension_asSignature"," def asSignature: Signature"]},{"name":" def copy(modifiers: Seq[Modifier]): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_copy","location":"api/dotty.dokka/model/api/extension_copy.html","searchKeys":["extension_copy"," def copy(modifiers: Seq[Modifier]): Member"]},{"name":" def updateMembers(op: Member => Member): DModule","description":"dotty.dokka.model.api.internalExtensions$package$.extension_updateMembers","location":"api/dotty.dokka/model/api/extension_update-members.html","searchKeys":["extension_updateMembers"," def updateMembers(op: Member => Member): DModule"]},{"name":" def updatePackages(op: Seq[DPackage] => Seq[DPackage]): DModule","description":"dotty.dokka.model.api.internalExtensions$package$.extension_updatePackages","location":"api/dotty.dokka/model/api/extension_update-packages.html","searchKeys":["extension_updatePackages"," def updatePackages(op: Seq[DPackage] => Seq[DPackage]): DModule"]},{"name":" def updateRecusivly(op: Member => Member): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_updateRecusivly","location":"api/dotty.dokka/model/api/extension_update-recusivly.html","searchKeys":["extension_updateRecusivly"," def updateRecusivly(op: Member => Member): Member"]},{"name":" def withKind(kind: Kind): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withKind","location":"api/dotty.dokka/model/api/extension_with-kind.html","searchKeys":["extension_withKind"," def withKind(kind: Kind): Member"]},{"name":" def withKnownChildren(knownChildren: Seq[LinkToType]): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withKnownChildren","location":"api/dotty.dokka/model/api/extension_with-known-children.html","searchKeys":["extension_withKnownChildren"," def withKnownChildren(knownChildren: Seq[LinkToType]): Member"]},{"name":" def withMembers(newMembers: Seq[Member]): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withMembers","location":"api/dotty.dokka/model/api/extension_with-members.html","searchKeys":["extension_withMembers"," def withMembers(newMembers: Seq[Member]): Member"]},{"name":" def withNewGraphEdges(edges: Seq[(LinkToType, LinkToType)]): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withNewGraphEdges","location":"api/dotty.dokka/model/api/extension_with-new-graph-edges.html","searchKeys":["extension_withNewGraphEdges"," def withNewGraphEdges(edges: Seq[(LinkToType, LinkToType)]): Member"]},{"name":" def withNewMembers(newMembers: Seq[Member]): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withNewMembers","location":"api/dotty.dokka/model/api/extension_with-new-members.html","searchKeys":["extension_withNewMembers"," def withNewMembers(newMembers: Seq[Member]): Member"]},{"name":" def withOrigin(origin: Origin): Member","description":"dotty.dokka.model.api.internalExtensions$package$.extension_withOrigin","location":"api/dotty.dokka/model/api/extension_with-origin.html","searchKeys":["extension_withOrigin"," def withOrigin(origin: Origin): Member"]},{"name":" object SymOps extends SymOps[reflect.type]","description":"dotty.dokka.tasty.BasicSupport","location":"api/dotty.dokka/tasty/-basic-support/-sym-ops/index.html","searchKeys":["BasicSupport"," object SymOps extends SymOps[reflect.type]"]},{"name":" def documentation(cxt: Context): Map[DokkaConfiguration$DokkaSourceSet, DocumentationNode]","description":"dotty.dokka.tasty.BasicSupport.extension_documentation","location":"api/dotty.dokka/tasty/-basic-support/extension_documentation.html","searchKeys":["extension_documentation"," def documentation(cxt: Context): Map[DokkaConfiguration$DokkaSourceSet, DocumentationNode]"]},{"name":"final def extendedSymbol: Option[ValDef]","description":"dotty.dokka.tasty.BasicSupport.extension_extendedSymbol","location":"api/dotty.dokka/tasty/-basic-support/extension_extended-symbol.html","searchKeys":["extension_extendedSymbol","final def extendedSymbol: Option[ValDef]"]},{"name":" def extendedSymbol: Option[ValDef]","description":"dotty.dokka.tasty.SymOps.extension_extendedSymbol","location":"api/dotty.dokka/tasty/-sym-ops/extension_extended-symbol.html","searchKeys":["extension_extendedSymbol"," def extendedSymbol: Option[ValDef]"]},{"name":" def getAnnotations(): List[Annotation]","description":"dotty.dokka.tasty.BasicSupport.extension_getAnnotations","location":"api/dotty.dokka/tasty/-basic-support/extension_get-annotations.html","searchKeys":["extension_getAnnotations"," def getAnnotations(): List[Annotation]"]},{"name":"final def getCompanionSymbol: Option[Symbol]","description":"dotty.dokka.tasty.BasicSupport.extension_getCompanionSymbol","location":"api/dotty.dokka/tasty/-basic-support/extension_get-companion-symbol.html","searchKeys":["extension_getCompanionSymbol","final def getCompanionSymbol: Option[Symbol]"]},{"name":" def getCompanionSymbol: Option[Symbol]","description":"dotty.dokka.tasty.SymOps.extension_getCompanionSymbol","location":"api/dotty.dokka/tasty/-sym-ops/extension_get-companion-symbol.html","searchKeys":["extension_getCompanionSymbol"," def getCompanionSymbol: Option[Symbol]"]},{"name":"final def getExtraModifiers(): Seq[Modifier]","description":"dotty.dokka.tasty.BasicSupport.extension_getExtraModifiers","location":"api/dotty.dokka/tasty/-basic-support/extension_get-extra-modifiers.html","searchKeys":["extension_getExtraModifiers","final def getExtraModifiers(): Seq[Modifier]"]},{"name":" def getExtraModifiers(): Seq[Modifier]","description":"dotty.dokka.tasty.SymOps.extension_getExtraModifiers","location":"api/dotty.dokka/tasty/-sym-ops/extension_get-extra-modifiers.html","searchKeys":["extension_getExtraModifiers"," def getExtraModifiers(): Seq[Modifier]"]},{"name":"final def getVisibility(): Visibility","description":"dotty.dokka.tasty.BasicSupport.extension_getVisibility","location":"api/dotty.dokka/tasty/-basic-support/extension_get-visibility.html","searchKeys":["extension_getVisibility","final def getVisibility(): Visibility"]},{"name":" def getVisibility(): Visibility","description":"dotty.dokka.tasty.SymOps.extension_getVisibility","location":"api/dotty.dokka/tasty/-sym-ops/extension_get-visibility.html","searchKeys":["extension_getVisibility"," def getVisibility(): Visibility"]},{"name":"final def hackFlagsForImplicitClasslikes: Seq[Modifier]","description":"dotty.dokka.tasty.BasicSupport.extension_hackFlagsForImplicitClasslikes","location":"api/dotty.dokka/tasty/-basic-support/extension_hack-flags-for-implicit-classlikes.html","searchKeys":["extension_hackFlagsForImplicitClasslikes","final def hackFlagsForImplicitClasslikes: Seq[Modifier]"]},{"name":" def hackFlagsForImplicitClasslikes: Seq[Modifier]","description":"dotty.dokka.tasty.SymOps.extension_hackFlagsForImplicitClasslikes","location":"api/dotty.dokka/tasty/-sym-ops/extension_hack-flags-for-implicit-classlikes.html","searchKeys":["extension_hackFlagsForImplicitClasslikes"," def hackFlagsForImplicitClasslikes: Seq[Modifier]"]},{"name":"final def hackIsOpen: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_hackIsOpen","location":"api/dotty.dokka/tasty/-basic-support/extension_hack-is-open.html","searchKeys":["extension_hackIsOpen","final def hackIsOpen: Boolean"]},{"name":" def hackIsOpen: Boolean","description":"dotty.dokka.tasty.SymOps.extension_hackIsOpen","location":"api/dotty.dokka/tasty/-sym-ops/extension_hack-is-open.html","searchKeys":["extension_hackIsOpen"," def hackIsOpen: Boolean"]},{"name":"final def isCompanionObject: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_isCompanionObject","location":"api/dotty.dokka/tasty/-basic-support/extension_is-companion-object.html","searchKeys":["extension_isCompanionObject","final def isCompanionObject: Boolean"]},{"name":" def isCompanionObject: Boolean","description":"dotty.dokka.tasty.SymOps.extension_isCompanionObject","location":"api/dotty.dokka/tasty/-sym-ops/extension_is-companion-object.html","searchKeys":["extension_isCompanionObject"," def isCompanionObject: Boolean"]},{"name":"final def isExtensionMethod: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_isExtensionMethod","location":"api/dotty.dokka/tasty/-basic-support/extension_is-extension-method.html","searchKeys":["extension_isExtensionMethod","final def isExtensionMethod: Boolean"]},{"name":" def isExtensionMethod: Boolean","description":"dotty.dokka.tasty.SymOps.extension_isExtensionMethod","location":"api/dotty.dokka/tasty/-sym-ops/extension_is-extension-method.html","searchKeys":["extension_isExtensionMethod"," def isExtensionMethod: Boolean"]},{"name":"final def isGiven: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_isGiven","location":"api/dotty.dokka/tasty/-basic-support/extension_is-given.html","searchKeys":["extension_isGiven","final def isGiven: Boolean"]},{"name":" def isGiven: Boolean","description":"dotty.dokka.tasty.SymOps.extension_isGiven","location":"api/dotty.dokka/tasty/-sym-ops/extension_is-given.html","searchKeys":["extension_isGiven"," def isGiven: Boolean"]},{"name":"final def isHiddenByVisibility: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_isHiddenByVisibility","location":"api/dotty.dokka/tasty/-basic-support/extension_is-hidden-by-visibility.html","searchKeys":["extension_isHiddenByVisibility","final def isHiddenByVisibility: Boolean"]},{"name":" def isHiddenByVisibility: Boolean","description":"dotty.dokka.tasty.SymOps.extension_isHiddenByVisibility","location":"api/dotty.dokka/tasty/-sym-ops/extension_is-hidden-by-visibility.html","searchKeys":["extension_isHiddenByVisibility"," def isHiddenByVisibility: Boolean"]},{"name":"final def isLeftAssoc(d: Symbol): Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_isLeftAssoc","location":"api/dotty.dokka/tasty/-basic-support/extension_is-left-assoc.html","searchKeys":["extension_isLeftAssoc","final def isLeftAssoc(d: Symbol): Boolean"]},{"name":" def isLeftAssoc(d: Symbol): Boolean","description":"dotty.dokka.tasty.SymOps.extension_isLeftAssoc","location":"api/dotty.dokka/tasty/-sym-ops/extension_is-left-assoc.html","searchKeys":["extension_isLeftAssoc"," def isLeftAssoc(d: Symbol): Boolean"]},{"name":"final def packageName(ctx: Context): String","description":"dotty.dokka.tasty.BasicSupport.extension_packageName","location":"api/dotty.dokka/tasty/-basic-support/extension_package-name.html","searchKeys":["extension_packageName","final def packageName(ctx: Context): String"]},{"name":" def packageName(ctx: Context): String","description":"dotty.dokka.tasty.SymOps.extension_packageName","location":"api/dotty.dokka/tasty/-sym-ops/extension_package-name.html","searchKeys":["extension_packageName"," def packageName(ctx: Context): String"]},{"name":"final def shouldDocumentClasslike: Boolean","description":"dotty.dokka.tasty.BasicSupport.extension_shouldDocumentClasslike","location":"api/dotty.dokka/tasty/-basic-support/extension_should-document-classlike.html","searchKeys":["extension_shouldDocumentClasslike","final def shouldDocumentClasslike: Boolean"]},{"name":" def shouldDocumentClasslike: Boolean","description":"dotty.dokka.tasty.SymOps.extension_shouldDocumentClasslike","location":"api/dotty.dokka/tasty/-sym-ops/extension_should-document-classlike.html","searchKeys":["extension_shouldDocumentClasslike"," def shouldDocumentClasslike: Boolean"]},{"name":" def source(ctx: Context): Map[DokkaConfiguration$DokkaSourceSet, TastyDocumentableSource]","description":"dotty.dokka.tasty.BasicSupport.extension_source","location":"api/dotty.dokka/tasty/-basic-support/extension_source.html","searchKeys":["extension_source"," def source(ctx: Context): Map[DokkaConfiguration$DokkaSourceSet, TastyDocumentableSource]"]},{"name":"final def topLevelEntryName(ctx: Context): Option[String]","description":"dotty.dokka.tasty.BasicSupport.extension_topLevelEntryName","location":"api/dotty.dokka/tasty/-basic-support/extension_top-level-entry-name.html","searchKeys":["extension_topLevelEntryName","final def topLevelEntryName(ctx: Context): Option[String]"]},{"name":" def topLevelEntryName(ctx: Context): Option[String]","description":"dotty.dokka.tasty.SymOps.extension_topLevelEntryName","location":"api/dotty.dokka/tasty/-sym-ops/extension_top-level-entry-name.html","searchKeys":["extension_topLevelEntryName"," def topLevelEntryName(ctx: Context): Option[String]"]},{"name":" def parseAnnotation(annotTerm: Term): Annotation","description":"dotty.dokka.tasty.BasicSupport.parseAnnotation","location":"api/dotty.dokka/tasty/-basic-support/parse-annotation.html","searchKeys":["parseAnnotation"," def parseAnnotation(annotTerm: Term): Annotation"]},{"name":"final def r: r.type","description":"dotty.dokka.tasty.BasicSupport.r","location":"api/dotty.dokka/tasty/-basic-support/r.html","searchKeys":["r","final def r: r.type"]},{"name":" object DClass","description":"dotty.dokka.tasty.ClassLikeSupport","location":"api/dotty.dokka/tasty/-class-like-support/-d-class/index.html","searchKeys":["ClassLikeSupport"," object DClass"]},{"name":" def extractMembers: Seq[Member]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_extractMembers","location":"api/dotty.dokka/tasty/-class-like-support/extension_extract-members.html","searchKeys":["extension_extractMembers"," def extractMembers: Seq[Member]"]},{"name":" def getCompanion: Option[DRI]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getCompanion","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-companion.html","searchKeys":["extension_getCompanion"," def getCompanion: Option[DRI]"]},{"name":" def getConstructorMethod: Option[DFunction]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getConstructorMethod","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-constructor-method.html","searchKeys":["extension_getConstructorMethod"," def getConstructorMethod: Option[DFunction]"]},{"name":" def getConstructors: List[Symbol]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getConstructors","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-constructors.html","searchKeys":["extension_getConstructors"," def getConstructors: List[Symbol]"]},{"name":" def getNonTrivialInheritedMemberTrees: List[Tree]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getNonTrivialInheritedMemberTrees","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-non-trivial-inherited-member-trees.html","searchKeys":["extension_getNonTrivialInheritedMemberTrees"," def getNonTrivialInheritedMemberTrees: List[Tree]"]},{"name":" def getParameterModifier(parameter: Symbol): String","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getParameterModifier","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-parameter-modifier.html","searchKeys":["extension_getParameterModifier"," def getParameterModifier(parameter: Symbol): String"]},{"name":" def getParents: List[Tree]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getParents","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-parents.html","searchKeys":["extension_getParents"," def getParents: List[Tree]"]},{"name":" def getTypeParams: List[TypeDef]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_getTypeParams","location":"api/dotty.dokka/tasty/-class-like-support/extension_get-type-params.html","searchKeys":["extension_getTypeParams"," def getTypeParams: List[TypeDef]"]},{"name":" def membersToDocument: List[Statement]","description":"dotty.dokka.tasty.ClassLikeSupport.extension_membersToDocument","location":"api/dotty.dokka/tasty/-class-like-support/extension_members-to-document.html","searchKeys":["extension_membersToDocument"," def membersToDocument: List[Statement]"]},{"name":" def extractImplicitConversion(tpe: Type): Option[ImplicitConversion]","description":"dotty.dokka.tasty.ClassLikeSupport.extractImplicitConversion","location":"api/dotty.dokka/tasty/-class-like-support/extract-implicit-conversion.html","searchKeys":["extractImplicitConversion"," def extractImplicitConversion(tpe: Type): Option[ImplicitConversion]"]},{"name":" def parseArgument(argument: ValDef, prefix: Symbol => String, isExtendedSymbol: Boolean, isGrouped: Boolean): DParameter","description":"dotty.dokka.tasty.ClassLikeSupport.parseArgument","location":"api/dotty.dokka/tasty/-class-like-support/parse-argument.html","searchKeys":["parseArgument"," def parseArgument(argument: ValDef, prefix: Symbol => String, isExtendedSymbol: Boolean, isGrouped: Boolean): DParameter"]},{"name":" def parseClasslike(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass","description":"dotty.dokka.tasty.ClassLikeSupport.parseClasslike","location":"api/dotty.dokka/tasty/-class-like-support/parse-classlike.html","searchKeys":["parseClasslike"," def parseClasslike(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass"]},{"name":" def parseEnum(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass","description":"dotty.dokka.tasty.ClassLikeSupport.parseEnum","location":"api/dotty.dokka/tasty/-class-like-support/parse-enum.html","searchKeys":["parseEnum"," def parseEnum(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass"]},{"name":" def parseMethod(methodSymbol: Symbol, emptyParamsList: Boolean, paramPrefix: Symbol => String, kind: Kind): DFunction","description":"dotty.dokka.tasty.ClassLikeSupport.parseMethod","location":"api/dotty.dokka/tasty/-class-like-support/parse-method.html","searchKeys":["parseMethod"," def parseMethod(methodSymbol: Symbol, emptyParamsList: Boolean, paramPrefix: Symbol => String, kind: Kind): DFunction"]},{"name":" def parseObject(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass","description":"dotty.dokka.tasty.ClassLikeSupport.parseObject","location":"api/dotty.dokka/tasty/-class-like-support/parse-object.html","searchKeys":["parseObject"," def parseObject(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass"]},{"name":" def parseTypeArgument(argument: TypeDef): DTypeParameter","description":"dotty.dokka.tasty.ClassLikeSupport.parseTypeArgument","location":"api/dotty.dokka/tasty/-class-like-support/parse-type-argument.html","searchKeys":["parseTypeArgument"," def parseTypeArgument(argument: TypeDef): DTypeParameter"]},{"name":" def parseTypeDef(typeDef: TypeDef): DProperty","description":"dotty.dokka.tasty.ClassLikeSupport.parseTypeDef","location":"api/dotty.dokka/tasty/-class-like-support/parse-type-def.html","searchKeys":["parseTypeDef"," def parseTypeDef(typeDef: TypeDef): DProperty"]},{"name":" def parseValDef(valDef: ValDef): DProperty","description":"dotty.dokka.tasty.ClassLikeSupport.parseValDef","location":"api/dotty.dokka/tasty/-class-like-support/parse-val-def.html","searchKeys":["parseValDef"," def parseValDef(valDef: ValDef): DProperty"]},{"name":" trait DokkaBaseTastyInspector","description":"dotty.dokka.tasty.DokkaBaseTastyInspector","location":"api/dotty.dokka/tasty/-dokka-base-tasty-inspector/index.html","searchKeys":["DokkaBaseTastyInspector"," trait DokkaBaseTastyInspector"]},{"name":" def mergeWith(other: DPackage): DPackage","description":"dotty.dokka.tasty.DokkaBaseTastyInspector.extension_mergeWith","location":"api/dotty.dokka/tasty/-dokka-base-tasty-inspector/extension_merge-with.html","searchKeys":["extension_mergeWith"," def mergeWith(other: DPackage): DPackage"]},{"name":" def processCompilationUnit(reflect: Reflection)(root: Tree): Unit","description":"dotty.dokka.tasty.DokkaBaseTastyInspector.processCompilationUnit","location":"api/dotty.dokka/tasty/-dokka-base-tasty-inspector/process-compilation-unit.html","searchKeys":["processCompilationUnit"," def processCompilationUnit(reflect: Reflection)(root: Tree): Unit"]},{"name":" def result(): List[DPackage]","description":"dotty.dokka.tasty.DokkaBaseTastyInspector.result","location":"api/dotty.dokka/tasty/-dokka-base-tasty-inspector/result.html","searchKeys":["result"," def result(): List[DPackage]"]},{"name":"case class DokkaTastyInspector(sourceSet: SourceSetWrapper, parser: Parser, config: DottyDokkaConfig) extends DokkaBaseTastyInspector with TastyInspector","description":"dotty.dokka.tasty.DokkaTastyInspector","location":"api/dotty.dokka/tasty/-dokka-tasty-inspector/index.html","searchKeys":["DokkaTastyInspector","case class DokkaTastyInspector(sourceSet: SourceSetWrapper, parser: Parser, config: DottyDokkaConfig) extends DokkaBaseTastyInspector with TastyInspector"]},{"name":" trait PackageSupport","description":"dotty.dokka.tasty.PackageSupport","location":"api/dotty.dokka/tasty/-package-support/index.html","searchKeys":["PackageSupport"," trait PackageSupport"]},{"name":" def parsePackage(pck: PackageClause): DPackage","description":"dotty.dokka.tasty.PackageSupport.parsePackage","location":"api/dotty.dokka/tasty/-package-support/parse-package.html","searchKeys":["parsePackage"," def parsePackage(pck: PackageClause): DPackage"]},{"name":" def parsePackageObject(pckObj: ClassDef): DPackage","description":"dotty.dokka.tasty.PackageSupport.parsePackageObject","location":"api/dotty.dokka/tasty/-package-support/parse-package-object.html","searchKeys":["parsePackageObject"," def parsePackageObject(pckObj: ClassDef): DPackage"]},{"name":" class TastyFromClass extends TASTYCompiler","description":"dotty.dokka.tasty.SbtDokkaTastyInspector","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/index.html","searchKeys":["SbtDokkaTastyInspector"," class TastyFromClass extends TASTYCompiler"]},{"name":"override protected def backendPhases: List[List[Phase]]","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.backendPhases","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/backend-phases.html","searchKeys":["backendPhases","override protected def backendPhases: List[List[Phase]]"]},{"name":"override protected def frontendPhases: List[List[Phase]]","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.frontendPhases","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/frontend-phases.html","searchKeys":["frontendPhases","override protected def frontendPhases: List[List[Phase]]"]},{"name":"override protected def newCompiler(ctx: Context): Compiler","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.newCompiler","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-inspector-driver/new-compiler.html","searchKeys":["newCompiler","override protected def newCompiler(ctx: Context): Compiler"]},{"name":"override def newRun(ctx: Context): Run","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.newRun","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/new-run.html","searchKeys":["newRun","override def newRun(ctx: Context): Run"]},{"name":"override def phaseName: String","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.phaseName","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-inspector-phase/phase-name.html","searchKeys":["phaseName","override def phaseName: String"]},{"name":"override protected def picklerPhases: List[List[Phase]]","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.picklerPhases","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/pickler-phases.html","searchKeys":["picklerPhases","override protected def picklerPhases: List[List[Phase]]"]},{"name":" def run(filesToDocument: List[String])(ctx: Context): Unit","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.run","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-inspector-driver/run.html","searchKeys":["run"," def run(filesToDocument: List[String])(ctx: Context): Unit"]},{"name":"override protected def transformPhases: List[List[Phase]]","description":"dotty.dokka.tasty.SbtDokkaTastyInspector.transformPhases","location":"api/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/transform-phases.html","searchKeys":["transformPhases","override protected def transformPhases: List[List[Phase]]"]},{"name":" trait ScaladocSupport","description":"dotty.dokka.tasty.ScaladocSupport","location":"api/dotty.dokka/tasty/-scaladoc-support/index.html","searchKeys":["ScaladocSupport"," trait ScaladocSupport"]},{"name":" def parseComment(commentNode: Comment, tree: Tree): DocumentationNode","description":"dotty.dokka.tasty.ScaladocSupport.parseComment","location":"api/dotty.dokka/tasty/-scaladoc-support/parse-comment.html","searchKeys":["parseComment"," def parseComment(commentNode: Comment, tree: Tree): DocumentationNode"]},{"name":" class SymOps[R <: Reflection](val r: R)","description":"dotty.dokka.tasty.SymOps","location":"api/dotty.dokka/tasty/-sym-ops/index.html","searchKeys":["SymOps"," class SymOps[R <: Reflection](val r: R)"]},{"name":"given R as R","description":"dotty.dokka.tasty.SymOps.given_R","location":"api/dotty.dokka/tasty/-sym-ops/-r.html","searchKeys":["given_R","given R as R"]},{"name":"given R as R","description":"tests.givenSignatures.GivenClass.given_R","location":"api/tests/givenSignatures/-given-class/-r.html","searchKeys":["given_R","given R as R"]},{"name":" object MatchTypeCase","description":"dotty.dokka.tasty.SyntheticsSupport","location":"api/dotty.dokka/tasty/-synthetics-support/-match-type-case/index.html","searchKeys":["SyntheticsSupport"," object MatchTypeCase"]},{"name":" def constructorWithoutParamLists(c: ClassDef): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.constructorWithoutParamLists","location":"api/dotty.dokka/tasty/-synthetics-support/constructor-without-param-lists.html","searchKeys":["constructorWithoutParamLists"," def constructorWithoutParamLists(c: ClassDef): Boolean"]},{"name":" def flagsString: String","description":"dotty.dokka.tasty.SyntheticsSupport.extension_flagsString","location":"api/dotty.dokka/tasty/-synthetics-support/extension_flags-string.html","searchKeys":["extension_flagsString"," def flagsString: String"]},{"name":" def getAllMembers: List[Symbol]","description":"dotty.dokka.tasty.SyntheticsSupport.extension_getAllMembers","location":"api/dotty.dokka/tasty/-synthetics-support/extension_get-all-members.html","searchKeys":["extension_getAllMembers"," def getAllMembers: List[Symbol]"]},{"name":" def hackIsCompiletimeAppliedType(r: Reflection)(rtpe: Type): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_hackIsCompiletimeAppliedType","location":"api/dotty.dokka/tasty/-synthetics-support/extension_hack-is-compiletime-applied-type.html","searchKeys":["extension_hackIsCompiletimeAppliedType"," def hackIsCompiletimeAppliedType(r: Reflection)(rtpe: Type): Boolean"]},{"name":" def hackIsTupleType(r: Reflection)(rtpe: Type): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_hackIsTupleType","location":"api/dotty.dokka/tasty/-synthetics-support/extension_hack-is-tuple-type.html","searchKeys":["extension_hackIsTupleType"," def hackIsTupleType(r: Reflection)(rtpe: Type): Boolean"]},{"name":" def isCompiletimeAppliedType: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isCompiletimeAppliedType","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-compiletime-applied-type.html","searchKeys":["extension_isCompiletimeAppliedType"," def isCompiletimeAppliedType: Boolean"]},{"name":" def isDefaultHelperMethod: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isDefaultHelperMethod","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-default-helper-method.html","searchKeys":["extension_isDefaultHelperMethod"," def isDefaultHelperMethod: Boolean"]},{"name":" def isInfix: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isInfix","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-infix.html","searchKeys":["extension_isInfix"," def isInfix: Boolean"]},{"name":" def isOpaque: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isOpaque","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-opaque.html","searchKeys":["extension_isOpaque"," def isOpaque: Boolean"]},{"name":" def isSuperBridgeMethod: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isSuperBridgeMethod","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-super-bridge-method.html","searchKeys":["extension_isSuperBridgeMethod"," def isSuperBridgeMethod: Boolean"]},{"name":" def isSyntheticFunc: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isSyntheticFunc","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-synthetic-func.html","searchKeys":["extension_isSyntheticFunc"," def isSyntheticFunc: Boolean"]},{"name":" def isTupleType: Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.extension_isTupleType","location":"api/dotty.dokka/tasty/-synthetics-support/extension_is-tuple-type.html","searchKeys":["extension_isTupleType"," def isTupleType: Boolean"]},{"name":" def getSupertypes(c: ClassDef): List[(Symbol, Type)]","description":"dotty.dokka.tasty.SyntheticsSupport.getSupertypes","location":"api/dotty.dokka/tasty/-synthetics-support/get-supertypes.html","searchKeys":["getSupertypes"," def getSupertypes(c: ClassDef): List[(Symbol, Type)]"]},{"name":" def hackFlagsString(r: Reflection)(rsym: Symbol): String","description":"dotty.dokka.tasty.SyntheticsSupport.hackFlagsString","location":"api/dotty.dokka/tasty/-synthetics-support/hack-flags-string.html","searchKeys":["hackFlagsString"," def hackFlagsString(r: Reflection)(rsym: Symbol): String"]},{"name":" def hackGetAllMembers(r: Reflection)(rsym: Symbol): List[Symbol]","description":"dotty.dokka.tasty.SyntheticsSupport.hackGetAllMembers","location":"api/dotty.dokka/tasty/-synthetics-support/hack-get-all-members.html","searchKeys":["hackGetAllMembers"," def hackGetAllMembers(r: Reflection)(rsym: Symbol): List[Symbol]"]},{"name":" def hackGetSupertypes(r: Reflection)(rdef: ClassDef): List[(Symbol, Type)]","description":"dotty.dokka.tasty.SyntheticsSupport.hackGetSupertypes","location":"api/dotty.dokka/tasty/-synthetics-support/hack-get-supertypes.html","searchKeys":["hackGetSupertypes"," def hackGetSupertypes(r: Reflection)(rdef: ClassDef): List[(Symbol, Type)]"]},{"name":" def hackIsInfix(r: Reflection)(rsym: Symbol): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.hackIsInfix","location":"api/dotty.dokka/tasty/-synthetics-support/hack-is-infix.html","searchKeys":["hackIsInfix"," def hackIsInfix(r: Reflection)(rsym: Symbol): Boolean"]},{"name":" def hackIsOpaque(r: Reflection)(rsym: Symbol): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.hackIsOpaque","location":"api/dotty.dokka/tasty/-synthetics-support/hack-is-opaque.html","searchKeys":["hackIsOpaque"," def hackIsOpaque(r: Reflection)(rsym: Symbol): Boolean"]},{"name":" def isSyntheticField(c: Symbol): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.isSyntheticField","location":"api/dotty.dokka/tasty/-synthetics-support/is-synthetic-field.html","searchKeys":["isSyntheticField"," def isSyntheticField(c: Symbol): Boolean"]},{"name":" def isValidPos(pos: Position): Boolean","description":"dotty.dokka.tasty.SyntheticsSupport.isValidPos","location":"api/dotty.dokka/tasty/-synthetics-support/is-valid-pos.html","searchKeys":["isValidPos"," def isValidPos(pos: Position): Boolean"]},{"name":" def typeForClass(c: ClassDef): Type","description":"dotty.dokka.tasty.SyntheticsSupport.typeForClass","location":"api/dotty.dokka/tasty/-synthetics-support/type-for-class.html","searchKeys":["typeForClass"," def typeForClass(c: ClassDef): Type"]},{"name":"case class TastyParser(reflect: Reflection, inspector: DokkaBaseTastyInspector, config: DottyDokkaConfig) extends ScaladocSupport with BasicSupport with TypesSupport with ClassLikeSupport with SyntheticsSupport with PackageSupport","description":"dotty.dokka.tasty.TastyParser","location":"api/dotty.dokka/tasty/-tasty-parser/index.html","searchKeys":["TastyParser","case class TastyParser(reflect: Reflection, inspector: DokkaBaseTastyInspector, config: DottyDokkaConfig) extends ScaladocSupport with BasicSupport with TypesSupport with ClassLikeSupport with SyntheticsSupport with PackageSupport"]},{"name":" def parseRootTree(root: Tree): Seq[Documentable]","description":"dotty.dokka.tasty.TastyParser.parseRootTree","location":"api/dotty.dokka/tasty/-tasty-parser/parse-root-tree.html","searchKeys":["parseRootTree"," def parseRootTree(root: Tree): Seq[Documentable]"]},{"name":" def processSymbol[T](sym: Symbol)(op: => T): Option[T]","description":"dotty.dokka.tasty.TastyParser.processSymbol","location":"api/dotty.dokka/tasty/-tasty-parser/process-symbol.html","searchKeys":["processSymbol"," def processSymbol[T](sym: Symbol)(op: => T): Option[T]"]},{"name":" def processTree[T](tree: Tree)(op: => T): Option[T]","description":"dotty.dokka.tasty.TastyParser.processTree","location":"api/dotty.dokka/tasty/-tasty-parser/process-tree.html","searchKeys":["processTree"," def processTree[T](tree: Tree)(op: => T): Option[T]"]},{"name":" def processTreeOpt[T](tree: Tree)(op: => Option[T]): Option[T]","description":"dotty.dokka.tasty.TastyParser.processTreeOpt","location":"api/dotty.dokka/tasty/-tasty-parser/process-tree-opt.html","searchKeys":["processTreeOpt"," def processTreeOpt[T](tree: Tree)(op: => Option[T]): Option[T]"]},{"name":" def sourceSet: SourceSetWrapper","description":"dotty.dokka.tasty.TastyParser.sourceSet","location":"api/dotty.dokka/tasty/-tasty-parser/source-set.html","searchKeys":["sourceSet"," def sourceSet: SourceSetWrapper"]},{"name":" trait TypesSupport","description":"dotty.dokka.tasty.TypesSupport","location":"api/dotty.dokka/tasty/-types-support/index.html","searchKeys":["TypesSupport"," trait TypesSupport"]},{"name":" def getGivenInstance(method: DefDef): Option[Bound]","description":"dotty.dokka.tasty.TypesSupport.getGivenInstance","location":"api/dotty.dokka/tasty/-types-support/get-given-instance.html","searchKeys":["getGivenInstance"," def getGivenInstance(method: DefDef): Option[Bound]"]},{"name":" trait BaseConverter","description":"dotty.dokka.tasty.comments.BaseConverter","location":"api/dotty.dokka/tasty/comments/-base-converter/index.html","searchKeys":["BaseConverter"," trait BaseConverter"]},{"name":"protected def withParsedQuery(queryStr: String)(thunk: Query => DocTag): DocTag","description":"dotty.dokka.tasty.comments.BaseConverter.withParsedQuery","location":"api/dotty.dokka/tasty/comments/-base-converter/with-parsed-query.html","searchKeys":["withParsedQuery","protected def withParsedQuery(queryStr: String)(thunk: Query => DocTag): DocTag"]},{"name":" object Cleaner","description":"dotty.dokka.tasty.comments.Cleaner$","location":"api/dotty.dokka/tasty/comments/-cleaner/index.html","searchKeys":["Cleaner$"," object Cleaner"]},{"name":" def clean(comment: String): List[String]","description":"dotty.dokka.tasty.comments.Cleaner$.clean","location":"api/dotty.dokka/tasty/comments/-cleaner/clean.html","searchKeys":["clean"," def clean(comment: String): List[String]"]},{"name":"case class Comment(body: DocTag, short: Option[DocTag], authors: List[DocTag], see: List[DocTag], result: Option[DocTag], throws: SortedMap[String, (DocTag, DocTag)], valueParams: SortedMap[String, DocTag], typeParams: SortedMap[String, DocTag], version: Option[DocTag], since: Option[DocTag], todo: List[DocTag], deprecated: Option[DocTag], note: List[DocTag], example: List[DocTag], constructor: Option[DocTag], group: Option[DocTag], groupDesc: SortedMap[String, DocTag], groupNames: SortedMap[String, DocTag], groupPrio: SortedMap[String, DocTag], hideImplicitConversions: List[DocTag])","description":"dotty.dokka.tasty.comments.Comment","location":"api/dotty.dokka/tasty/comments/-comment/index.html","searchKeys":["Comment","case class Comment(body: DocTag, short: Option[DocTag], authors: List[DocTag], see: List[DocTag], result: Option[DocTag], throws: SortedMap[String, (DocTag, DocTag)], valueParams: SortedMap[String, DocTag], typeParams: SortedMap[String, DocTag], version: Option[DocTag], since: Option[DocTag], todo: List[DocTag], deprecated: Option[DocTag], note: List[DocTag], example: List[DocTag], constructor: Option[DocTag], group: Option[DocTag], groupDesc: SortedMap[String, DocTag], groupNames: SortedMap[String, DocTag], groupPrio: SortedMap[String, DocTag], hideImplicitConversions: List[DocTag])"]},{"name":"case class DokkaCommentBody(summary: Option[DocTag], body: DocTag)","description":"dotty.dokka.tasty.comments.DokkaCommentBody","location":"api/dotty.dokka/tasty/comments/-dokka-comment-body/index.html","searchKeys":["DokkaCommentBody","case class DokkaCommentBody(summary: Option[DocTag], body: DocTag)"]},{"name":" object Emitter","description":"dotty.dokka.tasty.comments.Emitter$","location":"api/dotty.dokka/tasty/comments/-emitter/index.html","searchKeys":["Emitter$"," object Emitter"]},{"name":" def collect[T](thunk: Emitter[T] => Unit): Seq[T]","description":"dotty.dokka.tasty.comments.Emitter$.collect","location":"api/dotty.dokka/tasty/comments/-emitter/collect.html","searchKeys":["collect"," def collect[T](thunk: Emitter[T] => Unit): Seq[T]"]},{"name":" def emit[T](e: Emitter[T])(t: T): Emitter[T]","description":"dotty.dokka.tasty.comments.Emitter$.emit","location":"api/dotty.dokka/tasty/comments/-emitter/emit.html","searchKeys":["emit"," def emit[T](e: Emitter[T])(t: T): Emitter[T]"]},{"name":" def lastEmittedItem[T](e: Emitter[T]): Option[T]","description":"dotty.dokka.tasty.comments.Emitter$.lastEmittedItem","location":"api/dotty.dokka/tasty/comments/-emitter/last-emitted-item.html","searchKeys":["lastEmittedItem"," def lastEmittedItem[T](e: Emitter[T]): Option[T]"]},{"name":" class MarkdownCommentParser(repr: Repr) extends MarkupConversion[Document]","description":"dotty.dokka.tasty.comments.MarkdownCommentParser","location":"api/dotty.dokka/tasty/comments/-markdown-comment-parser/index.html","searchKeys":["MarkdownCommentParser"," class MarkdownCommentParser(repr: Repr) extends MarkupConversion[Document]"]},{"name":" def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]","description":"dotty.dokka.tasty.comments.MarkdownCommentParser.linkedExceptions","location":"api/dotty.dokka/tasty/comments/-markdown-comment-parser/linked-exceptions.html","searchKeys":["linkedExceptions"," def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]"]},{"name":"protected def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]","description":"dotty.dokka.tasty.comments.MarkupConversion.linkedExceptions","location":"api/dotty.dokka/tasty/comments/-markup-conversion/linked-exceptions.html","searchKeys":["linkedExceptions","protected def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]"]},{"name":" def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]","description":"dotty.dokka.tasty.comments.WikiCommentParser.linkedExceptions","location":"api/dotty.dokka/tasty/comments/-wiki-comment-parser/linked-exceptions.html","searchKeys":["linkedExceptions"," def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]"]},{"name":" def markupToDokka(md: Document): DocTag","description":"dotty.dokka.tasty.comments.MarkdownCommentParser.markupToDokka","location":"api/dotty.dokka/tasty/comments/-markdown-comment-parser/markup-to-dokka.html","searchKeys":["markupToDokka"," def markupToDokka(md: Document): DocTag"]},{"name":"protected def markupToDokka(t: T): DocTag","description":"dotty.dokka.tasty.comments.MarkupConversion.markupToDokka","location":"api/dotty.dokka/tasty/comments/-markup-conversion/markup-to-dokka.html","searchKeys":["markupToDokka","protected def markupToDokka(t: T): DocTag"]},{"name":" def markupToDokka(body: Body): DocTag","description":"dotty.dokka.tasty.comments.WikiCommentParser.markupToDokka","location":"api/dotty.dokka/tasty/comments/-wiki-comment-parser/markup-to-dokka.html","searchKeys":["markupToDokka"," def markupToDokka(body: Body): DocTag"]},{"name":" def markupToDokkaCommentBody(md: Document): DokkaCommentBody","description":"dotty.dokka.tasty.comments.MarkdownCommentParser.markupToDokkaCommentBody","location":"api/dotty.dokka/tasty/comments/-markdown-comment-parser/markup-to-dokka-comment-body.html","searchKeys":["markupToDokkaCommentBody"," def markupToDokkaCommentBody(md: Document): DokkaCommentBody"]},{"name":"protected def markupToDokkaCommentBody(t: T): DokkaCommentBody","description":"dotty.dokka.tasty.comments.MarkupConversion.markupToDokkaCommentBody","location":"api/dotty.dokka/tasty/comments/-markup-conversion/markup-to-dokka-comment-body.html","searchKeys":["markupToDokkaCommentBody","protected def markupToDokkaCommentBody(t: T): DokkaCommentBody"]},{"name":" def markupToDokkaCommentBody(body: Body): DokkaCommentBody","description":"dotty.dokka.tasty.comments.WikiCommentParser.markupToDokkaCommentBody","location":"api/dotty.dokka/tasty/comments/-wiki-comment-parser/markup-to-dokka-comment-body.html","searchKeys":["markupToDokkaCommentBody"," def markupToDokkaCommentBody(body: Body): DokkaCommentBody"]},{"name":" def stringToMarkup(str: String): Document","description":"dotty.dokka.tasty.comments.MarkdownCommentParser.stringToMarkup","location":"api/dotty.dokka/tasty/comments/-markdown-comment-parser/string-to-markup.html","searchKeys":["stringToMarkup"," def stringToMarkup(str: String): Document"]},{"name":"protected def stringToMarkup(str: String): T","description":"dotty.dokka.tasty.comments.MarkupConversion.stringToMarkup","location":"api/dotty.dokka/tasty/comments/-markup-conversion/string-to-markup.html","searchKeys":["stringToMarkup","protected def stringToMarkup(str: String): T"]},{"name":" def stringToMarkup(str: String): Body","description":"dotty.dokka.tasty.comments.WikiCommentParser.stringToMarkup","location":"api/dotty.dokka/tasty/comments/-wiki-comment-parser/string-to-markup.html","searchKeys":["stringToMarkup"," def stringToMarkup(str: String): Body"]},{"name":" object SymOps extends SymOps[r.type]","description":"dotty.dokka.tasty.comments.MarkdownConverter","location":"api/dotty.dokka/tasty/comments/-markdown-converter/-sym-ops/index.html","searchKeys":["MarkdownConverter"," object SymOps extends SymOps[r.type]"]},{"name":" object MarkdownConverter","description":"dotty.dokka.tasty.comments.MarkdownConverter$","location":"api/dotty.dokka/tasty/comments/-markdown-converter$/index.html","searchKeys":["MarkdownConverter$"," object MarkdownConverter"]},{"name":" def splitWikiLink(chars: String): (String, String)","description":"dotty.dokka.tasty.comments.MarkdownConverter$.splitWikiLink","location":"api/dotty.dokka/tasty/comments/-markdown-converter$/split-wiki-link.html","searchKeys":["splitWikiLink"," def splitWikiLink(chars: String): (String, String)"]},{"name":" def convertChildren(n: Node): Seq[DocTag]","description":"dotty.dokka.tasty.comments.MarkdownConverter.convertChildren","location":"api/dotty.dokka/tasty/comments/-markdown-converter/convert-children.html","searchKeys":["convertChildren"," def convertChildren(n: Node): Seq[DocTag]"]},{"name":" def convertDocument(doc: Document): DocTag","description":"dotty.dokka.tasty.comments.MarkdownConverter.convertDocument","location":"api/dotty.dokka/tasty/comments/-markdown-converter/convert-document.html","searchKeys":["convertDocument"," def convertDocument(doc: Document): DocTag"]},{"name":" def emitConvertedNode(n: Node)(x$2: Emitter[DocTag]): Unit","description":"dotty.dokka.tasty.comments.MarkdownConverter.emitConvertedNode","location":"api/dotty.dokka/tasty/comments/-markdown-converter/emit-converted-node.html","searchKeys":["emitConvertedNode"," def emitConvertedNode(n: Node)(x$2: Emitter[DocTag]): Unit"]},{"name":" def extractAndConvertSummary(doc: Document): Option[DocTag]","description":"dotty.dokka.tasty.comments.MarkdownConverter.extractAndConvertSummary","location":"api/dotty.dokka/tasty/comments/-markdown-converter/extract-and-convert-summary.html","searchKeys":["extractAndConvertSummary"," def extractAndConvertSummary(doc: Document): Option[DocTag]"]},{"name":" def resolveLinkQuery(queryStr: String, body: String): DocTag","description":"dotty.dokka.tasty.comments.MarkdownConverter.resolveLinkQuery","location":"api/dotty.dokka/tasty/comments/-markdown-converter/resolve-link-query.html","searchKeys":["resolveLinkQuery"," def resolveLinkQuery(queryStr: String, body: String): DocTag"]},{"name":" def resolveLinkQuery(queryStr: String, bodyOpt: Option[Inline]): DocTag","description":"dotty.dokka.tasty.comments.wiki.Converter.resolveLinkQuery","location":"api/dotty.dokka/tasty/comments/wiki/-converter/resolve-link-query.html","searchKeys":["resolveLinkQuery"," def resolveLinkQuery(queryStr: String, bodyOpt: Option[Inline]): DocTag"]},{"name":" object MarkdownParser","description":"dotty.dokka.tasty.comments.MarkdownParser$","location":"api/dotty.dokka/tasty/comments/-markdown-parser/index.html","searchKeys":["MarkdownParser$"," object MarkdownParser"]},{"name":" def parseToMarkdown(text: String): Document","description":"dotty.dokka.tasty.comments.MarkdownParser$.parseToMarkdown","location":"api/dotty.dokka/tasty/comments/-markdown-parser/parse-to-markdown.html","searchKeys":["parseToMarkdown"," def parseToMarkdown(text: String): Document"]},{"name":" def renderToText(node: Node): String","description":"dotty.dokka.tasty.comments.MarkdownParser$.renderToText","location":"api/dotty.dokka/tasty/comments/-markdown-parser/render-to-text.html","searchKeys":["renderToText"," def renderToText(node: Node): String"]},{"name":" trait MarkupConversion[T]","description":"dotty.dokka.tasty.comments.MarkupConversion","location":"api/dotty.dokka/tasty/comments/-markup-conversion/index.html","searchKeys":["MarkupConversion"," trait MarkupConversion[T]"]},{"name":"final def parse(preparsed: PreparsedComment): Comment","description":"dotty.dokka.tasty.comments.MarkupConversion.parse","location":"api/dotty.dokka/tasty/comments/-markup-conversion/parse.html","searchKeys":["parse","final def parse(preparsed: PreparsedComment): Comment"]},{"name":" def parse(str: String): Document","description":"dotty.dokka.tasty.comments.dbg$.parse","location":"api/dotty.dokka/tasty/comments/dbg/parse.html","searchKeys":["parse"," def parse(str: String): Document"]},{"name":" trait MemberLookup","description":"dotty.dokka.tasty.comments.MemberLookup","location":"api/dotty.dokka/tasty/comments/-member-lookup/index.html","searchKeys":["MemberLookup"," trait MemberLookup"]},{"name":" object MemberLookup extends MemberLookup","description":"dotty.dokka.tasty.comments.MemberLookup$","location":"api/dotty.dokka/tasty/comments/-member-lookup$/index.html","searchKeys":["MemberLookup$"," object MemberLookup extends MemberLookup"]},{"name":" def lookup(r: Reflection)(query: Query, owner: Symbol): Option[(Symbol, String)]","description":"dotty.dokka.tasty.comments.MemberLookup.lookup","location":"api/dotty.dokka/tasty/comments/-member-lookup/lookup.html","searchKeys":["lookup"," def lookup(r: Reflection)(query: Query, owner: Symbol): Option[(Symbol, String)]"]},{"name":" def lookupOpt(r: Reflection)(query: Query, ownerOpt: Option[Symbol]): Option[(Symbol, String)]","description":"dotty.dokka.tasty.comments.MemberLookup.lookupOpt","location":"api/dotty.dokka/tasty/comments/-member-lookup/lookup-opt.html","searchKeys":["lookupOpt"," def lookupOpt(r: Reflection)(query: Query, ownerOpt: Option[Symbol]): Option[(Symbol, String)]"]},{"name":"case class PreparsedComment(body: String, authors: List[String], see: List[String], result: List[String], throws: SortedMap[String, String], valueParams: SortedMap[String, String], typeParams: SortedMap[String, String], version: List[String], since: List[String], todo: List[String], deprecated: List[String], note: List[String], example: List[String], constructor: List[String], group: List[String], groupDesc: SortedMap[String, String], groupNames: SortedMap[String, String], groupPrio: SortedMap[String, String], hideImplicitConversions: List[String], shortDescription: List[String], syntax: List[String])","description":"dotty.dokka.tasty.comments.PreparsedComment","location":"api/dotty.dokka/tasty/comments/-preparsed-comment/index.html","searchKeys":["PreparsedComment","case class PreparsedComment(body: String, authors: List[String], see: List[String], result: List[String], throws: SortedMap[String, String], valueParams: SortedMap[String, String], typeParams: SortedMap[String, String], version: List[String], since: List[String], todo: List[String], deprecated: List[String], note: List[String], example: List[String], constructor: List[String], group: List[String], groupDesc: SortedMap[String, String], groupNames: SortedMap[String, String], groupPrio: SortedMap[String, String], hideImplicitConversions: List[String], shortDescription: List[String], syntax: List[String])"]},{"name":" object Preparser","description":"dotty.dokka.tasty.comments.Preparser$","location":"api/dotty.dokka/tasty/comments/-preparser/index.html","searchKeys":["Preparser$"," object Preparser"]},{"name":" def preparse(comment: List[String]): PreparsedComment","description":"dotty.dokka.tasty.comments.Preparser$.preparse","location":"api/dotty.dokka/tasty/comments/-preparser/preparse.html","searchKeys":["preparse"," def preparse(comment: List[String]): PreparsedComment"]},{"name":"sealed trait Query","description":"dotty.dokka.tasty.comments.Query","location":"api/dotty.dokka/tasty/comments/-query/index.html","searchKeys":["Query","sealed trait Query"]},{"name":"case class QualifiedId(id: Qual, sep: Char, rest: QuerySegment) extends QuerySegment","description":"dotty.dokka.tasty.comments.Query$","location":"api/dotty.dokka/tasty/comments/-query$/-qualified-id/index.html","searchKeys":["Query$","case class QualifiedId(id: Qual, sep: Char, rest: QuerySegment) extends QuerySegment"]},{"name":" def asString: String","description":"dotty.dokka.tasty.comments.Query$.asString","location":"api/dotty.dokka/tasty/comments/-query$/-qual/as-string.html","searchKeys":["asString"," def asString: String"]},{"name":" def asList: List[String]","description":"dotty.dokka.tasty.comments.Query.asList","location":"api/dotty.dokka/tasty/comments/-query/as-list.html","searchKeys":["asList"," def asList: List[String]"]},{"name":" def join: String","description":"dotty.dokka.tasty.comments.Query.join","location":"api/dotty.dokka/tasty/comments/-query/join.html","searchKeys":["join"," def join: String"]},{"name":" class QueryParseException(val query: CharSequence, val at: Int, val problem: String) extends Exception","description":"dotty.dokka.tasty.comments.QueryParser","location":"api/dotty.dokka/tasty/comments/-query-parser/-query-parse-exception/index.html","searchKeys":["QueryParser"," class QueryParseException(val query: CharSequence, val at: Int, val problem: String) extends Exception"]},{"name":" def readIdentifier(): Qual","description":"dotty.dokka.tasty.comments.QueryParser.readIdentifier","location":"api/dotty.dokka/tasty/comments/-query-parser/read-identifier.html","searchKeys":["readIdentifier"," def readIdentifier(): Qual"]},{"name":" def readQuery(): Query","description":"dotty.dokka.tasty.comments.QueryParser.readQuery","location":"api/dotty.dokka/tasty/comments/-query-parser/read-query.html","searchKeys":["readQuery"," def readQuery(): Query"]},{"name":" def readQuotedIdentifier(): Qual","description":"dotty.dokka.tasty.comments.QueryParser.readQuotedIdentifier","location":"api/dotty.dokka/tasty/comments/-query-parser/read-quoted-identifier.html","searchKeys":["readQuotedIdentifier"," def readQuotedIdentifier(): Qual"]},{"name":" def readSegmentedQuery(): QuerySegment","description":"dotty.dokka.tasty.comments.QueryParser.readSegmentedQuery","location":"api/dotty.dokka/tasty/comments/-query-parser/read-segmented-query.html","searchKeys":["readSegmentedQuery"," def readSegmentedQuery(): QuerySegment"]},{"name":" def readSimpleIdentifier(): Qual","description":"dotty.dokka.tasty.comments.QueryParser.readSimpleIdentifier","location":"api/dotty.dokka/tasty/comments/-query-parser/read-simple-identifier.html","searchKeys":["readSimpleIdentifier"," def readSimpleIdentifier(): Qual"]},{"name":" def tryReadQuery(): Either[QueryParseException, Query]","description":"dotty.dokka.tasty.comments.QueryParser.tryReadQuery","location":"api/dotty.dokka/tasty/comments/-query-parser/try-read-query.html","searchKeys":["tryReadQuery"," def tryReadQuery(): Either[QueryParseException, Query]"]},{"name":"sealed trait QuerySegment extends Query","description":"dotty.dokka.tasty.comments.QuerySegment","location":"api/dotty.dokka/tasty/comments/-query-segment/index.html","searchKeys":["QuerySegment","sealed trait QuerySegment extends Query"]},{"name":" object Regexes","description":"dotty.dokka.tasty.comments.Regexes$","location":"api/dotty.dokka/tasty/comments/-regexes/index.html","searchKeys":["Regexes$"," object Regexes"]},{"name":" def htmlReplacement(mtch: Match): String","description":"dotty.dokka.tasty.comments.Regexes$.htmlReplacement","location":"api/dotty.dokka/tasty/comments/-regexes/html-replacement.html","searchKeys":["htmlReplacement"," def htmlReplacement(mtch: Match): String"]},{"name":" def javadocReplacement(mtch: Match): String","description":"dotty.dokka.tasty.comments.Regexes$.javadocReplacement","location":"api/dotty.dokka/tasty/comments/-regexes/javadoc-replacement.html","searchKeys":["javadocReplacement"," def javadocReplacement(mtch: Match): String"]},{"name":" class Repr(val r: Reflection)(val sym: Symbol)","description":"dotty.dokka.tasty.comments.Repr","location":"api/dotty.dokka/tasty/comments/-repr/index.html","searchKeys":["Repr"," class Repr(val r: Reflection)(val sym: Symbol)"]},{"name":"case class WikiCommentParser(repr: Repr) extends MarkupConversion[Body]","description":"dotty.dokka.tasty.comments.WikiCommentParser","location":"api/dotty.dokka/tasty/comments/-wiki-comment-parser/index.html","searchKeys":["WikiCommentParser","case class WikiCommentParser(repr: Repr) extends MarkupConversion[Body]"]},{"name":"case class See(n: Node, c: Seq[See])","description":"dotty.dokka.tasty.comments.dbg$","location":"api/dotty.dokka/tasty/comments/dbg/-see/index.html","searchKeys":["dbg$","case class See(n: Node, c: Seq[See])"]},{"name":" def parseRaw(str: String): Document","description":"dotty.dokka.tasty.comments.dbg$.parseRaw","location":"api/dotty.dokka/tasty/comments/dbg/parse-raw.html","searchKeys":["parseRaw"," def parseRaw(str: String): Document"]},{"name":" def see(n: Node): See","description":"dotty.dokka.tasty.comments.dbg$.see","location":"api/dotty.dokka/tasty/comments/dbg/see.html","searchKeys":["see"," def see(n: Node): See"]},{"name":" def show(sb: StringBuilder, indent: Int): Unit","description":"dotty.dokka.tasty.comments.dbg$.show","location":"api/dotty.dokka/tasty/comments/dbg/-see/show.html","searchKeys":["show"," def show(sb: StringBuilder, indent: Int): Unit"]},{"name":"override def toString: String","description":"dotty.dokka.tasty.comments.dbg$.toString","location":"api/dotty.dokka/tasty/comments/dbg/-see/to-string.html","searchKeys":["toString","override def toString: String"]},{"name":" object dkk","description":"dotty.dokka.tasty.comments.dkk$","location":"api/dotty.dokka/tasty/comments/dkk/index.html","searchKeys":["dkk$"," object dkk"]},{"name":" def pre(params: (String, String)*)(children: DocTag*): Pre","description":"dotty.dokka.tasty.comments.dkk$.pre","location":"api/dotty.dokka/tasty/comments/dkk/pre.html","searchKeys":["pre"," def pre(params: (String, String)*)(children: DocTag*): Pre"]},{"name":" object kt","description":"dotty.dokka.tasty.comments.kt$","location":"api/dotty.dokka/tasty/comments/kt/index.html","searchKeys":["kt$"," object kt"]},{"name":" def emptyList[T]: List[T]","description":"dotty.dokka.tasty.comments.kt$.emptyList","location":"api/dotty.dokka/tasty/comments/kt/empty-list.html","searchKeys":["emptyList"," def emptyList[T]: List[T]"]},{"name":" def emptyMap[A, B]: Map[A, B]","description":"dotty.dokka.tasty.comments.kt$.emptyMap","location":"api/dotty.dokka/tasty/comments/kt/empty-map.html","searchKeys":["emptyMap"," def emptyMap[A, B]: Map[A, B]"]},{"name":"sealed abstract class Block","description":"dotty.dokka.tasty.comments.wiki.Block","location":"api/dotty.dokka/tasty/comments/wiki/-block/index.html","searchKeys":["Block","sealed abstract class Block"]},{"name":"final case class Body(blocks: Seq[Block])","description":"dotty.dokka.tasty.comments.wiki.Body","location":"api/dotty.dokka/tasty/comments/wiki/-body/index.html","searchKeys":["Body","final case class Body(blocks: Seq[Block])"]},{"name":"final case class Bold(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Bold","location":"api/dotty.dokka/tasty/comments/wiki/-bold/index.html","searchKeys":["Bold","final case class Bold(text: Inline) extends Inline"]},{"name":"final case class Chain(items: Seq[Inline]) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Chain","location":"api/dotty.dokka/tasty/comments/wiki/-chain/index.html","searchKeys":["Chain","final case class Chain(items: Seq[Inline]) extends Inline"]},{"name":" object Chain","description":"dotty.dokka.tasty.comments.wiki.Chain$","location":"api/dotty.dokka/tasty/comments/wiki/-chain$/index.html","searchKeys":["Chain$"," object Chain"]},{"name":"sealed class CharReader(buffer: String)","description":"dotty.dokka.tasty.comments.wiki.CharReader","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/index.html","searchKeys":["CharReader","sealed class CharReader(buffer: String)"]},{"name":" def char: Char","description":"dotty.dokka.tasty.comments.wiki.CharReader.char","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/char.html","searchKeys":["char"," def char: Char"]},{"name":"final def check(chars: String): Boolean","description":"dotty.dokka.tasty.comments.wiki.CharReader.check","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/check.html","searchKeys":["check","final def check(chars: String): Boolean"]},{"name":" def countWhitespace: Int","description":"dotty.dokka.tasty.comments.wiki.CharReader.countWhitespace","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/count-whitespace.html","searchKeys":["countWhitespace"," def countWhitespace: Int"]},{"name":" def isWhitespace(c: Char): Boolean","description":"dotty.dokka.tasty.comments.wiki.CharReader.isWhitespace","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/is-whitespace.html","searchKeys":["isWhitespace"," def isWhitespace(c: Char): Boolean"]},{"name":" def isWhitespaceOrNewLine(c: Char): Boolean","description":"dotty.dokka.tasty.comments.wiki.CharReader.isWhitespaceOrNewLine","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/is-whitespace-or-new-line.html","searchKeys":["isWhitespaceOrNewLine"," def isWhitespaceOrNewLine(c: Char): Boolean"]},{"name":" def jumpWhitespace(): Int","description":"dotty.dokka.tasty.comments.wiki.CharReader.jumpWhitespace","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/jump-whitespace.html","searchKeys":["jumpWhitespace"," def jumpWhitespace(): Int"]},{"name":" def jumpWhitespaceOrNewLine(): Int","description":"dotty.dokka.tasty.comments.wiki.CharReader.jumpWhitespaceOrNewLine","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/jump-whitespace-or-new-line.html","searchKeys":["jumpWhitespaceOrNewLine"," def jumpWhitespaceOrNewLine(): Int"]},{"name":"final def nextChar(): Unit","description":"dotty.dokka.tasty.comments.wiki.CharReader.nextChar","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/next-char.html","searchKeys":["nextChar","final def nextChar(): Unit"]},{"name":"final def repeatJump(c: Char, max: Int): Int","description":"dotty.dokka.tasty.comments.wiki.CharReader.repeatJump","location":"api/dotty.dokka/tasty/comments/wiki/-char-reader/repeat-jump.html","searchKeys":["repeatJump","final def repeatJump(c: Char, max: Int): Int"]},{"name":"final case class Code(data: String) extends Block","description":"dotty.dokka.tasty.comments.wiki.Code","location":"api/dotty.dokka/tasty/comments/wiki/-code/index.html","searchKeys":["Code","final case class Code(data: String) extends Block"]},{"name":" object SymOps extends SymOps[r.type]","description":"dotty.dokka.tasty.comments.wiki.Converter","location":"api/dotty.dokka/tasty/comments/wiki/-converter/-sym-ops/index.html","searchKeys":["Converter"," object SymOps extends SymOps[r.type]"]},{"name":" def convertBlock(block: Block): Seq[DocTag]","description":"dotty.dokka.tasty.comments.wiki.Converter.convertBlock","location":"api/dotty.dokka/tasty/comments/wiki/-converter/convert-block.html","searchKeys":["convertBlock"," def convertBlock(block: Block): Seq[DocTag]"]},{"name":" def convertBody(body: Body): DocTag","description":"dotty.dokka.tasty.comments.wiki.Converter.convertBody","location":"api/dotty.dokka/tasty/comments/wiki/-converter/convert-body.html","searchKeys":["convertBody"," def convertBody(body: Body): DocTag"]},{"name":" def convertInline(inl: Inline): Seq[DocTag]","description":"dotty.dokka.tasty.comments.wiki.Converter.convertInline","location":"api/dotty.dokka/tasty/comments/wiki/-converter/convert-inline.html","searchKeys":["convertInline"," def convertInline(inl: Inline): Seq[DocTag]"]},{"name":" def convertListItems(items: Seq[Block]): Seq[DocTag]","description":"dotty.dokka.tasty.comments.wiki.Converter.convertListItems","location":"api/dotty.dokka/tasty/comments/wiki/-converter/convert-list-items.html","searchKeys":["convertListItems"," def convertListItems(items: Seq[Block]): Seq[DocTag]"]},{"name":" def emitBlock(block: Block)(x$2: Emitter[DocTag]): Unit","description":"dotty.dokka.tasty.comments.wiki.Converter.emitBlock","location":"api/dotty.dokka/tasty/comments/wiki/-converter/emit-block.html","searchKeys":["emitBlock"," def emitBlock(block: Block)(x$2: Emitter[DocTag]): Unit"]},{"name":" def emitInline(inl: Inline)(x$2: Emitter[DocTag]): Unit","description":"dotty.dokka.tasty.comments.wiki.Converter.emitInline","location":"api/dotty.dokka/tasty/comments/wiki/-converter/emit-inline.html","searchKeys":["emitInline"," def emitInline(inl: Inline)(x$2: Emitter[DocTag]): Unit"]},{"name":"final case class DefinitionList(items: SortedMap[Inline, Block]) extends Block","description":"dotty.dokka.tasty.comments.wiki.DefinitionList","location":"api/dotty.dokka/tasty/comments/wiki/-definition-list/index.html","searchKeys":["DefinitionList","final case class DefinitionList(items: SortedMap[Inline, Block]) extends Block"]},{"name":"final case class HorizontalRule() extends Block","description":"dotty.dokka.tasty.comments.wiki.HorizontalRule","location":"api/dotty.dokka/tasty/comments/wiki/-horizontal-rule/index.html","searchKeys":["HorizontalRule","final case class HorizontalRule() extends Block"]},{"name":"final case class HtmlTag(data: String) extends Inline","description":"dotty.dokka.tasty.comments.wiki.HtmlTag","location":"api/dotty.dokka/tasty/comments/wiki/-html-tag/index.html","searchKeys":["HtmlTag","final case class HtmlTag(data: String) extends Inline"]},{"name":" def canClose(open: HtmlTag): Boolean","description":"dotty.dokka.tasty.comments.wiki.HtmlTag.canClose","location":"api/dotty.dokka/tasty/comments/wiki/-html-tag/can-close.html","searchKeys":["canClose"," def canClose(open: HtmlTag): Boolean"]},{"name":" def close: Option[HtmlTag]","description":"dotty.dokka.tasty.comments.wiki.HtmlTag.close","location":"api/dotty.dokka/tasty/comments/wiki/-html-tag/close.html","searchKeys":["close"," def close: Option[HtmlTag]"]},{"name":"sealed abstract class Inline","description":"dotty.dokka.tasty.comments.wiki.Inline","location":"api/dotty.dokka/tasty/comments/wiki/-inline/index.html","searchKeys":["Inline","sealed abstract class Inline"]},{"name":" def isEmpty: Boolean","description":"dotty.dokka.tasty.comments.wiki.Inline.isEmpty","location":"api/dotty.dokka/tasty/comments/wiki/-inline/is-empty.html","searchKeys":["isEmpty"," def isEmpty: Boolean"]},{"name":"final case class Italic(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Italic","location":"api/dotty.dokka/tasty/comments/wiki/-italic/index.html","searchKeys":["Italic","final case class Italic(text: Inline) extends Inline"]},{"name":"sealed trait LinkTo","description":"dotty.dokka.tasty.comments.wiki.LinkTo","location":"api/dotty.dokka/tasty/comments/wiki/-link-to/index.html","searchKeys":["LinkTo","sealed trait LinkTo"]},{"name":"final case class Monospace(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Monospace","location":"api/dotty.dokka/tasty/comments/wiki/-monospace/index.html","searchKeys":["Monospace","final case class Monospace(text: Inline) extends Inline"]},{"name":"final case class OrderedList(items: Seq[Block], style: String) extends Block","description":"dotty.dokka.tasty.comments.wiki.OrderedList","location":"api/dotty.dokka/tasty/comments/wiki/-ordered-list/index.html","searchKeys":["OrderedList","final case class OrderedList(items: Seq[Block], style: String) extends Block"]},{"name":"final case class Paragraph(text: Inline) extends Block","description":"dotty.dokka.tasty.comments.wiki.Paragraph","location":"api/dotty.dokka/tasty/comments/wiki/-paragraph/index.html","searchKeys":["Paragraph","final case class Paragraph(text: Inline) extends Block"]},{"name":"final class Parser(val buffer: String) extends CharReader","description":"dotty.dokka.tasty.comments.wiki.Parser","location":"api/dotty.dokka/tasty/comments/wiki/-parser/index.html","searchKeys":["Parser","final class Parser(val buffer: String) extends CharReader"]},{"name":" def block(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.block","location":"api/dotty.dokka/tasty/comments/wiki/-parser/block.html","searchKeys":["block"," def block(): Block"]},{"name":" def blockEnded(blockType: String): Unit","description":"dotty.dokka.tasty.comments.wiki.Parser.blockEnded","location":"api/dotty.dokka/tasty/comments/wiki/-parser/block-ended.html","searchKeys":["blockEnded"," def blockEnded(blockType: String): Unit"]},{"name":" def bold(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.bold","location":"api/dotty.dokka/tasty/comments/wiki/-parser/bold.html","searchKeys":["bold"," def bold(): Inline"]},{"name":" def checkList: Boolean","description":"dotty.dokka.tasty.comments.wiki.Parser.checkList","location":"api/dotty.dokka/tasty/comments/wiki/-parser/check-list.html","searchKeys":["checkList"," def checkList: Boolean"]},{"name":" def checkParaEnded(): Boolean","description":"dotty.dokka.tasty.comments.wiki.Parser.checkParaEnded","location":"api/dotty.dokka/tasty/comments/wiki/-parser/check-para-ended.html","searchKeys":["checkParaEnded"," def checkParaEnded(): Boolean"]},{"name":" def checkSentenceEnded(): Boolean","description":"dotty.dokka.tasty.comments.wiki.Parser.checkSentenceEnded","location":"api/dotty.dokka/tasty/comments/wiki/-parser/check-sentence-ended.html","searchKeys":["checkSentenceEnded"," def checkSentenceEnded(): Boolean"]},{"name":" def code(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.code","location":"api/dotty.dokka/tasty/comments/wiki/-parser/code.html","searchKeys":["code"," def code(): Block"]},{"name":" def document(): Body","description":"dotty.dokka.tasty.comments.wiki.Parser.document","location":"api/dotty.dokka/tasty/comments/wiki/-parser/document.html","searchKeys":["document"," def document(): Body"]},{"name":" def getInline(isInlineEnd: => Boolean): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.getInline","location":"api/dotty.dokka/tasty/comments/wiki/-parser/get-inline.html","searchKeys":["getInline"," def getInline(isInlineEnd: => Boolean): Inline"]},{"name":" def hrule(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.hrule","location":"api/dotty.dokka/tasty/comments/wiki/-parser/hrule.html","searchKeys":["hrule"," def hrule(): Block"]},{"name":" def htmlTag(): HtmlTag","description":"dotty.dokka.tasty.comments.wiki.Parser.htmlTag","location":"api/dotty.dokka/tasty/comments/wiki/-parser/html-tag.html","searchKeys":["htmlTag"," def htmlTag(): HtmlTag"]},{"name":" def italic(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.italic","location":"api/dotty.dokka/tasty/comments/wiki/-parser/italic.html","searchKeys":["italic"," def italic(): Inline"]},{"name":" def listBlock(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.listBlock","location":"api/dotty.dokka/tasty/comments/wiki/-parser/list-block.html","searchKeys":["listBlock"," def listBlock(): Block"]},{"name":" def monospace(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.monospace","location":"api/dotty.dokka/tasty/comments/wiki/-parser/monospace.html","searchKeys":["monospace"," def monospace(): Inline"]},{"name":" def normalizeIndentation(_code: String): String","description":"dotty.dokka.tasty.comments.wiki.Parser.normalizeIndentation","location":"api/dotty.dokka/tasty/comments/wiki/-parser/normalize-indentation.html","searchKeys":["normalizeIndentation"," def normalizeIndentation(_code: String): String"]},{"name":" def para(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.para","location":"api/dotty.dokka/tasty/comments/wiki/-parser/para.html","searchKeys":["para"," def para(): Block"]},{"name":" def reportError(message: String): Unit","description":"dotty.dokka.tasty.comments.wiki.Parser.reportError","location":"api/dotty.dokka/tasty/comments/wiki/-parser/report-error.html","searchKeys":["reportError"," def reportError(message: String): Unit"]},{"name":" def subscript(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.subscript","location":"api/dotty.dokka/tasty/comments/wiki/-parser/subscript.html","searchKeys":["subscript"," def subscript(): Inline"]},{"name":" def summary(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.summary","location":"api/dotty.dokka/tasty/comments/wiki/-parser/summary.html","searchKeys":["summary"," def summary(): Inline"]},{"name":" def superscript(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.superscript","location":"api/dotty.dokka/tasty/comments/wiki/-parser/superscript.html","searchKeys":["superscript"," def superscript(): Inline"]},{"name":" def title(): Block","description":"dotty.dokka.tasty.comments.wiki.Parser.title","location":"api/dotty.dokka/tasty/comments/wiki/-parser/title.html","searchKeys":["title"," def title(): Block"]},{"name":" def underline(): Inline","description":"dotty.dokka.tasty.comments.wiki.Parser.underline","location":"api/dotty.dokka/tasty/comments/wiki/-parser/underline.html","searchKeys":["underline"," def underline(): Inline"]},{"name":"abstract class RepresentationLink(val title: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.RepresentationLink","location":"api/dotty.dokka/tasty/comments/wiki/-representation-link/index.html","searchKeys":["RepresentationLink","abstract class RepresentationLink(val title: Inline) extends Inline"]},{"name":" object RepresentationLink","description":"dotty.dokka.tasty.comments.wiki.RepresentationLink$","location":"api/dotty.dokka/tasty/comments/wiki/-representation-link$/index.html","searchKeys":["RepresentationLink$"," object RepresentationLink"]},{"name":"final case class Subscript(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Subscript","location":"api/dotty.dokka/tasty/comments/wiki/-subscript/index.html","searchKeys":["Subscript","final case class Subscript(text: Inline) extends Inline"]},{"name":"final case class Summary(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Summary","location":"api/dotty.dokka/tasty/comments/wiki/-summary/index.html","searchKeys":["Summary","final case class Summary(text: Inline) extends Inline"]},{"name":"final case class Superscript(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Superscript","location":"api/dotty.dokka/tasty/comments/wiki/-superscript/index.html","searchKeys":["Superscript","final case class Superscript(text: Inline) extends Inline"]},{"name":"final case class Text(text: String) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Text","location":"api/dotty.dokka/tasty/comments/wiki/-text/index.html","searchKeys":["Text","final case class Text(text: String) extends Inline"]},{"name":"final case class Title(text: Inline, level: Int) extends Block","description":"dotty.dokka.tasty.comments.wiki.Title","location":"api/dotty.dokka/tasty/comments/wiki/-title/index.html","searchKeys":["Title","final case class Title(text: Inline, level: Int) extends Block"]},{"name":"final case class Underline(text: Inline) extends Inline","description":"dotty.dokka.tasty.comments.wiki.Underline","location":"api/dotty.dokka/tasty/comments/wiki/-underline/index.html","searchKeys":["Underline","final case class Underline(text: Inline) extends Inline"]},{"name":"final case class UnorderedList(items: Seq[Block]) extends Block","description":"dotty.dokka.tasty.comments.wiki.UnorderedList","location":"api/dotty.dokka/tasty/comments/wiki/-unordered-list/index.html","searchKeys":["UnorderedList","final case class UnorderedList(items: Seq[Block]) extends Block"]},{"name":" object FilterAttributes","description":"dotty.dokka.translators.FilterAttributes$","location":"api/dotty.dokka/translators/-filter-attributes/index.html","searchKeys":["FilterAttributes$"," object FilterAttributes"]},{"name":" def attributesFor(documentable: Documentable): Map[String, String]","description":"dotty.dokka.translators.FilterAttributes$.attributesFor","location":"api/dotty.dokka/translators/-filter-attributes/attributes-for.html","searchKeys":["attributesFor"," def attributesFor(documentable: Documentable): Map[String, String]"]},{"name":" def defaultValues: Map[String, String]","description":"dotty.dokka.translators.FilterAttributes$.defaultValues","location":"api/dotty.dokka/translators/-filter-attributes/default-values.html","searchKeys":["defaultValues"," def defaultValues: Map[String, String]"]},{"name":" def defaultValue[V]: V","description":"dotty.dokka.utils$package$.extension_defaultValue","location":"api/dotty.dokka/extension_default-value.html","searchKeys":["extension_defaultValue"," def defaultValue[V]: V"]},{"name":" def get[V](key: Key[, V]): V","description":"dotty.dokka.utils$package$.extension_get","location":"api/dotty.dokka/extension_get.html","searchKeys":["extension_get"," def get[V](key: Key[, V]): V"]},{"name":" def isRightAssociative(): Boolean","description":"dotty.dokka.utils$package$.extension_isRightAssociative","location":"api/dotty.dokka/extension_is-right-associative.html","searchKeys":["extension_isRightAssociative"," def isRightAssociative(): Boolean"]},{"name":" def put[E <: WithExtraProperties[E]](value: ExtraProperty[ >: E]): E","description":"dotty.dokka.utils$package$.extension_put","location":"api/dotty.dokka/extension_put.html","searchKeys":["extension_put"," def put[E <: WithExtraProperties[E]](value: ExtraProperty[ >: E]): E"]},{"name":" def toDisplay: Set[DisplaySourceSet]","description":"dotty.dokka.utils$package$.extension_toDisplay","location":"api/dotty.dokka/extension_to-display.html","searchKeys":["extension_toDisplay"," def toDisplay: Set[DisplaySourceSet]"]},{"name":" def getContentGroupWithParents(root: ContentGroup, condition: ContentGroup => Boolean): Seq[ContentGroup]","description":"dotty.dokka.utils$package$.getContentGroupWithParents","location":"api/dotty.dokka/get-content-group-with-parents.html","searchKeys":["getContentGroupWithParents"," def getContentGroupWithParents(root: ContentGroup, condition: ContentGroup => Boolean): Seq[ContentGroup]"]},{"name":" def getFromExtra[V](e: WithExtraProperties[], k: Key[, V]): Option[V]","description":"dotty.dokka.utils$package$.getFromExtra","location":"api/dotty.dokka/get-from-extra.html","searchKeys":["getFromExtra"," def getFromExtra[V](e: WithExtraProperties[], k: Key[, V]): Option[V]"]},{"name":" def modifyContentGroup(originalContentNodeWithParents: Seq[ContentGroup], modifiedContentNode: ContentGroup): ContentGroup","description":"dotty.dokka.utils$package$.modifyContentGroup","location":"api/dotty.dokka/modify-content-group.html","searchKeys":["modifyContentGroup"," def modifyContentGroup(originalContentNodeWithParents: Seq[ContentGroup], modifiedContentNode: ContentGroup): ContentGroup"]},{"name":" class D extends C","description":"example.A","location":"api/example/-a/-b/-d/index.html","searchKeys":["A"," class D extends C"]},{"name":" class AA","description":"tests.A","location":"api/tests/-a/-a-a/index.html","searchKeys":["A"," class AA"]},{"name":" trait A","description":"tests.enumSignatures.A","location":"api/tests/enumSignatures/-a/index.html","searchKeys":["A"," trait A"]},{"name":"case class A(cA: String, var cB: Int)","description":"tests.fieldsSignatures.A","location":"api/tests/fieldsSignatures/-a/index.html","searchKeys":["A","case class A(cA: String, var cB: Int)"]},{"name":" class A","description":"tests.genericSignatures.A","location":"api/tests/genericSignatures/-a/index.html","searchKeys":["A"," class A"]},{"name":" class Bar()","description":"tests.implicitConversions.A","location":"api/tests/implicitConversions/-a/-d/-bar/index.html","searchKeys":["A"," class Bar()"]},{"name":" class A","description":"tests.methodsAndConstructors.A","location":"api/tests/methodsAndConstructors/-a/index.html","searchKeys":["A"," class A"]},{"name":" trait D","description":"tests.nested.A","location":"api/tests/nested/-a/-d/index.html","searchKeys":["A"," trait D"]},{"name":" class A[T]","description":"tests.objectSignatures.A","location":"api/tests/objectSignatures/-a/index.html","searchKeys":["A"," class A[T]"]},{"name":" class A","description":"tests.packageSymbolSignatures.A","location":"api/tests/packageSymbolSignatures/-a/index.html","searchKeys":["A"," class A"]},{"name":" class A","description":"tests.signatureTestSource.A","location":"api/tests/signatureTestSource/-a/index.html","searchKeys":["A"," class A"]},{"name":" trait A","description":"tests.traitSignatures.A","location":"api/tests/traitSignatures/-a/index.html","searchKeys":["A"," trait A"]},{"name":" class A","description":"tests.typesSignatures.A","location":"api/tests/typesSignatures/-a/index.html","searchKeys":["A"," class A"]},{"name":" def foo: String","description":"example.A.extension_foo","location":"api/example/-a/extension_foo.html","searchKeys":["extension_foo"," def foo: String"]},{"name":"given Unit","description":"example.A.given_Unit","location":"api/example/-a/-unit.html","searchKeys":["given_Unit","given Unit"]},{"name":" class C extends A","description":"example.C","location":"api/example/-c/index.html","searchKeys":["C"," class C extends A"]},{"name":" class CC","description":"tests.C","location":"api/tests/-c/-c-c/index.html","searchKeys":["C"," class CC"]},{"name":"abstract case class C(s: String)","description":"tests.classModifiers.C","location":"api/tests/classModifiers/-c/index.html","searchKeys":["C","abstract case class C(s: String)"]},{"name":" trait C","description":"tests.fieldsSignatures.C","location":"api/tests/fieldsSignatures/-c/index.html","searchKeys":["C"," trait C"]},{"name":" class C","description":"tests.implicitConversions.C","location":"api/tests/implicitConversions/-c/index.html","searchKeys":["C"," class C"]},{"name":" class C","description":"tests.methodsAndConstructors.C","location":"api/tests/methodsAndConstructors/-c/index.html","searchKeys":["C"," class C"]},{"name":" trait C","description":"tests.objectSignatures.C","location":"api/tests/objectSignatures/-c/index.html","searchKeys":["C"," trait C"]},{"name":" class C","description":"tests.signatureTestSource.C","location":"api/tests/signatureTestSource/-c/index.html","searchKeys":["C"," class C"]},{"name":" trait C(a: Int)","description":"tests.traitSignatures.C","location":"api/tests/traitSignatures/-c/index.html","searchKeys":["C"," trait C(a: Int)"]},{"name":"abstract class DocumentationInheritance[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]","description":"example.DocumentationInheritance","location":"api/example/-documentation-inheritance/index.html","searchKeys":["DocumentationInheritance","abstract class DocumentationInheritance[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]"]},{"name":" class DocumentationInheritanceMethod","description":"example.DocumentationInheritanceMethod","location":"api/example/-documentation-inheritance-method/index.html","searchKeys":["DocumentationInheritanceMethod"," class DocumentationInheritanceMethod"]},{"name":" def threOtherWay[A <: Nothing, B >: Any](a: A, c: B): Unit","description":"example.DocumentationInheritanceMethod.threOtherWay","location":"api/example/-documentation-inheritance-method/thre-other-way.html","searchKeys":["threOtherWay"," def threOtherWay[A <: Nothing, B >: Any](a: A, c: B): Unit"]},{"name":" def wierdMethod[T, A <: Int, B >: String](t: T, a: A): B","description":"example.DocumentationInheritanceMethod.wierdMethod","location":"api/example/-documentation-inheritance-method/wierd-method.html","searchKeys":["wierdMethod"," def wierdMethod[T, A <: Int, B >: String](t: T, a: A): B"]},{"name":" object ReturnObjectWithType","description":"example.ReturnObjectWithType$","location":"api/example/-return-object-with-type/index.html","searchKeys":["ReturnObjectWithType$"," object ReturnObjectWithType"]},{"name":" class ReturnTypeClass[T]","description":"example.ReturnTypeClass","location":"api/example/-return-type-class/index.html","searchKeys":["ReturnTypeClass"," class ReturnTypeClass[T]"]},{"name":" class UserDocLinkingClass","description":"example.UserDocLinkingClass","location":"api/example/-user-doc-linking-class/index.html","searchKeys":["UserDocLinkingClass"," class UserDocLinkingClass"]},{"name":" def linkMeFromUserDoc(): Nothing","description":"example.UserDocLinkingClass.linkMeFromUserDoc","location":"api/example/-user-doc-linking-class/link-me-from-user-doc.html","searchKeys":["linkMeFromUserDoc"," def linkMeFromUserDoc(): Nothing"]},{"name":"sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]","description":"example.level2.ClassExtendingDocumentation","location":"api/example/level2/-class-extending-documentation/index.html","searchKeys":["ClassExtendingDocumentation","sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]"]},{"name":"sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]","description":"tests.classSignatureTestSource.ClassExtendingDocumentation","location":"api/tests/classSignatureTestSource/-class-extending-documentation/index.html","searchKeys":["ClassExtendingDocumentation","sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]"]},{"name":"case object IAmACaseObject extends CaseImplementThis","description":"example.level2.Documentation","location":"api/example/level2/-documentation/-i-am-a-case-object/index.html","searchKeys":["Documentation","case object IAmACaseObject extends CaseImplementThis"]},{"name":"case object IAmACaseObject extends CaseImplementThis","description":"tests.classSignatureTestSource.Documentation","location":"api/tests/classSignatureTestSource/-documentation/-i-am-a-case-object/index.html","searchKeys":["Documentation","case object IAmACaseObject extends CaseImplementThis"]},{"name":" object Documentation","description":"example.level2.Documentation$","location":"api/example/level2/-documentation$/index.html","searchKeys":["Documentation$"," object Documentation"]},{"name":" object Documentation","description":"tests.classSignatureTestSource.Documentation$","location":"api/tests/classSignatureTestSource/-documentation$/index.html","searchKeys":["Documentation$"," object Documentation"]},{"name":" object Documentation","description":"tests.fieldsSignatures.Documentation$","location":"api/tests/fieldsSignatures/-documentation/index.html","searchKeys":["Documentation$"," object Documentation"]},{"name":" def defInAPackage(abc: String): List[Int]","description":"example.level2.Documentation$package$.defInAPackage","location":"api/example/level2/def-in-a-package.html","searchKeys":["defInAPackage"," def defInAPackage(abc: String): List[Int]"]},{"name":" def abstractDefinition: Int","description":"example.level2.Documentation.abstractDefinition","location":"api/example/level2/-documentation/abstract-definition.html","searchKeys":["abstractDefinition"," def abstractDefinition: Int"]},{"name":" def defReturningInnerClass(): innerDocumentationClass","description":"example.level2.Documentation.defReturningInnerClass","location":"api/example/level2/-documentation/def-returning-inner-class.html","searchKeys":["defReturningInnerClass"," def defReturningInnerClass(): innerDocumentationClass"]},{"name":" def docWithMd: Nothing","description":"example.level2.Documentation.docWithMd","location":"api/example/level2/-documentation/doc-with-md.html","searchKeys":["docWithMd"," def docWithMd: Nothing"]},{"name":" def functionWithType[U >: String](): U","description":"example.level2.Documentation.functionWithType","location":"api/example/level2/-documentation/function-with-type.html","searchKeys":["functionWithType"," def functionWithType[U >: String](): U"]},{"name":" def iterator: Iterator[T]","description":"example.level2.Documentation.iterator","location":"api/example/level2/-documentation/iterator.html","searchKeys":["iterator"," def iterator: Iterator[T]"]},{"name":"override def length: Int","description":"example.level2.Documentation.length","location":"api/example/level2/-documentation/length.html","searchKeys":["length","override def length: Int"]},{"name":" def linkMethodInDoc(): Nothing","description":"example.level2.Documentation.linkMethodInDoc","location":"api/example/level2/-documentation/link-method-in-doc.html","searchKeys":["linkMethodInDoc"," def linkMethodInDoc(): Nothing"]},{"name":" def linkingGraph(g: Graph): Node","description":"example.level2.Documentation.linkingGraph","location":"api/example/level2/-documentation/linking-graph.html","searchKeys":["linkingGraph"," def linkingGraph(g: Graph): Node"]},{"name":" def methodsWithCallByName(x: => Int): Nothing","description":"example.level2.Documentation.methodsWithCallByName","location":"api/example/level2/-documentation/methods-with-call-by-name.html","searchKeys":["methodsWithCallByName"," def methodsWithCallByName(x: => Int): Nothing"]},{"name":" def methodsWithDefault(x: Int): Nothing","description":"example.level2.Documentation.methodsWithDefault","location":"api/example/level2/-documentation/methods-with-default.html","searchKeys":["methodsWithDefault"," def methodsWithDefault(x: Int): Nothing"]},{"name":" def methodsWithImplicit(x: Int)(imp: Int, notImp: String): Nothing","description":"example.level2.Documentation.methodsWithImplicit","location":"api/example/level2/-documentation/methods-with-implicit.html","searchKeys":["methodsWithImplicit"," def methodsWithImplicit(x: Int)(imp: Int, notImp: String): Nothing"]},{"name":" def methodsWithParams(x: T, y: Int): List[Map[Int, T]]","description":"example.level2.Documentation.methodsWithParams","location":"api/example/level2/-documentation/methods-with-params.html","searchKeys":["methodsWithParams"," def methodsWithParams(x: T, y: Int): List[Map[Int, T]]"]},{"name":" def useOfOutsideType(): ReturnTypeClass[T]","description":"example.level2.Documentation.useOfOutsideType","location":"api/example/level2/-documentation/use-of-outside-type.html","searchKeys":["useOfOutsideType"," def useOfOutsideType(): ReturnTypeClass[T]"]},{"name":" def useOfOutsideTypeInsideObject(): returnType","description":"example.level2.Documentation.useOfOutsideTypeInsideObject","location":"api/example/level2/-documentation/use-of-outside-type-inside-object.html","searchKeys":["useOfOutsideTypeInsideObject"," def useOfOutsideTypeInsideObject(): returnType"]},{"name":" def useOfSameLevelOutsideType(): SameLevelTypeLinking","description":"example.level2.Documentation.useOfSameLevelOutsideType","location":"api/example/level2/-documentation/use-of-same-level-outside-type.html","searchKeys":["useOfSameLevelOutsideType"," def useOfSameLevelOutsideType(): SameLevelTypeLinking"]},{"name":" class SameLevelTypeLinking","description":"example.level2.SameLevelTypeLinking","location":"api/example/level2/-same-level-type-linking/index.html","searchKeys":["SameLevelTypeLinking"," class SameLevelTypeLinking"]},{"name":" trait TraitTest","description":"example.level2.TraitTest","location":"api/example/level2/-trait-test/index.html","searchKeys":["TraitTest"," trait TraitTest"]},{"name":" trait TraitTest","description":"tests.classSignatureTestSource.TraitTest","location":"api/tests/classSignatureTestSource/-trait-test/index.html","searchKeys":["TraitTest"," trait TraitTest"]},{"name":" trait TraitWithCompanion","description":"example.level2.TraitWithCompanion","location":"api/example/level2/-trait-with-companion/index.html","searchKeys":["TraitWithCompanion"," trait TraitWithCompanion"]},{"name":" trait TraitWithCompanion","description":"tests.classSignatureTestSource.TraitWithCompanion","location":"api/tests/classSignatureTestSource/-trait-with-companion/index.html","searchKeys":["TraitWithCompanion"," trait TraitWithCompanion"]},{"name":" object TraitWithCompanion","description":"example.level2.TraitWithCompanion$","location":"api/example/level2/-trait-with-companion$/index.html","searchKeys":["TraitWithCompanion$"," object TraitWithCompanion"]},{"name":" object TraitWithCompanion","description":"tests.classSignatureTestSource.TraitWithCompanion$","location":"api/tests/classSignatureTestSource/-trait-with-companion$/index.html","searchKeys":["TraitWithCompanion$"," object TraitWithCompanion"]},{"name":"sealed abstract class ClassLevel4[T, A <: Int, B >: String, -X, +Y]() extends Documentation[T, A, B, X, Y]","description":"example.level2.level3.level4.ClassLevel4","location":"api/example/level2/level3.level4/-class-level4/index.html","searchKeys":["ClassLevel4","sealed abstract class ClassLevel4[T, A <: Int, B >: String, -X, +Y]() extends Documentation[T, A, B, X, Y]"]},{"name":" def linkingToDocMethodInUserDoc: Nothing","description":"example.level2.level3.level4.ClassLevel4.linkingToDocMethodInUserDoc","location":"api/example/level2/level3.level4/-class-level4/linking-to-doc-method-in-user-doc.html","searchKeys":["linkingToDocMethodInUserDoc"," def linkingToDocMethodInUserDoc: Nothing"]},{"name":" object A","description":"tests.A$","location":"api/tests/-a$/index.html","searchKeys":["A$"," object A"]},{"name":" class B","description":"tests.implicitClasslikes.A$","location":"api/tests/implicitClasslikes/-a/-b/index.html","searchKeys":["A$"," class B"]},{"name":" object A","description":"tests.objectSignatures.A$","location":"api/tests/objectSignatures/-a$/index.html","searchKeys":["A$"," object A"]},{"name":" def method(s: String): String","description":"tests.A.method","location":"api/tests/-a/method.html","searchKeys":["method"," def method(s: String): String"]},{"name":" class BB","description":"tests.B","location":"api/tests/-b/-b-b/index.html","searchKeys":["B"," class BB"]},{"name":"sealed abstract class B","description":"tests.classModifiers.B","location":"api/tests/classModifiers/-b/index.html","searchKeys":["B","sealed abstract class B"]},{"name":" class B","description":"tests.implicitConversions.B","location":"api/tests/implicitConversions/-b/index.html","searchKeys":["B"," class B"]},{"name":" class B extends A","description":"tests.methodsAndConstructors.B","location":"api/tests/methodsAndConstructors/-b/index.html","searchKeys":["B"," class B extends A"]},{"name":" class B extends A","description":"tests.signatureTestSource.B","location":"api/tests/signatureTestSource/-b/index.html","searchKeys":["B"," class B extends A"]},{"name":" trait B extends A","description":"tests.traitSignatures.B","location":"api/tests/traitSignatures/-b/index.html","searchKeys":["B"," trait B extends A"]},{"name":" object B","description":"tests.B$","location":"api/tests/-b$/index.html","searchKeys":["B$"," object B"]},{"name":" def otherMethod(s: String): String","description":"tests.B.otherMethod","location":"api/tests/-b/other-method.html","searchKeys":["otherMethod"," def otherMethod(s: String): String"]},{"name":" class Constructors(a: String)","description":"tests.Constructors","location":"api/tests/-constructors/index.html","searchKeys":["Constructors"," class Constructors(a: String)"]},{"name":" class Constructors(a: String)","description":"tests.methodsAndConstructors.Constructors","location":"api/tests/methodsAndConstructors/-constructors/index.html","searchKeys":["Constructors"," class Constructors(a: String)"]},{"name":" class D[T]","description":"tests.D","location":"api/tests/-d/index.html","searchKeys":["D"," class D[T]"]},{"name":"sealed case class D(c: String)","description":"tests.classModifiers.D","location":"api/tests/classModifiers/-d/index.html","searchKeys":["D","sealed case class D(c: String)"]},{"name":"abstract class D extends C","description":"tests.fieldsSignatures.D","location":"api/tests/fieldsSignatures/-d/index.html","searchKeys":["D","abstract class D extends C"]},{"name":" class D[T]","description":"tests.genericSignatures.D","location":"api/tests/genericSignatures/-d/index.html","searchKeys":["D"," class D[T]"]},{"name":" class D[T]","description":"tests.methodsAndConstructors.D","location":"api/tests/methodsAndConstructors/-d/index.html","searchKeys":["D"," class D[T]"]},{"name":" class D[T]","description":"tests.signatureTestSource.D","location":"api/tests/signatureTestSource/-d/index.html","searchKeys":["D"," class D[T]"]},{"name":" trait D(b: Double) extends C with A","description":"tests.traitSignatures.D","location":"api/tests/traitSignatures/-d/index.html","searchKeys":["D"," trait D(b: Double) extends C with A"]},{"name":" class E[T] extends D[T]","description":"tests.E","location":"api/tests/-e/index.html","searchKeys":["E"," class E[T] extends D[T]"]},{"name":"final case class E(c: String)","description":"tests.classModifiers.E","location":"api/tests/classModifiers/-e/index.html","searchKeys":["E","final case class E(c: String)"]},{"name":" class E[T] extends D[T]","description":"tests.genericSignatures.E","location":"api/tests/genericSignatures/-e/index.html","searchKeys":["E"," class E[T] extends D[T]"]},{"name":" class E[T] extends D[T]","description":"tests.methodsAndConstructors.E","location":"api/tests/methodsAndConstructors/-e/index.html","searchKeys":["E"," class E[T] extends D[T]"]},{"name":" class E[T] extends D[T]","description":"tests.signatureTestSource.E","location":"api/tests/signatureTestSource/-e/index.html","searchKeys":["E"," class E[T] extends D[T]"]},{"name":"protected object ProtectedObject","description":"tests.FilterTest","location":"api/tests/-filter-test/-protected-object/index.html","searchKeys":["FilterTest","protected object ProtectedObject"]},{"name":" def extensionMethod(name: FilterTest): FilterTest","description":"tests.FilterTest$package$.extension_extensionMethod","location":"api/tests/extension_extension-method.html","searchKeys":["extension_extensionMethod"," def extensionMethod(name: FilterTest): FilterTest"]},{"name":" def extensionMethodBase(name: FilterTest): FilterTest","description":"tests.FilterTest$package$.extension_extensionMethodBase","location":"api/tests/extension_extension-method-base.html","searchKeys":["extension_extensionMethodBase"," def extensionMethodBase(name: FilterTest): FilterTest"]},{"name":"given List_String","description":"tests.FilterTest.given_List_String","location":"api/tests/-filter-test/-list_-string.html","searchKeys":["given_List_String","given List_String"]},{"name":"given Seq_String","description":"tests.FilterTest.given_Seq_String","location":"api/tests/-filter-test/-seq_-string.html","searchKeys":["given_Seq_String","given Seq_String"]},{"name":"given namedList","description":"tests.FilterTest.namedList","location":"api/tests/-filter-test/named-list.html","searchKeys":["namedList","given namedList"]},{"name":"given namedSeq","description":"tests.FilterTest.namedSeq","location":"api/tests/-filter-test/named-seq.html","searchKeys":["namedSeq","given namedSeq"]},{"name":"protected def protectetDef(a: B): String","description":"tests.FilterTest.protectetDef","location":"api/tests/-filter-test/protectet-def.html","searchKeys":["protectetDef","protected def protectetDef(a: B): String"]},{"name":" def publicDef(a: D): FilterTest","description":"tests.FilterTest.publicDef","location":"api/tests/-filter-test/public-def.html","searchKeys":["publicDef"," def publicDef(a: D): FilterTest"]},{"name":"protected object ProtectedObjectInherited","description":"tests.FilterTestBase","location":"api/tests/-filter-test-base/-protected-object-inherited/index.html","searchKeys":["FilterTestBase","protected object ProtectedObjectInherited"]},{"name":"given Map_String_Double","description":"tests.FilterTestBase.given_Map_String_Double","location":"api/tests/-filter-test-base/-map_-string_-double.html","searchKeys":["given_Map_String_Double","given Map_String_Double"]},{"name":"given Set_String","description":"tests.FilterTestBase.given_Set_String","location":"api/tests/-filter-test-base/-set_-string.html","searchKeys":["given_Set_String","given Set_String"]},{"name":"given namedMap","description":"tests.FilterTestBase.namedMap","location":"api/tests/-filter-test-base/named-map.html","searchKeys":["namedMap","given namedMap"]},{"name":"given namedSet","description":"tests.FilterTestBase.namedSet","location":"api/tests/-filter-test-base/named-set.html","searchKeys":["namedSet","given namedSet"]},{"name":"protected def protectetDefInherited(a: Int): String","description":"tests.FilterTestBase.protectetDefInherited","location":"api/tests/-filter-test-base/protectet-def-inherited.html","searchKeys":["protectetDefInherited","protected def protectetDefInherited(a: Int): String"]},{"name":" def publicDefInherited(a: Int): String","description":"tests.FilterTestBase.publicDefInherited","location":"api/tests/-filter-test-base/public-def-inherited.html","searchKeys":["publicDefInherited"," def publicDefInherited(a: Int): String"]},{"name":" object PublicObjectInheritedTrait","description":"tests.FilterTestBaseTrait","location":"api/tests/-filter-test-base-trait/-public-object-inherited-trait/index.html","searchKeys":["FilterTestBaseTrait"," object PublicObjectInheritedTrait"]},{"name":"protected def protectetDefInheriteTrait(a: Int): String","description":"tests.FilterTestBaseTrait.protectetDefInheriteTrait","location":"api/tests/-filter-test-base-trait/protectet-def-inherite-trait.html","searchKeys":["protectetDefInheriteTrait","protected def protectetDefInheriteTrait(a: Int): String"]},{"name":" def publicDefInheritedTrait(a: Int): String","description":"tests.FilterTestBaseTrait.publicDefInheritedTrait","location":"api/tests/-filter-test-base-trait/public-def-inherited-trait.html","searchKeys":["publicDefInheritedTrait"," def publicDefInheritedTrait(a: Int): String"]},{"name":" class MdLists","description":"tests.MdLists","location":"api/tests/-md-lists/index.html","searchKeys":["MdLists"," class MdLists"]},{"name":" class MdTables","description":"tests.MdTables","location":"api/tests/-md-tables/index.html","searchKeys":["MdTables"," class MdTables"]},{"name":" class Methods","description":"tests.Methods","location":"api/tests/-methods/index.html","searchKeys":["Methods"," class Methods"]},{"name":" class Methods","description":"tests.methodsAndConstructors.Methods","location":"api/tests/methodsAndConstructors/-methods/index.html","searchKeys":["Methods"," class Methods"]},{"name":"abstract class Methods()","description":"tests.modifiersSignatureTestSource.Methods","location":"api/tests/modifiersSignatureTestSource/-methods/index.html","searchKeys":["Methods","abstract class Methods()"]},{"name":" def arrays(a: Array[String], b: Array[Int]): Array[Double]","description":"tests.Methods.arrays","location":"api/tests/-methods/arrays.html","searchKeys":["arrays"," def arrays(a: Array[String], b: Array[Int]): Array[Double]"]},{"name":" def arrays(a: Array[String], b: Array[Int]): Array[Double]","description":"tests.methodsAndConstructors.Methods.arrays","location":"api/tests/methodsAndConstructors/-methods/arrays.html","searchKeys":["arrays"," def arrays(a: Array[String], b: Array[Int]): Array[Double]"]},{"name":" def arrays(a: Array[String], b: Array[Int]): Array[Double]","description":"tests.signatureTestSource.SignatureTestClass.arrays","location":"api/tests/signatureTestSource/-signature-test-class/arrays.html","searchKeys":["arrays"," def arrays(a: Array[String], b: Array[Int]): Array[Double]"]},{"name":" def generic[T](a: D[T]): D[T]","description":"tests.Methods.generic","location":"api/tests/-methods/generic.html","searchKeys":["generic"," def generic[T](a: D[T]): D[T]"]},{"name":" def generic[T](a: D[T]): D[T]","description":"tests.methodsAndConstructors.Methods.generic","location":"api/tests/methodsAndConstructors/-methods/generic.html","searchKeys":["generic"," def generic[T](a: D[T]): D[T]"]},{"name":" def generic[T](a: D[T]): D[T]","description":"tests.signatureTestSource.SignatureTestClass.generic","location":"api/tests/signatureTestSource/-signature-test-class/generic.html","searchKeys":["generic"," def generic[T](a: D[T]): D[T]"]},{"name":" def generic2[T, V](a: D[T], b: E[V]): D[T]","description":"tests.Methods.generic2","location":"api/tests/-methods/generic2.html","searchKeys":["generic2"," def generic2[T, V](a: D[T], b: E[V]): D[T]"]},{"name":" def generic2[T, V](a: D[T], b: E[V]): D[T]","description":"tests.methodsAndConstructors.Methods.generic2","location":"api/tests/methodsAndConstructors/-methods/generic2.html","searchKeys":["generic2"," def generic2[T, V](a: D[T], b: E[V]): D[T]"]},{"name":" def generic2[T, V](a: D[T], b: E[V]): D[T]","description":"tests.signatureTestSource.SignatureTestClass.generic2","location":"api/tests/signatureTestSource/-signature-test-class/generic2.html","searchKeys":["generic2"," def generic2[T, V](a: D[T], b: E[V]): D[T]"]},{"name":" def multipleList(a: A)(b: B): C","description":"tests.Methods.multipleList","location":"api/tests/-methods/multiple-list.html","searchKeys":["multipleList"," def multipleList(a: A)(b: B): C"]},{"name":" def multipleList(a: A)(b: B): C","description":"tests.methodsAndConstructors.Methods.multipleList","location":"api/tests/methodsAndConstructors/-methods/multiple-list.html","searchKeys":["multipleList"," def multipleList(a: A)(b: B): C"]},{"name":" def multipleList(a: A)(b: B): C","description":"tests.signatureTestSource.SignatureTestClass.multipleList","location":"api/tests/signatureTestSource/-signature-test-class/multiple-list.html","searchKeys":["multipleList"," def multipleList(a: A)(b: B): C"]},{"name":" def multipleParams(a: A, b: B): C","description":"tests.Methods.multipleParams","location":"api/tests/-methods/multiple-params.html","searchKeys":["multipleParams"," def multipleParams(a: A, b: B): C"]},{"name":" def multipleParams(a: A, b: B): C","description":"tests.methodsAndConstructors.Methods.multipleParams","location":"api/tests/methodsAndConstructors/-methods/multiple-params.html","searchKeys":["multipleParams"," def multipleParams(a: A, b: B): C"]},{"name":" def multipleParams(a: A, b: B): C","description":"tests.signatureTestSource.SignatureTestClass.multipleParams","location":"api/tests/signatureTestSource/-signature-test-class/multiple-params.html","searchKeys":["multipleParams"," def multipleParams(a: A, b: B): C"]},{"name":" def nobraces: A","description":"tests.Methods.nobraces","location":"api/tests/-methods/nobraces.html","searchKeys":["nobraces"," def nobraces: A"]},{"name":" def nobraces: A","description":"tests.methodsAndConstructors.Methods.nobraces","location":"api/tests/methodsAndConstructors/-methods/nobraces.html","searchKeys":["nobraces"," def nobraces: A"]},{"name":" def oneParam(a: A): B","description":"tests.Methods.oneParam","location":"api/tests/-methods/one-param.html","searchKeys":["oneParam"," def oneParam(a: A): B"]},{"name":" def oneParam(a: A): B","description":"tests.methodsAndConstructors.Methods.oneParam","location":"api/tests/methodsAndConstructors/-methods/one-param.html","searchKeys":["oneParam"," def oneParam(a: A): B"]},{"name":" def oneParam(a: A): B","description":"tests.signatureTestSource.SignatureTestClass.oneParam","location":"api/tests/signatureTestSource/-signature-test-class/one-param.html","searchKeys":["oneParam"," def oneParam(a: A): B"]},{"name":" def primitives(a: Int, b: Double, c: Short): Byte","description":"tests.Methods.primitives","location":"api/tests/-methods/primitives.html","searchKeys":["primitives"," def primitives(a: Int, b: Double, c: Short): Byte"]},{"name":" def primitives(a: Int, b: Double, c: Short): Byte","description":"tests.methodsAndConstructors.Methods.primitives","location":"api/tests/methodsAndConstructors/-methods/primitives.html","searchKeys":["primitives"," def primitives(a: Int, b: Double, c: Short): Byte"]},{"name":" def primitives(a: Int, b: Double, c: Short): Byte","description":"tests.signatureTestSource.SignatureTestClass.primitives","location":"api/tests/signatureTestSource/-signature-test-class/primitives.html","searchKeys":["primitives"," def primitives(a: Int, b: Double, c: Short): Byte"]},{"name":" def simple(): B","description":"tests.Methods.simple","location":"api/tests/-methods/simple.html","searchKeys":["simple"," def simple(): B"]},{"name":" def simple(): B","description":"tests.methodsAndConstructors.Methods.simple","location":"api/tests/methodsAndConstructors/-methods/simple.html","searchKeys":["simple"," def simple(): B"]},{"name":" def simple(): B","description":"tests.signatureTestSource.SignatureTestClass.simple","location":"api/tests/signatureTestSource/-signature-test-class/simple.html","searchKeys":["simple"," def simple(): B"]},{"name":" def strings(a: String): String","description":"tests.Methods.strings","location":"api/tests/-methods/strings.html","searchKeys":["strings"," def strings(a: String): String"]},{"name":" def strings(a: String): String","description":"tests.methodsAndConstructors.Methods.strings","location":"api/tests/methodsAndConstructors/-methods/strings.html","searchKeys":["strings"," def strings(a: String): String"]},{"name":" def strings(a: String): String","description":"tests.signatureTestSource.SignatureTestClass.strings","location":"api/tests/signatureTestSource/-signature-test-class/strings.html","searchKeys":["strings"," def strings(a: String): String"]},{"name":" def vararg(a: A*): C","description":"tests.Methods.vararg","location":"api/tests/-methods/vararg.html","searchKeys":["vararg"," def vararg(a: A*): C"]},{"name":" def vararg(a: A*): C","description":"tests.methodsAndConstructors.Methods.vararg","location":"api/tests/methodsAndConstructors/-methods/vararg.html","searchKeys":["vararg"," def vararg(a: A*): C"]},{"name":" def vararg(a: A*): C","description":"tests.signatureTestSource.SignatureTestClass.vararg","location":"api/tests/signatureTestSource/-signature-test-class/vararg.html","searchKeys":["vararg"," def vararg(a: A*): C"]},{"name":" class WikiLists","description":"tests.WikiLists","location":"api/tests/-wiki-lists/index.html","searchKeys":["WikiLists"," class WikiLists"]},{"name":"@AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') @MyAnnotation  class AnnotatedClass","description":"tests.annotations.AnnotatedClass","location":"api/tests/annotations/-annotated-class/index.html","searchKeys":["AnnotatedClass","@AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') @MyAnnotation  class AnnotatedClass"]},{"name":"@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') @EnumAnnotation(Enum.A)  class AnnotatedClass","description":"tests.annotationsExample.AnnotatedClass","location":"api/tests/annotationsExample/-annotated-class/index.html","searchKeys":["AnnotatedClass","@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') @EnumAnnotation(Enum.A)  class AnnotatedClass"]},{"name":" class AnnotatedMethods","description":"tests.annotations.AnnotatedMethods","location":"api/tests/annotations/-annotated-methods/index.html","searchKeys":["AnnotatedMethods"," class AnnotatedMethods"]},{"name":" class AnnotatedMethods","description":"tests.annotationsExample.AnnotatedMethods","location":"api/tests/annotationsExample/-annotated-methods/index.html","searchKeys":["AnnotatedMethods"," class AnnotatedMethods"]},{"name":"@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c')  def a: String","description":"tests.annotations.AnnotatedMethods.a","location":"api/tests/annotations/-annotated-methods/a.html","searchKeys":["a","@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c')  def a: String"]},{"name":"@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c')  def a: String","description":"tests.annotationsExample.AnnotatedMethods.a","location":"api/tests/annotationsExample/-annotated-methods/a.html","searchKeys":["a","@MyAnnotation @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c')  def a: String"]},{"name":" class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') val b: Int)","description":"tests.annotations.AnnotatedParams","location":"api/tests/annotations/-annotated-params/index.html","searchKeys":["AnnotatedParams"," class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') val b: Int)"]},{"name":" class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') val b: Int)","description":"tests.annotationsExample.AnnotatedParams","location":"api/tests/annotationsExample/-annotated-params/index.html","searchKeys":["AnnotatedParams"," class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, \"cda\", 'a', 'b', 'c') val b: Int)"]},{"name":" class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation","description":"tests.annotations.AnnotationWithArg","location":"api/tests/annotations/-annotation-with-arg/index.html","searchKeys":["AnnotationWithArg"," class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation"]},{"name":" class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation","description":"tests.annotationsExample.AnnotationWithArg","location":"api/tests/annotationsExample/-annotation-with-arg/index.html","searchKeys":["AnnotationWithArg"," class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation"]},{"name":" class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation","description":"tests.annotations.AnnotationWithMultiArg","location":"api/tests/annotations/-annotation-with-multi-arg/index.html","searchKeys":["AnnotationWithMultiArg"," class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation"]},{"name":" class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation","description":"tests.annotationsExample.AnnotationWithMultiArg","location":"api/tests/annotationsExample/-annotation-with-multi-arg/index.html","searchKeys":["AnnotationWithMultiArg"," class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation"]},{"name":" class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation","description":"tests.annotations.ClassAnnotation","location":"api/tests/annotations/-class-annotation/index.html","searchKeys":["ClassAnnotation"," class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation"]},{"name":" class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation","description":"tests.annotationsExample.ClassAnnotation","location":"api/tests/annotationsExample/-class-annotation/index.html","searchKeys":["ClassAnnotation"," class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation"]},{"name":" class EnumAnnotation(val e: Enum) extends StaticAnnotation","description":"tests.annotations.EnumAnnotation","location":"api/tests/annotations/-enum-annotation/index.html","searchKeys":["EnumAnnotation"," class EnumAnnotation(val e: Enum) extends StaticAnnotation"]},{"name":" class EnumAnnotation(val e: Enum) extends StaticAnnotation","description":"tests.annotationsExample.EnumAnnotation","location":"api/tests/annotationsExample/-enum-annotation/index.html","searchKeys":["EnumAnnotation"," class EnumAnnotation(val e: Enum) extends StaticAnnotation"]},{"name":" class MyAnnotation extends StaticAnnotation","description":"tests.annotations.MyAnnotation","location":"api/tests/annotations/-my-annotation/index.html","searchKeys":["MyAnnotation"," class MyAnnotation extends StaticAnnotation"]},{"name":" class MyAnnotation extends StaticAnnotation","description":"tests.annotationsExample.MyAnnotation","location":"api/tests/annotationsExample/-my-annotation/index.html","searchKeys":["MyAnnotation"," class MyAnnotation extends StaticAnnotation"]},{"name":" class SomeObject(val s: String)","description":"tests.annotations.SomeObject","location":"api/tests/annotations/-some-object/index.html","searchKeys":["SomeObject"," class SomeObject(val s: String)"]},{"name":" class SomeObject(val s: String)","description":"tests.annotationsExample.SomeObject","location":"api/tests/annotationsExample/-some-object/index.html","searchKeys":["SomeObject"," class SomeObject(val s: String)"]},{"name":" enum Enum","description":"tests.annotationsExample.Enum","location":"api/tests/annotationsExample/-enum/index.html","searchKeys":["Enum"," enum Enum"]},{"name":"open class F","description":"tests.classModifiers.F","location":"api/tests/classModifiers/-f/index.html","searchKeys":["F","open class F"]},{"name":" class F[+T, -F] extends DD[T]","description":"tests.genericSignatures.F","location":"api/tests/genericSignatures/-f/index.html","searchKeys":["F"," class F[+T, -F] extends DD[T]"]},{"name":"case class ManyModifiers(x: Int, var y: Double, z: String)","description":"tests.classSignatureTestSource.ManyModifiers","location":"api/tests/classSignatureTestSource/-many-modifiers/index.html","searchKeys":["ManyModifiers","case class ManyModifiers(x: Int, var y: Double, z: String)"]},{"name":" class ManyModifiers2(val x: Int, var y: Double, z: String)","description":"tests.classSignatureTestSource.ManyModifiers2","location":"api/tests/classSignatureTestSource/-many-modifiers2/index.html","searchKeys":["ManyModifiers2"," class ManyModifiers2(val x: Int, var y: Double, z: String)"]},{"name":"case class CaseClass(parameterOfClassConstructor: String)","description":"tests.companionObjectSignatures.CaseClass","location":"api/tests/companionObjectSignatures/-case-class/index.html","searchKeys":["CaseClass","case class CaseClass(parameterOfClassConstructor: String)"]},{"name":"case object CaseClass","description":"tests.companionObjectSignatures.CaseClass$","location":"api/tests/companionObjectSignatures/-case-class$/index.html","searchKeys":["CaseClass$","case object CaseClass"]},{"name":" def methodInCompanion1(): String","description":"tests.companionObjectSignatures.CaseClass$.methodInCompanion1","location":"api/tests/companionObjectSignatures/-case-class$/method-in-companion1.html","searchKeys":["methodInCompanion1"," def methodInCompanion1(): String"]},{"name":" def methodInCompanion2(): CaseClass","description":"tests.companionObjectSignatures.CaseClass$.methodInCompanion2","location":"api/tests/companionObjectSignatures/-case-class$/method-in-companion2.html","searchKeys":["methodInCompanion2"," def methodInCompanion2(): CaseClass"]},{"name":" def methodInClass1(): String","description":"tests.companionObjectSignatures.CaseClass.methodInClass1","location":"api/tests/companionObjectSignatures/-case-class/method-in-class1.html","searchKeys":["methodInClass1"," def methodInClass1(): String"]},{"name":" def methodInClass2(): CaseClass","description":"tests.companionObjectSignatures.CaseClass.methodInClass2","location":"api/tests/companionObjectSignatures/-case-class/method-in-class2.html","searchKeys":["methodInClass2"," def methodInClass2(): CaseClass"]},{"name":" class StandardClass","description":"tests.companionObjectSignatures.StandardClass","location":"api/tests/companionObjectSignatures/-standard-class/index.html","searchKeys":["StandardClass"," class StandardClass"]},{"name":" object StandardClass","description":"tests.companionObjectSignatures.StandardClass$","location":"api/tests/companionObjectSignatures/-standard-class$/index.html","searchKeys":["StandardClass$"," object StandardClass"]},{"name":" class StandardClassWithCaseCompanion","description":"tests.companionObjectSignatures.StandardClassWithCaseCompanion","location":"api/tests/companionObjectSignatures/-standard-class-with-case-companion/index.html","searchKeys":["StandardClassWithCaseCompanion"," class StandardClassWithCaseCompanion"]},{"name":"case object StandardClassWithCaseCompanion","description":"tests.companionObjectSignatures.StandardClassWithCaseCompanion$","location":"api/tests/companionObjectSignatures/-standard-class-with-case-companion$/index.html","searchKeys":["StandardClassWithCaseCompanion$","case object StandardClassWithCaseCompanion"]},{"name":"case class WithoutExplicitCompanion(parameter: Int)","description":"tests.companionObjectSignatures.WithoutExplicitCompanion","location":"api/tests/companionObjectSignatures/-without-explicit-companion/index.html","searchKeys":["WithoutExplicitCompanion","case class WithoutExplicitCompanion(parameter: Int)"]},{"name":" enum Enum1","description":"tests.enumSignatures.Enum1","location":"api/tests/enumSignatures/-enum1/index.html","searchKeys":["Enum1"," enum Enum1"]},{"name":" enum Enum2(val i: Int)","description":"tests.enumSignatures.Enum2","location":"api/tests/enumSignatures/-enum2/index.html","searchKeys":["Enum2"," enum Enum2(val i: Int)"]},{"name":"case B(t: String) extends Enum2","description":"tests.enumSignatures.Enum2$","location":"api/tests/enumSignatures/-enum2/-b/index.html","searchKeys":["Enum2$","case B(t: String) extends Enum2"]},{"name":" enum Enum3(val param: Int)","description":"tests.enumSignatures.Enum3","location":"api/tests/enumSignatures/-enum3/index.html","searchKeys":["Enum3"," enum Enum3(val param: Int)"]},{"name":" enum Enum4[+T]","description":"tests.enumSignatures.Enum4","location":"api/tests/enumSignatures/-enum4/index.html","searchKeys":["Enum4"," enum Enum4[+T]"]},{"name":"case C[V](s: String) extends Enum4[V]","description":"tests.enumSignatures.Enum4$","location":"api/tests/enumSignatures/-enum4/-c/index.html","searchKeys":["Enum4$","case C[V](s: String) extends Enum4[V]"]},{"name":" class ClassOne","description":"tests.extensionMethodSignatures.ClassOne","location":"api/tests/extensionMethodSignatures/-class-one/index.html","searchKeys":["ClassOne"," class ClassOne"]},{"name":" def getB(): String","description":"tests.extensionMethodSignatures.ClassOne.extension_getB","location":"api/tests/extensionMethodSignatures/-class-one/extension_get-b.html","searchKeys":["extension_getB"," def getB(): String"]},{"name":" def getGivenParams(a: Int, b: Int, d: Int)(e: String): Int","description":"tests.extensionMethodSignatures.ClassOne.extension_getGivenParams","location":"api/tests/extensionMethodSignatures/-class-one/extension_get-given-params.html","searchKeys":["extension_getGivenParams"," def getGivenParams(a: Int, b: Int, d: Int)(e: String): Int"]},{"name":" def getInt(): Int","description":"tests.extensionMethodSignatures.ClassOne.extension_getInt","location":"api/tests/extensionMethodSignatures/-class-one/extension_get-int.html","searchKeys":["extension_getInt"," def getInt(): Int"]},{"name":" def getString(a: String): String","description":"tests.extensionMethodSignatures.ClassOne.extension_getString","location":"api/tests/extensionMethodSignatures/-class-one/extension_get-string.html","searchKeys":["extension_getString"," def getString(a: String): String"]},{"name":" def otherMethod(a: Int): Int","description":"tests.extensionMethodSignatures.ClassOne.extension_otherMethod","location":"api/tests/extensionMethodSignatures/-class-one/extension_other-method.html","searchKeys":["extension_otherMethod"," def otherMethod(a: Int): Int"]},{"name":" def secondGroup(): String","description":"tests.extensionMethodSignatures.ClassOne.extension_secondGroup","location":"api/tests/extensionMethodSignatures/-class-one/extension_second-group.html","searchKeys":["extension_secondGroup"," def secondGroup(): String"]},{"name":" def someMethod(): String","description":"tests.extensionMethodSignatures.ClassOne.extension_someMethod","location":"api/tests/extensionMethodSignatures/-class-one/extension_some-method.html","searchKeys":["extension_someMethod"," def someMethod(): String"]},{"name":" def |||:(a: Int, b: Int, d: Int)(e: String): Int","description":"tests.extensionMethodSignatures.ClassOne.extension_|||:","location":"api/tests/extensionMethodSignatures/-class-one/extension_[124][124][124][58].html","searchKeys":["extension_|||:"," def |||:(a: Int, b: Int, d: Int)(e: String): Int"]},{"name":" class ClassOneTwo extends ClassOne","description":"tests.extensionMethodSignatures.ClassOneTwo","location":"api/tests/extensionMethodSignatures/-class-one-two/index.html","searchKeys":["ClassOneTwo"," class ClassOneTwo extends ClassOne"]},{"name":"case class ClassTwo(a: String, b: String)","description":"tests.extensionMethodSignatures.ClassTwo","location":"api/tests/extensionMethodSignatures/-class-two/index.html","searchKeys":["ClassTwo","case class ClassTwo(a: String, b: String)"]},{"name":" trait C2","description":"tests.fieldsSignatures.C2","location":"api/tests/fieldsSignatures/-c2/index.html","searchKeys":["C2"," trait C2"]},{"name":" def d: Int","description":"tests.fieldsSignatures.C2.d","location":"api/tests/fieldsSignatures/-c2/d.html","searchKeys":["d"," def d: Int"]},{"name":"abstract class D2 extends C","description":"tests.fieldsSignatures.D2","location":"api/tests/fieldsSignatures/-d2/index.html","searchKeys":["D2","abstract class D2 extends C"]},{"name":" class D2[T]()","description":"tests.genericSignatures.D2","location":"api/tests/genericSignatures/-d2/index.html","searchKeys":["D2"," class D2[T]()"]},{"name":" class Types","description":"tests.genericMethods.Types","location":"api/tests/genericMethods/-types/index.html","searchKeys":["Types"," class Types"]},{"name":" def andTypes(base: Int & String, nested: List[Int & Double] & Seq[String]): Unit","description":"tests.genericMethods.Types.andTypes","location":"api/tests/genericMethods/-types/and-types.html","searchKeys":["andTypes"," def andTypes(base: Int & String, nested: List[Int & Double] & Seq[String]): Unit"]},{"name":" def byName(a: => Int, b: => String | Int): Unit","description":"tests.genericMethods.Types.byName","location":"api/tests/genericMethods/-types/by-name.html","searchKeys":["byName"," def byName(a: => Int, b: => String | Int): Unit"]},{"name":" def literal(i: 1, d: 3.3, c: 'c'): 34","description":"tests.genericMethods.Types.literal","location":"api/tests/genericMethods/-types/literal.html","searchKeys":["literal"," def literal(i: 1, d: 3.3, c: 'c'): 34"]},{"name":" def mixedAndAndOr(base: Int & String, nested: List[Int | Double] & Seq[String]): Unit","description":"tests.genericMethods.Types.mixedAndAndOr","location":"api/tests/genericMethods/-types/mixed-and-and-or.html","searchKeys":["mixedAndAndOr"," def mixedAndAndOr(base: Int & String, nested: List[Int | Double] & Seq[String]): Unit"]},{"name":" def orTypes(base: Int | String, nested: List[Int | Double] | Seq[String]): Unit","description":"tests.genericMethods.Types.orTypes","location":"api/tests/genericMethods/-types/or-types.html","searchKeys":["orTypes"," def orTypes(base: Int | String, nested: List[Int | Double] | Seq[String]): Unit"]},{"name":" class A2[E, +T <: DD[E]]","description":"tests.genericSignatures.A2","location":"api/tests/genericSignatures/-a2/index.html","searchKeys":["A2"," class A2[E, +T <: DD[E]]"]},{"name":" class DD[+T]","description":"tests.genericSignatures.DD","location":"api/tests/genericSignatures/-d-d/index.html","searchKeys":["DD"," class DD[+T]"]},{"name":" class GivenType","description":"tests.givenSignatures.GivenClass","location":"api/tests/givenSignatures/-given-class/-given-type/index.html","searchKeys":["GivenClass"," class GivenType"]},{"name":"given IntOps as Int.type","description":"tests.givenSignatures.GivenClass.IntOps","location":"api/tests/givenSignatures/-given-class/-int-ops.html","searchKeys":["IntOps","given IntOps as Int.type"]},{"name":"given asd as B","description":"tests.givenSignatures.GivenClass.asd","location":"api/tests/givenSignatures/-given-class/asd.html","searchKeys":["asd","given asd as B"]},{"name":"given asd2 as C[T]","description":"tests.givenSignatures.GivenClass.asd2","location":"api/tests/givenSignatures/-given-class/asd2.html","searchKeys":["asd2","given asd2 as C[T]"]},{"name":" def compare(xs: List[T], ys: List[T]): Int","description":"tests.givenSignatures.GivenClass.compare","location":"api/tests/givenSignatures/-given-class/list-ord/compare.html","searchKeys":["compare"," def compare(xs: List[T], ys: List[T]): Int"]},{"name":" def <(y: T): Boolean","description":"tests.givenSignatures.GivenClass.extension_<","location":"api/tests/givenSignatures/-given-class/-ord/extension_[60].html","searchKeys":["extension_<"," def <(y: T): Boolean"]},{"name":" def >(y: T): Boolean","description":"tests.givenSignatures.GivenClass.extension_>","location":"api/tests/givenSignatures/-given-class/-ord/extension_[62].html","searchKeys":["extension_>"," def >(y: T): Boolean"]},{"name":"given GivenType","description":"tests.givenSignatures.GivenClass.given_GivenType","location":"api/tests/givenSignatures/-given-class/-given-type.html","searchKeys":["given_GivenType","given GivenType"]},{"name":"given listOrd as Ord[List[T]]","description":"tests.givenSignatures.GivenClass.listOrd","location":"api/tests/givenSignatures/-given-class/list-ord.html","searchKeys":["listOrd","given listOrd as Ord[List[T]]"]},{"name":"implicit class ImplicitClass(val i: Int)","description":"tests.implicitClasslikes.implicitClasslikes$package$","location":"api/tests/implicitClasslikes/-implicit-object/-implicit-class/index.html","searchKeys":["implicitClasslikes$package$","implicit class ImplicitClass(val i: Int)"]},{"name":" def bar: String","description":"tests.implicitConversions.A.bar","location":"api/tests/implicitConversions/-a/-c/bar.html","searchKeys":["bar"," def bar: String"]},{"name":" def bar: String","description":"tests.implicitConversions.nested.Wrapper$.bar","location":"api/tests/implicitConversions/nested/-wrapper/-bar/bar.html","searchKeys":["bar"," def bar: String"]},{"name":" def bar2: String","description":"tests.implicitConversions.A.bar2","location":"api/tests/implicitConversions/-a/-d/bar2.html","searchKeys":["bar2"," def bar2: String"]},{"name":" def extended_bar(): String","description":"tests.implicitConversions.A.extension_extended_bar","location":"api/tests/implicitConversions/-a/-d/extension_extended_bar.html","searchKeys":["extension_extended_bar"," def extended_bar(): String"]},{"name":" def extended_bar(): String","description":"tests.implicitConversions.classesWithConversions$package$.extension_extended_bar","location":"api/tests/implicitConversions/extension_extended_bar.html","searchKeys":["extension_extended_bar"," def extended_bar(): String"]},{"name":" def inherited: Int","description":"tests.implicitConversions.A.inherited","location":"api/tests/implicitConversions/-a/-e/inherited.html","searchKeys":["inherited"," def inherited: Int"]},{"name":" def foo: Int","description":"tests.implicitConversions.B.foo","location":"api/tests/implicitConversions/-b/foo.html","searchKeys":["foo"," def foo: Int"]},{"name":" object C","description":"tests.implicitConversions.C$","location":"api/tests/implicitConversions/-c$/index.html","searchKeys":["C$"," object C"]},{"name":"implicit def companionConversion(c: C): B","description":"tests.implicitConversions.C$.companionConversion","location":"api/tests/implicitConversions/-c$/companion-conversion.html","searchKeys":["companionConversion","implicit def companionConversion(c: C): B"]},{"name":" def extensionInCompanion: String","description":"tests.implicitConversions.C$.extension_extensionInCompanion","location":"api/tests/implicitConversions/-c$/extension_extension-in-companion.html","searchKeys":["extension_extensionInCompanion"," def extensionInCompanion: String"]},{"name":" def extensionInCompanion: String","description":"tests.implicitConversions.C.extensionInCompanion","location":"api/tests/implicitConversions/-c/extension-in-companion.html","searchKeys":["extensionInCompanion"," def extensionInCompanion: String"]},{"name":" class ClazzA","description":"tests.implicitConversions.ClazzA","location":"api/tests/implicitConversions/-clazz-a/index.html","searchKeys":["ClazzA"," class ClazzA"]},{"name":" object ClazzA","description":"tests.implicitConversions.ClazzA$","location":"api/tests/implicitConversions/-clazz-a$/index.html","searchKeys":["ClazzA$"," object ClazzA"]},{"name":"implicit def convToB1(a: ClazzA): ClazzB","description":"tests.implicitConversions.ClazzA$.convToB1","location":"api/tests/implicitConversions/-clazz-a$/conv-to-b1.html","searchKeys":["convToB1","implicit def convToB1(a: ClazzA): ClazzB"]},{"name":" class ClazzAB extends ClazzA","description":"tests.implicitConversions.ClazzAB","location":"api/tests/implicitConversions/-clazz-a-b/index.html","searchKeys":["ClazzAB"," class ClazzAB extends ClazzA"]},{"name":" object ClazzAB","description":"tests.implicitConversions.ClazzAB$","location":"api/tests/implicitConversions/-clazz-a-b$/index.html","searchKeys":["ClazzAB$"," object ClazzAB"]},{"name":" class ClazzB","description":"tests.implicitConversions.ClazzB","location":"api/tests/implicitConversions/-clazz-b/index.html","searchKeys":["ClazzB"," class ClazzB"]},{"name":" def met1: String","description":"tests.implicitConversions.ClazzB.met1","location":"api/tests/implicitConversions/-clazz-b/met1.html","searchKeys":["met1"," def met1: String"]},{"name":" class ClazzC","description":"tests.implicitConversions.ClazzC","location":"api/tests/implicitConversions/-clazz-c/index.html","searchKeys":["ClazzC"," class ClazzC"]},{"name":" def met2: String","description":"tests.implicitConversions.ClazzC.met2","location":"api/tests/implicitConversions/-clazz-c/met2.html","searchKeys":["met2"," def met2: String"]},{"name":" class ClazzD","description":"tests.implicitConversions.ClazzD","location":"api/tests/implicitConversions/-clazz-d/index.html","searchKeys":["ClazzD"," class ClazzD"]},{"name":" class ClazzE","description":"tests.implicitConversions.ClazzE","location":"api/tests/implicitConversions/-clazz-e/index.html","searchKeys":["ClazzE"," class ClazzE"]},{"name":" def met3: String","description":"tests.implicitConversions.ClazzE.met3","location":"api/tests/implicitConversions/-clazz-e/met3.html","searchKeys":["met3"," def met3: String"]},{"name":" class ClazzF[T]","description":"tests.implicitConversions.ClazzF","location":"api/tests/implicitConversions/-clazz-f/index.html","searchKeys":["ClazzF"," class ClazzF[T]"]},{"name":" object ClazzF","description":"tests.implicitConversions.ClazzF$","location":"api/tests/implicitConversions/-clazz-f$/index.html","searchKeys":["ClazzF$"," object ClazzF"]},{"name":"implicit def convFtoE: Conversion[ClazzF[String], ClazzE]","description":"tests.implicitConversions.ClazzF$.convFtoE","location":"api/tests/implicitConversions/-clazz-f$/conv-fto-e.html","searchKeys":["convFtoE","implicit def convFtoE: Conversion[ClazzF[String], ClazzE]"]},{"name":" class Lst[A]","description":"tests.implicitConversions.nested.Lst","location":"api/tests/implicitConversions/nested/-lst/index.html","searchKeys":["Lst"," class Lst[A]"]},{"name":" object Lst","description":"tests.implicitConversions.nested.Lst$","location":"api/tests/implicitConversions/nested/-lst$/index.html","searchKeys":["Lst$"," object Lst"]},{"name":" def sum: Int","description":"tests.implicitConversions.nested.Lst$.extension_sum","location":"api/tests/implicitConversions/nested/-lst$/extension_sum.html","searchKeys":["extension_sum"," def sum: Int"]},{"name":" def sum: Int","description":"tests.implicitConversions.nested.classesWithConversions$package$.extension_sum","location":"api/tests/implicitConversions/nested/extension_sum.html","searchKeys":["extension_sum"," def sum: Int"]},{"name":" class Opt[A]","description":"tests.implicitConversions.nested.Opt","location":"api/tests/implicitConversions/nested/-opt/index.html","searchKeys":["Opt"," class Opt[A]"]},{"name":" class Bar","description":"tests.implicitConversions.nested.Wrapper$","location":"api/tests/implicitConversions/nested/-wrapper/-bar/index.html","searchKeys":["Wrapper$"," class Bar"]},{"name":"implicit def foobar(foo: Foo): Bar","description":"tests.implicitConversions.nested.Wrapper$.foobar","location":"api/tests/implicitConversions/nested/-wrapper/foobar.html","searchKeys":["foobar","implicit def foobar(foo: Foo): Bar"]},{"name":" class Z","description":"tests.implicitConversions.nested.Z","location":"api/tests/implicitConversions/nested/-z/index.html","searchKeys":["Z"," class Z"]},{"name":" object ImplicitMemberTarget","description":"tests.implicitMembers.OuterClass","location":"api/tests/implicitMembers/-outer-class/-implicit-member-target$/index.html","searchKeys":["OuterClass"," object ImplicitMemberTarget"]},{"name":" def extensionFromCompanion: String","description":"tests.implicitMembers.OuterClass.extension_extensionFromCompanion","location":"api/tests/implicitMembers/-outer-class/-implicit-member-target$/extension_extension-from-companion.html","searchKeys":["extension_extensionFromCompanion"," def extensionFromCompanion: String"]},{"name":" def extensionFromOuterClass: String","description":"tests.implicitMembers.OuterClass.extension_extensionFromOuterClass","location":"api/tests/implicitMembers/-outer-class/extension_extension-from-outer-class.html","searchKeys":["extension_extensionFromOuterClass"," def extensionFromOuterClass: String"]},{"name":" def extensionFromPackage: String","description":"tests.implicitMembers.implicitMembers$package$.extension_extensionFromPackage","location":"api/tests/implicitMembers/extension_extension-from-package.html","searchKeys":["extension_extensionFromPackage"," def extensionFromPackage: String"]},{"name":" def methodFromPackage1(): Int","description":"tests.mergedPackage.mergedPackage1$package$.methodFromPackage1","location":"api/tests/mergedPackage/method-from-package1.html","searchKeys":["methodFromPackage1"," def methodFromPackage1(): Int"]},{"name":" def methodFromPackage2(): String","description":"tests.mergedPackage.mergedPackage2$package$.methodFromPackage2","location":"api/tests/mergedPackage/method-from-package2.html","searchKeys":["methodFromPackage2"," def methodFromPackage2(): String"]},{"name":" def functionFromPackageObject(): String => String","description":"tests.mergedPackage.package$.functionFromPackageObject","location":"api/tests/mergedPackage/function-from-package-object.html","searchKeys":["functionFromPackageObject"," def functionFromPackageObject(): String => String"]},{"name":"abstract class Abstract()","description":"tests.modifiersSignatureTestSource.Abstract","location":"api/tests/modifiersSignatureTestSource/-abstract/index.html","searchKeys":["Abstract","abstract class Abstract()"]},{"name":"case class Case()","description":"tests.modifiersSignatureTestSource.Case","location":"api/tests/modifiersSignatureTestSource/-case/index.html","searchKeys":["Case","case class Case()"]},{"name":" class Empty()","description":"tests.modifiersSignatureTestSource.Empty","location":"api/tests/modifiersSignatureTestSource/-empty/index.html","searchKeys":["Empty"," class Empty()"]},{"name":"final class Final()","description":"tests.modifiersSignatureTestSource.Final","location":"api/tests/modifiersSignatureTestSource/-final/index.html","searchKeys":["Final","final class Final()"]},{"name":" class ImplementedMethods() extends Methods","description":"tests.modifiersSignatureTestSource.ImplementedMethods","location":"api/tests/modifiersSignatureTestSource/-implemented-methods/index.html","searchKeys":["ImplementedMethods"," class ImplementedMethods() extends Methods"]},{"name":"override def method1(): Unit","description":"tests.modifiersSignatureTestSource.ImplementedMethods.method1","location":"api/tests/modifiersSignatureTestSource/-implemented-methods/method1.html","searchKeys":["method1","override def method1(): Unit"]},{"name":" def method1(): Unit","description":"tests.modifiersSignatureTestSource.Methods.method1","location":"api/tests/modifiersSignatureTestSource/-methods/method1.html","searchKeys":["method1"," def method1(): Unit"]},{"name":"override def method1(): Unit","description":"tests.modifiersSignatureTestSource.ReimplementedMethods.method1","location":"api/tests/modifiersSignatureTestSource/-reimplemented-methods/method1.html","searchKeys":["method1","override def method1(): Unit"]},{"name":" def method1(): Int","description":"tests.packageObjectSymbolSignatures.package$.method1","location":"api/tests/packageObjectSymbolSignatures/method1.html","searchKeys":["method1"," def method1(): Int"]},{"name":"inline def inlineMethod(): Unit","description":"tests.modifiersSignatureTestSource.Methods.inlineMethod","location":"api/tests/modifiersSignatureTestSource/-methods/inline-method.html","searchKeys":["inlineMethod","inline def inlineMethod(): Unit"]},{"name":"implicit def toImplicitString(): String","description":"tests.modifiersSignatureTestSource.Methods.toImplicitString","location":"api/tests/modifiersSignatureTestSource/-methods/to-implicit-string.html","searchKeys":["toImplicitString","implicit def toImplicitString(): String"]},{"name":"open class Open","description":"tests.modifiersSignatureTestSource.Open","location":"api/tests/modifiersSignatureTestSource/-open/index.html","searchKeys":["Open","open class Open"]},{"name":"case class ReimplementedMethods() extends ImplementedMethods","description":"tests.modifiersSignatureTestSource.ReimplementedMethods","location":"api/tests/modifiersSignatureTestSource/-reimplemented-methods/index.html","searchKeys":["ReimplementedMethods","case class ReimplementedMethods() extends ImplementedMethods"]},{"name":"sealed class Sealed()","description":"tests.modifiersSignatureTestSource.Sealed","location":"api/tests/modifiersSignatureTestSource/-sealed/index.html","searchKeys":["Sealed","sealed class Sealed()"]},{"name":" def bb(): Int","description":"tests.nested.A.bb","location":"api/tests/nested/-a/-b/bb.html","searchKeys":["bb"," def bb(): Int"]},{"name":" def bb(): Int","description":"tests.nested.R$.bb","location":"api/tests/nested/-r/-b/bb.html","searchKeys":["bb"," def bb(): Int"]},{"name":" def cc: Int","description":"tests.nested.A.cc","location":"api/tests/nested/-a/-c/cc.html","searchKeys":["cc"," def cc: Int"]},{"name":" def cc: Int","description":"tests.nested.R$.cc","location":"api/tests/nested/-r/-c/cc.html","searchKeys":["cc"," def cc: Int"]},{"name":"sealed trait ErrorKind","description":"tests.nested.ErrorKind","location":"api/tests/nested/-error-kind/index.html","searchKeys":["ErrorKind","sealed trait ErrorKind"]},{"name":" object ErrorKind","description":"tests.nested.ErrorKind$","location":"api/tests/nested/-error-kind$/index.html","searchKeys":["ErrorKind$"," object ErrorKind"]},{"name":" class C","description":"tests.nested.R$","location":"api/tests/nested/-r/-c/index.html","searchKeys":["R$"," class C"]},{"name":" object Y","description":"tests.nested.X","location":"api/tests/nested/-x/-y/index.html","searchKeys":["X"," object Y"]},{"name":" def method3(): String","description":"tests.objectSignatures.A.method3","location":"api/tests/objectSignatures/-a/method3.html","searchKeys":["method3"," def method3(): String"]},{"name":" object A2 extends A[String] with C","description":"tests.objectSignatures.A2$","location":"api/tests/objectSignatures/-a2/index.html","searchKeys":["A2$"," object A2 extends A[String] with C"]},{"name":" object Base","description":"tests.objectSignatures.Base$","location":"api/tests/objectSignatures/-base/index.html","searchKeys":["Base$"," object Base"]},{"name":" def method2(): String","description":"tests.packageObjectSymbolSignatures.package$.method2","location":"api/tests/packageObjectSymbolSignatures/method2.html","searchKeys":["method2"," def method2(): String"]},{"name":" def packageMethod1: String","description":"tests.packageSymbolSignatures.packageSymbolSignatures$package$.packageMethod1","location":"api/tests/packageSymbolSignatures/package-method1.html","searchKeys":["packageMethod1"," def packageMethod1: String"]},{"name":" def packageMethod2: Int","description":"tests.packageSymbolSignatures.packageSymbolSignatures$package$.packageMethod2","location":"api/tests/packageSymbolSignatures/package-method2.html","searchKeys":["packageMethod2"," def packageMethod2: Int"]},{"name":" class SignatureTestClass(a: String)","description":"tests.signatureTestSource.SignatureTestClass","location":"api/tests/signatureTestSource/-signature-test-class/index.html","searchKeys":["SignatureTestClass"," class SignatureTestClass(a: String)"]},{"name":" def bounds1[T <: String](a: T, b: T): Unit","description":"tests.signatureTestSource.SignatureTestClass.bounds1","location":"api/tests/signatureTestSource/-signature-test-class/bounds1.html","searchKeys":["bounds1"," def bounds1[T <: String](a: T, b: T): Unit"]},{"name":" def bounds2[T >: String](a: T, b: T): Unit","description":"tests.signatureTestSource.SignatureTestClass.bounds2","location":"api/tests/signatureTestSource/-signature-test-class/bounds2.html","searchKeys":["bounds2"," def bounds2[T >: String](a: T, b: T): Unit"]},{"name":" def likeVararg(a: Seq[A]): C","description":"tests.signatureTestSource.SignatureTestClass.likeVararg","location":"api/tests/signatureTestSource/-signature-test-class/like-vararg.html","searchKeys":["likeVararg"," def likeVararg(a: Seq[A]): C"]},{"name":" class Record(elems: (String, Any)*) extends Selectable","description":"tests.structuralTypes.Record","location":"api/tests/structuralTypes/-record/index.html","searchKeys":["Record"," class Record(elems: (String, Any)*) extends Selectable"]},{"name":" def selectDynamic(name: String): Any","description":"tests.structuralTypes.Record.selectDynamic","location":"api/tests/structuralTypes/-record/select-dynamic.html","searchKeys":["selectDynamic"," def selectDynamic(name: String): Any"]},{"name":" class Base","description":"tests.typesSignatures.Base","location":"api/tests/typesSignatures/-base/index.html","searchKeys":["Base"," class Base"]},{"name":" class Generic[T]","description":"tests.typesSignatures.Generic","location":"api/tests/typesSignatures/-generic/index.html","searchKeys":["Generic"," class Generic[T]"]},{"name":" class Operators","description":"tests.typesSignatures.Operators","location":"api/tests/typesSignatures/-operators/index.html","searchKeys":["Operators"," class Operators"]},{"name":" trait V","description":"tests.typesSignatures.V","location":"api/tests/typesSignatures/-v/index.html","searchKeys":["V"," trait V"]},{"name":" class InClassVisibility()","description":"tests.visibility.InClassVisibility","location":"api/tests/visibility/-in-class-visibility/index.html","searchKeys":["InClassVisibility"," class InClassVisibility()"]},{"name":"protected[InClassVisibility] def protectedInClassMethod: Int","description":"tests.visibility.InClassVisibility.protectedInClassMethod","location":"api/tests/visibility/-in-class-visibility/protected-in-class-method.html","searchKeys":["protectedInClassMethod","protected[InClassVisibility] def protectedInClassMethod: Int"]},{"name":"protected def protectedMethod: Int","description":"tests.visibility.InClassVisibility.protectedMethod","location":"api/tests/visibility/-in-class-visibility/protected-method.html","searchKeys":["protectedMethod","protected def protectedMethod: Int"]},{"name":" object InObjectVisibility","description":"tests.visibility.InObjectVisibility$","location":"api/tests/visibility/-in-object-visibility/index.html","searchKeys":["InObjectVisibility$"," object InObjectVisibility"]},{"name":" trait InTraitVisibility","description":"tests.visibility.InTraitVisibility","location":"api/tests/visibility/-in-trait-visibility/index.html","searchKeys":["InTraitVisibility"," trait InTraitVisibility"]},{"name":"protected[InTraitVisibility] def protectedInTraitMethod: Int","description":"tests.visibility.InTraitVisibility.protectedInTraitMethod","location":"api/tests/visibility/-in-trait-visibility/protected-in-trait-method.html","searchKeys":["protectedInTraitMethod","protected[InTraitVisibility] def protectedInTraitMethod: Int"]}]
