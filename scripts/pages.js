var pages = [{'name': 'case class Args(name: String, tastyRoots: Seq[File], classpath: String, output: File, docsRoot: Option[String], projectVersion: String, projectTitle: Option[String], projectLogo: Option[String], defaultSyntax: Option[CommentSyntax], sourceLinks: List[String])', 'description':'dotty.dokka.Args', 'location':'scala3doc/dotty.dokka/-args/index.html', 'searchKey':'Args'},
{'name': ' enum CommentSyntax', 'description':'dotty.dokka.Args$', 'location':'scala3doc/dotty.dokka/-args$/-comment-syntax/index.html', 'searchKey':'Args$'},
{'name': ' def fromString(str: String): Option[CommentSyntax]', 'description':'dotty.dokka.Args$.fromString', 'location':'scala3doc/dotty.dokka/-args$/-comment-syntax$/from-string.html', 'searchKey':'fromString'},
{'name': ' trait BaseDocConfiguration', 'description':'dotty.dokka.BaseDocConfiguration', 'location':'scala3doc/dotty.dokka/-base-doc-configuration/index.html', 'searchKey':'BaseDocConfiguration'},
{'name': ' class BaseKey[T, V] extends Key[T, V]', 'description':'dotty.dokka.BaseKey', 'location':'scala3doc/dotty.dokka/-base-key/index.html', 'searchKey':'BaseKey'},
{'name': ' def definedIn(e: T): Boolean', 'description':'dotty.dokka.BaseKey.definedIn', 'location':'scala3doc/dotty.dokka/-base-key/defined-in.html', 'searchKey':'definedIn'},
{'name': ' def getFrom(e: T): Option[V]', 'description':'dotty.dokka.BaseKey.getFrom', 'location':'scala3doc/dotty.dokka/-base-key/get-from.html', 'searchKey':'getFrom'},
{'name': 'override def mergeStrategyFor(left: V, right: V): MergeStrategy[T]', 'description':'dotty.dokka.BaseKey.mergeStrategyFor', 'location':'scala3doc/dotty.dokka/-base-key/merge-strategy-for.html', 'searchKey':'mergeStrategyFor'},
{'name': 'override def mergeStrategyFor(left: CompositeMemberExtension, right: CompositeMemberExtension): MergeStrategy[Documentable]', 'description':'dotty.dokka.model.api.CompositeMemberExtension$.mergeStrategyFor', 'location':'scala3doc/dotty.dokka/model/api/-composite-member-extension$/merge-strategy-for.html', 'searchKey':'mergeStrategyFor'},
{'name': 'case class ClasslikeExtension(constructor: Option[DFunction], companion: Option[DRI]) extends ExtraProperty[DClasslike]', 'description':'dotty.dokka.ClasslikeExtension', 'location':'scala3doc/dotty.dokka/-classlike-extension/index.html', 'searchKey':'ClasslikeExtension'},
{'name': ' object ClasslikeExtension extends BaseKey[DClasslike, ClasslikeExtension]', 'description':'dotty.dokka.ClasslikeExtension$', 'location':'scala3doc/dotty.dokka/-classlike-extension$/index.html', 'searchKey':'ClasslikeExtension$'},
{'name': 'override def getKey: ClasslikeExtension.type', 'description':'dotty.dokka.ClasslikeExtension.getKey', 'location':'scala3doc/dotty.dokka/-classlike-extension/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: IsInherited.type', 'description':'dotty.dokka.IsInherited.getKey', 'location':'scala3doc/dotty.dokka/-is-inherited/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: MethodExtension.type', 'description':'dotty.dokka.MethodExtension.getKey', 'location':'scala3doc/dotty.dokka/-method-extension/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: ModuleExtension.type', 'description':'dotty.dokka.ModuleExtension.getKey', 'location':'scala3doc/dotty.dokka/-module-extension/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: ParameterExtension.type', 'description':'dotty.dokka.ParameterExtension.getKey', 'location':'scala3doc/dotty.dokka/-parameter-extension/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: SourceLinks.type', 'description':'dotty.dokka.SourceLinks.getKey', 'location':'scala3doc/dotty.dokka/-source-links/get-key.html', 'searchKey':'getKey'},
{'name': 'override def getKey: CompositeMemberExtension.type', 'description':'dotty.dokka.model.api.CompositeMemberExtension.getKey', 'location':'scala3doc/dotty.dokka/model/api/-composite-member-extension/get-key.html', 'searchKey':'getKey'},
{'name': 'case class ContentNodeParams(dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode])', 'description':'dotty.dokka.ContentNodeParams', 'location':'scala3doc/dotty.dokka/-content-node-params/index.html', 'searchKey':'ContentNodeParams'},
{'name': ' def dri: DRI', 'description':'dotty.dokka.ContentNodeParams.dri', 'location':'scala3doc/dotty.dokka/-content-node-params/dri.html', 'searchKey':'dri'},
{'name': ' enum DocConfiguration extends BaseDocConfiguration', 'description':'dotty.dokka.DocConfiguration', 'location':'scala3doc/dotty.dokka/-doc-configuration/index.html', 'searchKey':'DocConfiguration'},
{'name': 'case Standalone(args: Args, tastyFiles: List[String])', 'description':'dotty.dokka.DocConfiguration$', 'location':'scala3doc/dotty.dokka/-doc-configuration/-standalone/index.html', 'searchKey':'DocConfiguration$'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.DocConfiguration$.enumLabel', 'location':'scala3doc/dotty.dokka/-doc-configuration/-standalone/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.model.api.Kind$.enumLabel', 'location':'scala3doc/dotty.dokka/model/api/-kind/-given/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.model.api.Origin$.enumLabel', 'location':'scala3doc/dotty.dokka/model/api/-origin/-extension-from/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.model.api.Visibility$.enumLabel', 'location':'scala3doc/dotty.dokka/model/api/-visibility/-private/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.model.api.VisibilityScope$.enumLabel', 'location':'scala3doc/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'dotty.dokka.tasty.comments.Query$.enumLabel', 'location':'scala3doc/dotty.dokka/tasty/comments/-query$/-qual/-id/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'tests.enumSignatures.Enum2$.enumLabel', 'location':'scala3doc/tests/enumSignatures/-enum2/-b/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def enumLabel: String', 'description':'tests.enumSignatures.Enum4$.enumLabel', 'location':'scala3doc/tests/enumSignatures/-enum4/-c/enum-label.html', 'searchKey':'enumLabel'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.DocConfiguration$.ordinal', 'location':'scala3doc/dotty.dokka/-doc-configuration/-standalone/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.model.api.Kind$.ordinal', 'location':'scala3doc/dotty.dokka/model/api/-kind/-extension/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.model.api.Origin$.ordinal', 'location':'scala3doc/dotty.dokka/model/api/-origin/-extension-from/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.model.api.Visibility$.ordinal', 'location':'scala3doc/dotty.dokka/model/api/-visibility/-private/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.model.api.VisibilityScope$.ordinal', 'location':'scala3doc/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'dotty.dokka.tasty.comments.Query$.ordinal', 'location':'scala3doc/dotty.dokka/tasty/comments/-query$/-qual/-id/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'tests.enumSignatures.Enum2$.ordinal', 'location':'scala3doc/tests/enumSignatures/-enum2/-b/ordinal.html', 'searchKey':'ordinal'},
{'name': ' def ordinal: Int', 'description':'tests.enumSignatures.Enum4$.ordinal', 'location':'scala3doc/tests/enumSignatures/-enum4/-c/ordinal.html', 'searchKey':'ordinal'},
{'name': 'case class DocumentableElement(annotations: Signature, modifiers: Signature, name: String, signature: Signature, brief: Seq[ContentNode], originInfo: Signature, attributes: Map[String, String], params: ContentNodeParams) extends ScalaContentNode', 'description':'dotty.dokka.DocumentableElement', 'location':'scala3doc/dotty.dokka/-documentable-element/index.html', 'searchKey':'DocumentableElement'},
{'name': 'override def newInstance(params: ContentNodeParams): ScalaContentNode', 'description':'dotty.dokka.DocumentableElement.newInstance', 'location':'scala3doc/dotty.dokka/-documentable-element/new-instance.html', 'searchKey':'newInstance'},
{'name': 'override def newInstance(params: ContentNodeParams): ScalaContentNode', 'description':'dotty.dokka.DocumentableElementGroup.newInstance', 'location':'scala3doc/dotty.dokka/-documentable-element-group/new-instance.html', 'searchKey':'newInstance'},
{'name': 'override def newInstance(params: ContentNodeParams): ScalaContentNode', 'description':'dotty.dokka.DocumentableFilter.newInstance', 'location':'scala3doc/dotty.dokka/-documentable-filter/new-instance.html', 'searchKey':'newInstance'},
{'name': 'override def newInstance(params: ContentNodeParams): ScalaContentNode', 'description':'dotty.dokka.DocumentableList.newInstance', 'location':'scala3doc/dotty.dokka/-documentable-list/new-instance.html', 'searchKey':'newInstance'},
{'name': ' def newInstance(params: ContentNodeParams): ScalaContentNode', 'description':'dotty.dokka.ScalaContentNode.newInstance', 'location':'scala3doc/dotty.dokka/-scala-content-node/new-instance.html', 'searchKey':'newInstance'},
{'name': 'case class DocumentableElementGroup(header: Signature, elements: Seq[DocumentableElement], params: ContentNodeParams) extends ScalaContentNode', 'description':'dotty.dokka.DocumentableElementGroup', 'location':'scala3doc/dotty.dokka/-documentable-element-group/index.html', 'searchKey':'DocumentableElementGroup'},
{'name': 'override def getChildren: List[ContentNode]', 'description':'dotty.dokka.DocumentableElementGroup.getChildren', 'location':'scala3doc/dotty.dokka/-documentable-element-group/get-children.html', 'searchKey':'getChildren'},
{'name': 'override def getChildren: List[ContentNode]', 'description':'dotty.dokka.DocumentableList.getChildren', 'location':'scala3doc/dotty.dokka/-documentable-list/get-children.html', 'searchKey':'getChildren'},
{'name': 'override def getChildren: List[ContentNode]', 'description':'dotty.dokka.HierarchyDiagramContentNode.getChildren', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/get-children.html', 'searchKey':'getChildren'},
{'name': 'override def getChildren: List[ContentNode]', 'description':'dotty.dokka.HtmlContentNode.getChildren', 'location':'scala3doc/dotty.dokka/-html-content-node/get-children.html', 'searchKey':'getChildren'},
{'name': 'override def getChildren: List[ContentNode]', 'description':'dotty.dokka.ScalaContentNode.getChildren', 'location':'scala3doc/dotty.dokka/-scala-content-node/get-children.html', 'searchKey':'getChildren'},
{'name': 'override def hasAnyContent: Boolean', 'description':'dotty.dokka.DocumentableElementGroup.hasAnyContent', 'location':'scala3doc/dotty.dokka/-documentable-element-group/has-any-content.html', 'searchKey':'hasAnyContent'},
{'name': 'override def hasAnyContent: Boolean', 'description':'dotty.dokka.DocumentableList.hasAnyContent', 'location':'scala3doc/dotty.dokka/-documentable-list/has-any-content.html', 'searchKey':'hasAnyContent'},
{'name': 'override def hasAnyContent: Boolean', 'description':'dotty.dokka.HierarchyDiagramContentNode.hasAnyContent', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/has-any-content.html', 'searchKey':'hasAnyContent'},
{'name': 'override def hasAnyContent: Boolean', 'description':'dotty.dokka.HtmlContentNode.hasAnyContent', 'location':'scala3doc/dotty.dokka/-html-content-node/has-any-content.html', 'searchKey':'hasAnyContent'},
{'name': 'override def hasAnyContent: Boolean', 'description':'dotty.dokka.ScalaContentNode.hasAnyContent', 'location':'scala3doc/dotty.dokka/-scala-content-node/has-any-content.html', 'searchKey':'hasAnyContent'},
{'name': 'case class DocumentableFilter(params: ContentNodeParams) extends ScalaContentNode', 'description':'dotty.dokka.DocumentableFilter', 'location':'scala3doc/dotty.dokka/-documentable-filter/index.html', 'searchKey':'DocumentableFilter'},
{'name': 'case class DocumentableGroup(name: Option[String | Documentable], documenables: Seq[Documentable | DocumentableSubGroup])', 'description':'dotty.dokka.DocumentableGroup', 'location':'scala3doc/dotty.dokka/-documentable-group/index.html', 'searchKey':'DocumentableGroup'},
{'name': 'case class DocumentableList(groupName: Signature, elements: Seq[DocumentableElement | DocumentableElementGroup], params: ContentNodeParams) extends ScalaContentNode', 'description':'dotty.dokka.DocumentableList', 'location':'scala3doc/dotty.dokka/-documentable-list/index.html', 'searchKey':'DocumentableList'},
{'name': 'case class DocumentableSubGroup(title: Signature, extensions: Seq[Documentable])', 'description':'dotty.dokka.DocumentableSubGroup', 'location':'scala3doc/dotty.dokka/-documentable-sub-group/index.html', 'searchKey':'DocumentableSubGroup'},
{'name': ' object DotDiagramBuilder', 'description':'dotty.dokka.DotDiagramBuilder$', 'location':'scala3doc/dotty.dokka/-dot-diagram-builder/index.html', 'searchKey':'DotDiagramBuilder$'},
{'name': ' def build(diagram: HierarchyDiagram, renderer: SignatureRenderer): String', 'description':'dotty.dokka.DotDiagramBuilder$.build', 'location':'scala3doc/dotty.dokka/-dot-diagram-builder/build.html', 'searchKey':'build'},
{'name': ' def build(m: Member): HierarchyDiagram', 'description':'dotty.dokka.HierarchyDiagramBuilder$.build', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-builder/build.html', 'searchKey':'build'},
{'name': ' def build(): List[ContentGroup]', 'description':'dotty.dokka.ScalaPageContentBuilder.build', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-table-builder/build.html', 'searchKey':'build'},
{'name': 'case class DottyDokkaConfig(docConfiguration: DocConfiguration) extends DokkaConfiguration', 'description':'dotty.dokka.DottyDokkaConfig', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/index.html', 'searchKey':'DottyDokkaConfig'},
{'name': 'override def getCacheRoot: File', 'description':'dotty.dokka.DottyDokkaConfig.getCacheRoot', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-cache-root.html', 'searchKey':'getCacheRoot'},
{'name': 'override def getFailOnWarning: Boolean', 'description':'dotty.dokka.DottyDokkaConfig.getFailOnWarning', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-fail-on-warning.html', 'searchKey':'getFailOnWarning'},
{'name': 'override def getModules: List[DokkaModuleDescription]', 'description':'dotty.dokka.DottyDokkaConfig.getModules', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-modules.html', 'searchKey':'getModules'},
{'name': 'override def getOfflineMode: Boolean', 'description':'dotty.dokka.DottyDokkaConfig.getOfflineMode', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-offline-mode.html', 'searchKey':'getOfflineMode'},
{'name': 'override def getOutputDir: File', 'description':'dotty.dokka.DottyDokkaConfig.getOutputDir', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-output-dir.html', 'searchKey':'getOutputDir'},
{'name': 'override def getPluginsClasspath: List[File]', 'description':'dotty.dokka.DottyDokkaConfig.getPluginsClasspath', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-plugins-classpath.html', 'searchKey':'getPluginsClasspath'},
{'name': 'override def getPluginsConfiguration: Map[String, String]', 'description':'dotty.dokka.DottyDokkaConfig.getPluginsConfiguration', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-plugins-configuration.html', 'searchKey':'getPluginsConfiguration'},
{'name': 'override def getSourceSets: List[DokkaSourceSet]', 'description':'dotty.dokka.DottyDokkaConfig.getSourceSets', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/get-source-sets.html', 'searchKey':'getSourceSets'},
{'name': 'override def getSourceSets: Set[DisplaySourceSet]', 'description':'dotty.dokka.HierarchyDiagramContentNode.getSourceSets', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/get-source-sets.html', 'searchKey':'getSourceSets'},
{'name': 'override def getSourceSets: Set[DisplaySourceSet]', 'description':'dotty.dokka.HtmlContentNode.getSourceSets', 'location':'scala3doc/dotty.dokka/-html-content-node/get-source-sets.html', 'searchKey':'getSourceSets'},
{'name': 'override def getSourceSets: Set[DisplaySourceSet]', 'description':'dotty.dokka.ScalaContentNode.getSourceSets', 'location':'scala3doc/dotty.dokka/-scala-content-node/get-source-sets.html', 'searchKey':'getSourceSets'},
{'name': ' def mkSourceSet: DokkaSourceSet', 'description':'dotty.dokka.DottyDokkaConfig.mkSourceSet', 'location':'scala3doc/dotty.dokka/-dotty-dokka-config/mk-source-set.html', 'searchKey':'mkSourceSet'},
{'name': ' class DottyDokkaPlugin extends JavaDokkaPlugin', 'description':'dotty.dokka.DottyDokkaPlugin', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/index.html', 'searchKey':'DottyDokkaPlugin'},
{'name': 'override def createCommentToContentConverter(): CommentsToContentConverter', 'description':'dotty.dokka.DottyDokkaPlugin.createCommentToContentConverter', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-comment-to-content-converter.html', 'searchKey':'createCommentToContentConverter'},
{'name': 'override def createDocumentableToPageTranslator(commentsToContentConverter: CommentsToContentConverter, signatureProvider: SignatureProvider, logger: DokkaLogger): DocumentableToPageTranslator', 'description':'dotty.dokka.DottyDokkaPlugin.createDocumentableToPageTranslator', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-documentable-to-page-translator.html', 'searchKey':'createDocumentableToPageTranslator'},
{'name': 'override def createEmbeddedResourceAppender(ctx: DokkaContext): PageTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createEmbeddedResourceAppender', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-embedded-resource-appender.html', 'searchKey':'createEmbeddedResourceAppender'},
{'name': 'override def createHtmlRenderer(ctx: DokkaContext): Renderer', 'description':'dotty.dokka.DottyDokkaPlugin.createHtmlRenderer', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-html-renderer.html', 'searchKey':'createHtmlRenderer'},
{'name': 'override def createImplicitMembersExtensionTransformer(ctx: DokkaContext): DocumentableTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createImplicitMembersExtensionTransformer', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-implicit-members-extension-transformer.html', 'searchKey':'createImplicitMembersExtensionTransformer'},
{'name': 'override def createInheritanceInformationTransformer(ctx: DokkaContext): DocumentableTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createInheritanceInformationTransformer', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-inheritance-information-transformer.html', 'searchKey':'createInheritanceInformationTransformer'},
{'name': 'override def createPackageHierarchyTransformer(ctx: DokkaContext): PageTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createPackageHierarchyTransformer', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-package-hierarchy-transformer.html', 'searchKey':'createPackageHierarchyTransformer'},
{'name': 'override def createResourceInstaller(ctx: DokkaContext): PageTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createResourceInstaller', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-resource-installer.html', 'searchKey':'createResourceInstaller'},
{'name': 'override def createSignatureProvider(ctcc: CommentsToContentConverter, logger: DokkaLogger): SignatureProvider', 'description':'dotty.dokka.DottyDokkaPlugin.createSignatureProvider', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-signature-provider.html', 'searchKey':'createSignatureProvider'},
{'name': 'override def createSourceLinksTransformer(ctx: DokkaContext, commentsToContentConverter: CommentsToContentConverter, signatureProvider: SignatureProvider, logger: DokkaLogger): DocumentableTransformer', 'description':'dotty.dokka.DottyDokkaPlugin.createSourceLinksTransformer', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-source-links-transformer.html', 'searchKey':'createSourceLinksTransformer'},
{'name': 'override def createSourceToDocumentableTranslator(cxt: DokkaContext, sourceSet: SourceSetWrapper): DModule', 'description':'dotty.dokka.DottyDokkaPlugin.createSourceToDocumentableTranslator', 'location':'scala3doc/dotty.dokka/-dotty-dokka-plugin/create-source-to-documentable-translator.html', 'searchKey':'createSourceToDocumentableTranslator'},
{'name': ' object FakeDottyDokkaModule extends DokkaModuleDescription', 'description':'dotty.dokka.FakeDottyDokkaModule$', 'location':'scala3doc/dotty.dokka/-fake-dotty-dokka-module/index.html', 'searchKey':'FakeDottyDokkaModule$'},
{'name': 'override def getDocFile(): File', 'description':'dotty.dokka.FakeDottyDokkaModule$.getDocFile', 'location':'scala3doc/dotty.dokka/-fake-dotty-dokka-module/get-doc-file.html', 'searchKey':'getDocFile'},
{'name': 'override def getName(): String', 'description':'dotty.dokka.FakeDottyDokkaModule$.getName', 'location':'scala3doc/dotty.dokka/-fake-dotty-dokka-module/get-name.html', 'searchKey':'getName'},
{'name': 'override def getPath(): File', 'description':'dotty.dokka.FakeDottyDokkaModule$.getPath', 'location':'scala3doc/dotty.dokka/-fake-dotty-dokka-module/get-path.html', 'searchKey':'getPath'},
{'name': 'override def getPath: String', 'description':'dotty.dokka.TastyDocumentableSource.getPath', 'location':'scala3doc/dotty.dokka/-tasty-documentable-source/get-path.html', 'searchKey':'getPath'},
{'name': ' object HierarchyDiagramBuilder', 'description':'dotty.dokka.HierarchyDiagramBuilder$', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-builder/index.html', 'searchKey':'HierarchyDiagramBuilder$'},
{'name': 'case class HierarchyDiagramContentNode(diagram: HierarchyDiagram, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode', 'description':'dotty.dokka.HierarchyDiagramContentNode', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/index.html', 'searchKey':'HierarchyDiagramContentNode'},
{'name': 'override def getDci: DCI', 'description':'dotty.dokka.HierarchyDiagramContentNode.getDci', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/get-dci.html', 'searchKey':'getDci'},
{'name': 'override def getDci: DCI', 'description':'dotty.dokka.HtmlContentNode.getDci', 'location':'scala3doc/dotty.dokka/-html-content-node/get-dci.html', 'searchKey':'getDci'},
{'name': 'override def getDci: DCI', 'description':'dotty.dokka.ScalaContentNode.getDci', 'location':'scala3doc/dotty.dokka/-scala-content-node/get-dci.html', 'searchKey':'getDci'},
{'name': 'override def getExtra: PropertyContainer[ContentNode]', 'description':'dotty.dokka.HierarchyDiagramContentNode.getExtra', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/get-extra.html', 'searchKey':'getExtra'},
{'name': 'override def getExtra: PropertyContainer[ContentNode]', 'description':'dotty.dokka.HtmlContentNode.getExtra', 'location':'scala3doc/dotty.dokka/-html-content-node/get-extra.html', 'searchKey':'getExtra'},
{'name': 'override def getExtra: PropertyContainer[ContentNode]', 'description':'dotty.dokka.ScalaContentNode.getExtra', 'location':'scala3doc/dotty.dokka/-scala-content-node/get-extra.html', 'searchKey':'getExtra'},
{'name': 'override def getStyle: Set[Style]', 'description':'dotty.dokka.HierarchyDiagramContentNode.getStyle', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/get-style.html', 'searchKey':'getStyle'},
{'name': 'override def getStyle: Set[Style]', 'description':'dotty.dokka.HtmlContentNode.getStyle', 'location':'scala3doc/dotty.dokka/-html-content-node/get-style.html', 'searchKey':'getStyle'},
{'name': 'override def getStyle: Set[Style]', 'description':'dotty.dokka.ScalaContentNode.getStyle', 'location':'scala3doc/dotty.dokka/-scala-content-node/get-style.html', 'searchKey':'getStyle'},
{'name': 'override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode', 'description':'dotty.dokka.HierarchyDiagramContentNode.withNewExtras', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/with-new-extras.html', 'searchKey':'withNewExtras'},
{'name': 'override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode', 'description':'dotty.dokka.HtmlContentNode.withNewExtras', 'location':'scala3doc/dotty.dokka/-html-content-node/with-new-extras.html', 'searchKey':'withNewExtras'},
{'name': 'override def withNewExtras(p: PropertyContainer[ContentNode]): ContentNode', 'description':'dotty.dokka.ScalaContentNode.withNewExtras', 'location':'scala3doc/dotty.dokka/-scala-content-node/with-new-extras.html', 'searchKey':'withNewExtras'},
{'name': ' def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode', 'description':'dotty.dokka.HierarchyDiagramContentNode.withSourceSets', 'location':'scala3doc/dotty.dokka/-hierarchy-diagram-content-node/with-source-sets.html', 'searchKey':'withSourceSets'},
{'name': ' def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode', 'description':'dotty.dokka.HtmlContentNode.withSourceSets', 'location':'scala3doc/dotty.dokka/-html-content-node/with-source-sets.html', 'searchKey':'withSourceSets'},
{'name': ' def withSourceSets(sourceSets: Set[DisplaySourceSet]): ContentNode', 'description':'dotty.dokka.ScalaContentNode.withSourceSets', 'location':'scala3doc/dotty.dokka/-scala-content-node/with-source-sets.html', 'searchKey':'withSourceSets'},
{'name': 'case class HtmlContentNode(body: String, dci: DCI, sourceSets: Set[DisplaySourceSet], style: Set[Style], extra: PropertyContainer[ContentNode]) extends ContentNode', 'description':'dotty.dokka.HtmlContentNode', 'location':'scala3doc/dotty.dokka/-html-content-node/index.html', 'searchKey':'HtmlContentNode'},
{'name': 'case class ImplicitConversion(conversion: Documentable, from: DRI, to: DRI)', 'description':'dotty.dokka.ImplicitConversion', 'location':'scala3doc/dotty.dokka/-implicit-conversion/index.html', 'searchKey':'ImplicitConversion'},
{'name': 'case class ImplicitConversion(from: DRI, to: DRI)', 'description':'dotty.dokka.model.api.ImplicitConversion', 'location':'scala3doc/dotty.dokka/model/api/-implicit-conversion/index.html', 'searchKey':'ImplicitConversion'},
{'name': ' class ImplicitMembersExtensionTransformer(ctx: DokkaContext) extends DocumentableTransformer', 'description':'dotty.dokka.ImplicitMembersExtensionTransformer', 'location':'scala3doc/dotty.dokka/-implicit-members-extension-transformer/index.html', 'searchKey':'ImplicitMembersExtensionTransformer'},
{'name': 'override def invoke(original: DModule, context: DokkaContext): DModule', 'description':'dotty.dokka.ImplicitMembersExtensionTransformer.invoke', 'location':'scala3doc/dotty.dokka/-implicit-members-extension-transformer/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(original: DModule, context: DokkaContext): DModule', 'description':'dotty.dokka.InheritanceInformationTransformer.invoke', 'location':'scala3doc/dotty.dokka/-inheritance-information-transformer/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(input: RootPageNode): RootPageNode', 'description':'dotty.dokka.PackageHierarchyTransformer.invoke', 'location':'scala3doc/dotty.dokka/-package-hierarchy-transformer/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(module: DModule): ModulePageNode', 'description':'dotty.dokka.ScalaDocumentableToPageTranslator.invoke', 'location':'scala3doc/dotty.dokka/-scala-documentable-to-page-translator/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(input: RootPageNode): RootPageNode', 'description':'dotty.dokka.ScalaEmbeddedResourceAppender.invoke', 'location':'scala3doc/dotty.dokka/-scala-embedded-resource-appender/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(input: RootPageNode): RootPageNode', 'description':'dotty.dokka.ScalaResourceInstaller.invoke', 'location':'scala3doc/dotty.dokka/-scala-resource-installer/invoke.html', 'searchKey':'invoke'},
{'name': 'override def invoke(input: DModule, context: DokkaContext): DModule', 'description':'dotty.dokka.ScalaSourceLinksTransformer.invoke', 'location':'scala3doc/dotty.dokka/-scala-source-links-transformer/invoke.html', 'searchKey':'invoke'},
{'name': ' class InheritanceInformationTransformer(val ctx: DokkaContext) extends DocumentableTransformer', 'description':'dotty.dokka.InheritanceInformationTransformer', 'location':'scala3doc/dotty.dokka/-inheritance-information-transformer/index.html', 'searchKey':'InheritanceInformationTransformer'},
{'name': 'case class InlineSignatureBuilder(names: Signature, preName: Signature) extends SignatureBuilder', 'description':'dotty.dokka.InlineSignatureBuilder', 'location':'scala3doc/dotty.dokka/-inline-signature-builder/index.html', 'searchKey':'InlineSignatureBuilder'},
{'name': ' object InlineSignatureBuilder', 'description':'dotty.dokka.InlineSignatureBuilder$', 'location':'scala3doc/dotty.dokka/-inline-signature-builder$/index.html', 'searchKey':'InlineSignatureBuilder$'},
{'name': ' def typeSignatureFor(d: Documentable): Signature', 'description':'dotty.dokka.InlineSignatureBuilder$.typeSignatureFor', 'location':'scala3doc/dotty.dokka/-inline-signature-builder$/type-signature-for.html', 'searchKey':'typeSignatureFor'},
{'name': 'override def driLink(text: String, dri: DRI): SignatureBuilder', 'description':'dotty.dokka.InlineSignatureBuilder.driLink', 'location':'scala3doc/dotty.dokka/-inline-signature-builder/dri-link.html', 'searchKey':'driLink'},
{'name': ' def driLink(text: String, address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.driLink', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/dri-link.html', 'searchKey':'driLink'},
{'name': ' def driLink(text: String, dri: DRI): SignatureBuilder', 'description':'dotty.dokka.ScalaSignatureProvider.driLink', 'location':'scala3doc/dotty.dokka/-scala-signature-provider/-content-node-builder/dri-link.html', 'searchKey':'driLink'},
{'name': ' def driLink(text: String, dri: DRI): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.driLink', 'location':'scala3doc/dotty.dokka/-signature-builder/dri-link.html', 'searchKey':'driLink'},
{'name': 'override def name(str: String, dri: DRI): SignatureBuilder', 'description':'dotty.dokka.InlineSignatureBuilder.name', 'location':'scala3doc/dotty.dokka/-inline-signature-builder/name.html', 'searchKey':'name'},
{'name': ' def name(str: String, dri: DRI): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.name', 'location':'scala3doc/dotty.dokka/-signature-builder/name.html', 'searchKey':'name'},
{'name': 'override def text(str: String): SignatureBuilder', 'description':'dotty.dokka.InlineSignatureBuilder.text', 'location':'scala3doc/dotty.dokka/-inline-signature-builder/text.html', 'searchKey':'text'},
{'name': ' def text(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.text', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/text.html', 'searchKey':'text'},
{'name': ' def text(str: String): SignatureBuilder', 'description':'dotty.dokka.ScalaSignatureProvider.text', 'location':'scala3doc/dotty.dokka/-scala-signature-provider/-content-node-builder/text.html', 'searchKey':'text'},
{'name': ' def text(str: String): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.text', 'location':'scala3doc/dotty.dokka/-signature-builder/text.html', 'searchKey':'text'},
{'name': ' def text(str: String): Text', 'description':'dotty.dokka.tasty.comments.dkk$.text', 'location':'scala3doc/dotty.dokka/tasty/comments/dkk/text.html', 'searchKey':'text'},
{'name': 'case class IsInherited(flag: Boolean) extends ExtraProperty[Documentable]', 'description':'dotty.dokka.IsInherited', 'location':'scala3doc/dotty.dokka/-is-inherited/index.html', 'searchKey':'IsInherited'},
{'name': ' object IsInherited extends BaseKey[Documentable, IsInherited]', 'description':'dotty.dokka.IsInherited$', 'location':'scala3doc/dotty.dokka/-is-inherited$/index.html', 'searchKey':'IsInherited$'},
{'name': ' object JList', 'description':'dotty.dokka.JList$', 'location':'scala3doc/dotty.dokka/-j-list/index.html', 'searchKey':'JList$'},
{'name': ' object JSet', 'description':'dotty.dokka.JSet$', 'location':'scala3doc/dotty.dokka/-j-set/index.html', 'searchKey':'JSet$'},
{'name': ' object Main', 'description':'dotty.dokka.Main$', 'location':'scala3doc/dotty.dokka/-main/index.html', 'searchKey':'Main$'},
{'name': ' object Main extends Driver', 'description':'dotty.tools.dottydoc.Main$', 'location':'scala3doc/dotty.tools/dottydoc/-main/index.html', 'searchKey':'Main$'},
{'name': ' def main(args: Array[String]): Unit', 'description':'dotty.dokka.Main$.main', 'location':'scala3doc/dotty.dokka/-main/main.html', 'searchKey':'main'},
{'name': 'case class MethodExtension(parametersListSizes: Seq[Int]) extends ExtraProperty[DFunction]', 'description':'dotty.dokka.MethodExtension', 'location':'scala3doc/dotty.dokka/-method-extension/index.html', 'searchKey':'MethodExtension'},
{'name': ' object MethodExtension extends BaseKey[DFunction, MethodExtension]', 'description':'dotty.dokka.MethodExtension$', 'location':'scala3doc/dotty.dokka/-method-extension$/index.html', 'searchKey':'MethodExtension$'},
{'name': 'case class ModuleExtension(driMap: Map[DRI, Member]) extends ExtraProperty[DModule]', 'description':'dotty.dokka.ModuleExtension', 'location':'scala3doc/dotty.dokka/-module-extension/index.html', 'searchKey':'ModuleExtension'},
{'name': ' object ModuleExtension extends BaseKey[DModule, ModuleExtension]', 'description':'dotty.dokka.ModuleExtension$', 'location':'scala3doc/dotty.dokka/-module-extension$/index.html', 'searchKey':'ModuleExtension$'},
{'name': ' class PackageHierarchyTransformer(context: DokkaContext) extends PageTransformer', 'description':'dotty.dokka.PackageHierarchyTransformer', 'location':'scala3doc/dotty.dokka/-package-hierarchy-transformer/index.html', 'searchKey':'PackageHierarchyTransformer'},
{'name': ' def rearangePackagePages(page: ModulePageNode): ModulePageNode', 'description':'dotty.dokka.PackageHierarchyTransformer.rearangePackagePages', 'location':'scala3doc/dotty.dokka/-package-hierarchy-transformer/rearange-package-pages.html', 'searchKey':'rearangePackagePages'},
{'name': 'case class ParameterExtension(isExtendedSymbol: Boolean, isGrouped: Boolean) extends ExtraProperty[DParameter]', 'description':'dotty.dokka.ParameterExtension', 'location':'scala3doc/dotty.dokka/-parameter-extension/index.html', 'searchKey':'ParameterExtension'},
{'name': ' object ParameterExtension extends BaseKey[DParameter, ParameterExtension]', 'description':'dotty.dokka.ParameterExtension$', 'location':'scala3doc/dotty.dokka/-parameter-extension$/index.html', 'searchKey':'ParameterExtension$'},
{'name': ' object PluginUtils', 'description':'dotty.dokka.PluginUtils$', 'location':'scala3doc/dotty.dokka/-plugin-utils/index.html', 'searchKey':'PluginUtils$'},
{'name': ' def query[T <: DokkaPlugin, E](ctx: DokkaContext, queryFunction: T => ExtensionPoint[E])(tag: ClassTag[T]): List[E]', 'description':'dotty.dokka.PluginUtils$.query', 'location':'scala3doc/dotty.dokka/-plugin-utils/query.html', 'searchKey':'query'},
{'name': ' def querySingle[T <: DokkaPlugin, E](ctx: DokkaContext, queryFunction: T => ExtensionPoint[E])(tag: ClassTag[T]): E', 'description':'dotty.dokka.PluginUtils$.querySingle', 'location':'scala3doc/dotty.dokka/-plugin-utils/query-single.html', 'searchKey':'querySingle'},
{'name': ' class RawArgs', 'description':'dotty.dokka.RawArgs', 'location':'scala3doc/dotty.dokka/-raw-args/index.html', 'searchKey':'RawArgs'},
{'name': ' def toArgs: Args', 'description':'dotty.dokka.RawArgs.toArgs', 'location':'scala3doc/dotty.dokka/-raw-args/to-args.html', 'searchKey':'toArgs'},
{'name': ' object ScalaCommentToContentConverter extends CommentsToContentConverter', 'description':'dotty.dokka.ScalaCommentToContentConverter$', 'location':'scala3doc/dotty.dokka/-scala-comment-to-content-converter/index.html', 'searchKey':'ScalaCommentToContentConverter$'},
{'name': 'override def buildContent(docTag: DocTag, dci: DCI, sourceSets: Set[ <: DokkaConfiguration$DokkaSourceSet], styles: Set[ <: Style], extra: PropertyContainer[ContentNode]): List[ContentNode]', 'description':'dotty.dokka.ScalaCommentToContentConverter$.buildContent', 'location':'scala3doc/dotty.dokka/-scala-comment-to-content-converter/build-content.html', 'searchKey':'buildContent'},
{'name': ' def buildContent(): ContentDivergentGroup', 'description':'dotty.dokka.ScalaPageContentBuilder.buildContent', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-builder/build-content.html', 'searchKey':'buildContent'},
{'name': 'abstract class ScalaContentNode(params: ContentNodeParams) extends ContentNode', 'description':'dotty.dokka.ScalaContentNode', 'location':'scala3doc/dotty.dokka/-scala-content-node/index.html', 'searchKey':'ScalaContentNode'},
{'name': ' class ScalaDocumentableToPageTranslator(val commentsToContentConverter: CommentsToContentConverter, val signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DocumentableToPageTranslator', 'description':'dotty.dokka.ScalaDocumentableToPageTranslator', 'location':'scala3doc/dotty.dokka/-scala-documentable-to-page-translator/index.html', 'searchKey':'ScalaDocumentableToPageTranslator'},
{'name': ' class ScalaEmbeddedResourceAppender extends PageTransformer', 'description':'dotty.dokka.ScalaEmbeddedResourceAppender', 'location':'scala3doc/dotty.dokka/-scala-embedded-resource-appender/index.html', 'searchKey':'ScalaEmbeddedResourceAppender'},
{'name': ' class ScalaHtmlRenderer(ctx: DokkaContext) extends SiteRenderer', 'description':'dotty.dokka.ScalaHtmlRenderer', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/index.html', 'searchKey':'ScalaHtmlRenderer'},
{'name': 'override def buildCodeBlock(f: FlowContent, code: ContentCodeBlock, pageContext: ContentPage): Unit', 'description':'dotty.dokka.ScalaHtmlRenderer.buildCodeBlock', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-code-block.html', 'searchKey':'buildCodeBlock'},
{'name': 'override def buildContentNode(f: FlowContent, node: ContentNode, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit', 'description':'dotty.dokka.ScalaHtmlRenderer.buildContentNode', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-content-node.html', 'searchKey':'buildContentNode'},
{'name': ' def buildDescriptionList(node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): String', 'description':'dotty.dokka.ScalaHtmlRenderer.buildDescriptionList', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-description-list.html', 'searchKey':'buildDescriptionList'},
{'name': ' def buildDiagram(f: FlowContent, diagram: HierarchyDiagram, pageContext: ContentPage): Unit', 'description':'dotty.dokka.ScalaHtmlRenderer.buildDiagram', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-diagram.html', 'searchKey':'buildDiagram'},
{'name': 'override def buildHtml(page: PageNode, resources: List[String], kotlinxContent: FlowContentConsumer): String', 'description':'dotty.dokka.ScalaHtmlRenderer.buildHtml', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-html.html', 'searchKey':'buildHtml'},
{'name': 'override def buildTable(f: FlowContent, node: ContentTable, pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet]): Unit', 'description':'dotty.dokka.ScalaHtmlRenderer.buildTable', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/build-table.html', 'searchKey':'buildTable'},
{'name': 'override def wrapGroup(f: FlowContent, node: ContentGroup, pageContext: ContentPage, childrenCallback: FlowContentConsumer): Unit', 'description':'dotty.dokka.ScalaHtmlRenderer.wrapGroup', 'location':'scala3doc/dotty.dokka/-scala-html-renderer/wrap-group.html', 'searchKey':'wrapGroup'},
{'name': 'case class ScalaDivergentBuilder(groupID: GroupID, mainDRI: Set[DRI], mainKind: Kind, mainStyles: Set[Style], mainExtra: PropertyContainer[ContentNode], implicitlySourceSetHinted: Boolean, instances: List[ContentDivergentInstance])', 'description':'dotty.dokka.ScalaPageContentBuilder', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-builder/index.html', 'searchKey':'ScalaPageContentBuilder'},
{'name': ' def addChild(c: ContentNode): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.addChild', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/add-child.html', 'searchKey':'addChild'},
{'name': ' def addChildren(c: Seq[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.addChildren', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/add-children.html', 'searchKey':'addChildren'},
{'name': ' def after(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.after', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/after.html', 'searchKey':'after'},
{'name': ' def before(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.before', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/before.html', 'searchKey':'before'},
{'name': ' def cell(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaTableBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.cell', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-table-builder/cell.html', 'searchKey':'cell'},
{'name': ' def comment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.comment', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/comment.html', 'searchKey':'comment'},
{'name': ' def contentForBrief(d: Documentable): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.contentForBrief', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/content-for-brief.html', 'searchKey':'contentForBrief'},
{'name': ' def contentForDRI(dri: DRI, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup', 'description':'dotty.dokka.ScalaPageContentBuilder.contentForDRI', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/content-for-d-r-i.html', 'searchKey':'contentForDRI'},
{'name': ' def contentForDRIs(dris: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup', 'description':'dotty.dokka.ScalaPageContentBuilder.contentForDRIs', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/content-for-d-r-is.html', 'searchKey':'contentForDRIs'},
{'name': ' def contentForDocumentable(d: Documentable, kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode], buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ContentGroup', 'description':'dotty.dokka.ScalaPageContentBuilder.contentForDocumentable', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/content-for-documentable.html', 'searchKey':'contentForDocumentable'},
{'name': ' def cover(text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.cover', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/cover.html', 'searchKey':'cover'},
{'name': ' def defaultHeaders: List[ContentGroup]', 'description':'dotty.dokka.ScalaPageContentBuilder.defaultHeaders', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/default-headers.html', 'searchKey':'defaultHeaders'},
{'name': ' def divergent(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDivergentInstanceBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.divergent', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-instance-builder/divergent.html', 'searchKey':'divergent'},
{'name': ' def divergentBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.divergentBlock', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/divergent-block.html', 'searchKey':'divergentBlock'},
{'name': ' def divergentGroup(groupId: GroupID, dri: Set[DRI], kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], implicitlySourceSetHinted: Boolean)(buildBlock: ScalaDivergentBuilder => ScalaDivergentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.divergentGroup', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/divergent-group.html', 'searchKey':'divergentGroup'},
{'name': ' def documentableFilter(): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.documentableFilter', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/documentable-filter.html', 'searchKey':'documentableFilter'},
{'name': ' def documentableTab(name: String)(children: DocumentableGroup*): Self', 'description':'dotty.dokka.ScalaPageContentBuilder.documentableTab', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/documentable-tab.html', 'searchKey':'documentableTab'},
{'name': ' def dotDiagram(diagram: HierarchyDiagram, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.dotDiagram', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/dot-diagram.html', 'searchKey':'dotDiagram'},
{'name': ' def group(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.group', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/group.html', 'searchKey':'group'},
{'name': ' def groupingBlock[A, T <: Documentable, G <: List[(A, List[T])]](name: String, elements: G, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], renderWhenEmpty: Boolean, needsSorting: Boolean, headers: List[ContentGroup], needsAnchors: Boolean, omitSplitterOnSingletons: Boolean)(groupSplitterFunc: (ScalaDocumentableContentBuilder, A) => ScalaDocumentableContentBuilder)(elementFunc: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.groupingBlock', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/grouping-block.html', 'searchKey':'groupingBlock'},
{'name': ' def header(level: Int, text: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.header', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/header.html', 'searchKey':'header'},
{'name': ' def instance(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDivergentInstanceBuilder => ScalaDivergentInstanceBuilder): ScalaDivergentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.instance', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-divergent-builder/instance.html', 'searchKey':'instance'},
{'name': ' def linkWithContent(address: DRI, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.linkWithContent', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/link-with-content.html', 'searchKey':'linkWithContent'},
{'name': ' def list[T](elements: List[T], prefix: String, suffix: String, separator: String, sourceSets: Set[DokkaConfiguration$DokkaSourceSet])(elemOp: (ScalaDocumentableContentBuilder, T) => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.list', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/list.html', 'searchKey':'list'},
{'name': ' def list[E](elements: List[E], prefix: String, suffix: String, separator: String)(elemOp: (SignatureBuilder, E) => SignatureBuilder): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.list', 'location':'scala3doc/dotty.dokka/-signature-builder/list.html', 'searchKey':'list'},
{'name': ' def rawComment(docTag: DocTag, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): Seq[ContentNode]', 'description':'dotty.dokka.ScalaPageContentBuilder.rawComment', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/raw-comment.html', 'searchKey':'rawComment'},
{'name': ' def reset(): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.reset', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/reset.html', 'searchKey':'reset'},
{'name': ' def resolvedLink(text: String, address: String, kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode]): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.resolvedLink', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/resolved-link.html', 'searchKey':'resolvedLink'},
{'name': ' def signature(d: Documentable): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.signature', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/signature.html', 'searchKey':'signature'},
{'name': 'override def signature(documentable: Documentable): List[ContentNode]', 'description':'dotty.dokka.ScalaSignatureProvider.signature', 'location':'scala3doc/dotty.dokka/-scala-signature-provider/signature.html', 'searchKey':'signature'},
{'name': ' def signature(s: Signature): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.signature', 'location':'scala3doc/dotty.dokka/-signature-builder/signature.html', 'searchKey':'signature'},
{'name': ' def sourceSetDependentHint(dri: Set[DRI], sourceSets: Set[DokkaConfiguration$DokkaSourceSet], kind: Kind, styles: Set[Style], extra: PropertyContainer[ContentNode])(buildBlock: ScalaDocumentableContentBuilder => ScalaDocumentableContentBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.sourceSetDependentHint', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/source-set-dependent-hint.html', 'searchKey':'sourceSetDependentHint'},
{'name': ' def table(kind: Kind, sourceSets: Set[DokkaConfiguration$DokkaSourceSet], styles: Set[Style], extra: PropertyContainer[ContentNode], headers: List[ContentGroup])(buildBlock: ScalaTableBuilder => ScalaTableBuilder): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageContentBuilder.table', 'location':'scala3doc/dotty.dokka/-scala-page-content-builder/-scala-documentable-content-builder/table.html', 'searchKey':'table'},
{'name': ' class ScalaPageCreator(commentsToContentConverter: CommentsToContentConverter, signatureProvider: SignatureProvider, val logger: DokkaLogger) extends DefaultPageCreator', 'description':'dotty.dokka.ScalaPageCreator', 'location':'scala3doc/dotty.dokka/-scala-page-creator/index.html', 'searchKey':'ScalaPageCreator'},
{'name': ' def contentForClass(c: DClass): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForClass', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-class.html', 'searchKey':'contentForClass'},
{'name': 'override def contentForClasslike(c: DClasslike): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForClasslike', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-classlike.html', 'searchKey':'contentForClasslike'},
{'name': 'override def contentForFunction(f: DFunction): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForFunction', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-function.html', 'searchKey':'contentForFunction'},
{'name': 'override def contentForMember(d: Documentable): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForMember', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-member.html', 'searchKey':'contentForMember'},
{'name': 'override def contentForModule(m: DModule): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForModule', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-module.html', 'searchKey':'contentForModule'},
{'name': 'override def contentForPackage(p: DPackage): ContentGroup', 'description':'dotty.dokka.ScalaPageCreator.contentForPackage', 'location':'scala3doc/dotty.dokka/-scala-page-creator/content-for-package.html', 'searchKey':'contentForPackage'},
{'name': ' def contentForComments(d: Documentable): DocBuilder', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForComments', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-comments.html', 'searchKey':'extension_contentForComments'},
{'name': ' def contentForConstructors(c: DClass): Self', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForConstructors', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-constructors.html', 'searchKey':'extension_contentForConstructors'},
{'name': ' def contentForDescription(d: Documentable): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForDescription', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-description.html', 'searchKey':'extension_contentForDescription'},
{'name': ' def contentForEnum(c: DClass): Self', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForEnum', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-enum.html', 'searchKey':'extension_contentForEnum'},
{'name': ' def contentForScope(s: Documentable & WithScope & WithExtraProperties[]): Self', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForScope', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-scope.html', 'searchKey':'extension_contentForScope'},
{'name': ' def contentForTypesInfo(c: DClass): ScalaDocumentableContentBuilder', 'description':'dotty.dokka.ScalaPageCreator.extension_contentForTypesInfo', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_content-for-types-info.html', 'searchKey':'extension_contentForTypesInfo'},
{'name': ' def descriptionIfNotEmpty(d: Documentable): DocBuilder', 'description':'dotty.dokka.ScalaPageCreator.extension_descriptionIfNotEmpty', 'location':'scala3doc/dotty.dokka/-scala-page-creator/extension_description-if-not-empty.html', 'searchKey':'extension_descriptionIfNotEmpty'},
{'name': 'override def pageForClasslike(c: DClasslike): ClasslikePageNode', 'description':'dotty.dokka.ScalaPageCreator.pageForClasslike', 'location':'scala3doc/dotty.dokka/-scala-page-creator/page-for-classlike.html', 'searchKey':'pageForClasslike'},
{'name': ' def pageForDClass(c: DClass): ClasslikePageNode', 'description':'dotty.dokka.ScalaPageCreator.pageForDClass', 'location':'scala3doc/dotty.dokka/-scala-page-creator/page-for-d-class.html', 'searchKey':'pageForDClass'},
{'name': 'override def pageForFunction(f: DFunction): MemberPageNode', 'description':'dotty.dokka.ScalaPageCreator.pageForFunction', 'location':'scala3doc/dotty.dokka/-scala-page-creator/page-for-function.html', 'searchKey':'pageForFunction'},
{'name': 'override def pageForModule(m: DModule): ModulePageNode', 'description':'dotty.dokka.ScalaPageCreator.pageForModule', 'location':'scala3doc/dotty.dokka/-scala-page-creator/page-for-module.html', 'searchKey':'pageForModule'},
{'name': 'override def pageForPackage(p: DPackage): PackagePageNode', 'description':'dotty.dokka.ScalaPageCreator.pageForPackage', 'location':'scala3doc/dotty.dokka/-scala-page-creator/page-for-package.html', 'searchKey':'pageForPackage'},
{'name': ' class ScalaResourceInstaller extends PageTransformer', 'description':'dotty.dokka.ScalaResourceInstaller', 'location':'scala3doc/dotty.dokka/-scala-resource-installer/index.html', 'searchKey':'ScalaResourceInstaller'},
{'name': 'case class ContentNodeBuilder(builder: ScalaDocumentableContentBuilder) extends SignatureBuilder', 'description':'dotty.dokka.ScalaSignatureProvider', 'location':'scala3doc/dotty.dokka/-scala-signature-provider/-content-node-builder/index.html', 'searchKey':'ScalaSignatureProvider'},
{'name': ' object ScalaSignatureProvider', 'description':'dotty.dokka.ScalaSignatureProvider$', 'location':'scala3doc/dotty.dokka/-scala-signature-provider$/index.html', 'searchKey':'ScalaSignatureProvider$'},
{'name': ' def rawSignature(documentable: Documentable, builder: SignatureBuilder): SignatureBuilder', 'description':'dotty.dokka.ScalaSignatureProvider$.rawSignature', 'location':'scala3doc/dotty.dokka/-scala-signature-provider$/raw-signature.html', 'searchKey':'rawSignature'},
{'name': ' trait ScalaSignatureUtils', 'description':'dotty.dokka.ScalaSignatureUtils', 'location':'scala3doc/dotty.dokka/-scala-signature-utils/index.html', 'searchKey':'ScalaSignatureUtils'},
{'name': ' def toSignatureString(): String', 'description':'dotty.dokka.ScalaSignatureUtils.extension_toSignatureString', 'location':'scala3doc/dotty.dokka/-scala-signature-utils/extension_to-signature-string.html', 'searchKey':'extension_toSignatureString'},
{'name': 'case class SourceLink(path: String, url: String, lineSuffix: Option[String], sourceSetData: DokkaSourceSet)', 'description':'dotty.dokka.ScalaSourceLinksTransformer', 'location':'scala3doc/dotty.dokka/-scala-source-links-transformer/-source-link/index.html', 'searchKey':'ScalaSourceLinksTransformer'},
{'name': ' def apply(sourceLinkDef: DokkaConfiguration$SourceLinkDefinition, sourceSetData: DokkaSourceSet): SourceLink', 'description':'dotty.dokka.ScalaSourceLinksTransformer.apply', 'location':'scala3doc/dotty.dokka/-scala-source-links-transformer/-source-link$/apply.html', 'searchKey':'apply'},
{'name': ' def apply(names: String | Link*): Signature', 'description':'dotty.dokka.model.api.api$package$.apply', 'location':'scala3doc/dotty.dokka/model/api/-signature/apply.html', 'searchKey':'apply'},
{'name': ' def apply[T >: DClass](classDef: ClassDef)(dri: DRI, name: String, signatureOnly: Boolean, modifiers: Seq[Modifier]): DClass', 'description':'dotty.dokka.tasty.ClassLikeSupport.apply', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/-d-class/apply.html', 'searchKey':'apply'},
{'name': ' def apply(title: Inline, linkTo: LinkTo): RepresentationLink', 'description':'dotty.dokka.tasty.comments.wiki.RepresentationLink$.apply', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-representation-link$/apply.html', 'searchKey':'apply'},
{'name': ' def apply(idx: Int): T', 'description':'example.level2.Documentation.apply', 'location':'scala3doc/example/level2/-documentation/apply.html', 'searchKey':'apply'},
{'name': 'case class Example(root: DocTag) extends TagWrapper', 'description':'dotty.dokka.ScalaTagWrapper$', 'location':'scala3doc/dotty.dokka/-scala-tag-wrapper/-example/index.html', 'searchKey':'ScalaTagWrapper$'},
{'name': ' trait SignatureBuilder extends ScalaSignatureUtils', 'description':'dotty.dokka.SignatureBuilder', 'location':'scala3doc/dotty.dokka/-signature-builder/index.html', 'searchKey':'SignatureBuilder'},
{'name': ' def annotationsBlock(d: Member): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.annotationsBlock', 'location':'scala3doc/dotty.dokka/-signature-builder/annotations-block.html', 'searchKey':'annotationsBlock'},
{'name': ' def annotationsInline(d: Documentable & WithExtraProperties[]): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.annotationsInline', 'location':'scala3doc/dotty.dokka/-signature-builder/annotations-inline.html', 'searchKey':'annotationsInline'},
{'name': ' def functionParameters(method: DFunction): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.functionParameters', 'location':'scala3doc/dotty.dokka/-signature-builder/function-parameters.html', 'searchKey':'functionParameters'},
{'name': ' def generics(on: WithGenerics): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.generics', 'location':'scala3doc/dotty.dokka/-signature-builder/generics.html', 'searchKey':'generics'},
{'name': ' def modifiersAndVisibility(t: Documentable & WithAbstraction & WithVisibility & WithExtraProperties[], kind: String): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.modifiersAndVisibility', 'location':'scala3doc/dotty.dokka/-signature-builder/modifiers-and-visibility.html', 'searchKey':'modifiersAndVisibility'},
{'name': ' def typeSignature(b: Projection): SignatureBuilder', 'description':'dotty.dokka.SignatureBuilder.typeSignature', 'location':'scala3doc/dotty.dokka/-signature-builder/type-signature.html', 'searchKey':'typeSignature'},
{'name': ' class SignatureRenderer(pageContext: ContentPage, sourceSetRestriciton: Set[DisplaySourceSet], locationProvider: LocationProvider)', 'description':'dotty.dokka.SignatureRenderer', 'location':'scala3doc/dotty.dokka/-signature-renderer/index.html', 'searchKey':'SignatureRenderer'},
{'name': ' def link(dri: DRI): Option[String]', 'description':'dotty.dokka.SignatureRenderer.link', 'location':'scala3doc/dotty.dokka/-signature-renderer/link.html', 'searchKey':'link'},
{'name': ' def link(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.link', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/link.html', 'searchKey':'link'},
{'name': ' def link: LinkTo', 'description':'dotty.dokka.tasty.comments.wiki.RepresentationLink.link', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-representation-link/link.html', 'searchKey':'link'},
{'name': ' def renderElement(e: String | (String, DRI) | Link): Frag', 'description':'dotty.dokka.SignatureRenderer.renderElement', 'location':'scala3doc/dotty.dokka/-signature-renderer/render-element.html', 'searchKey':'renderElement'},
{'name': ' def renderElementWith(e: String | (String, DRI) | Link, modifiers: Modifier*): Frag', 'description':'dotty.dokka.SignatureRenderer.renderElementWith', 'location':'scala3doc/dotty.dokka/-signature-renderer/render-element-with.html', 'searchKey':'renderElementWith'},
{'name': ' def renderLink(name: String, dri: DRI, modifiers: Modifier*): Frag', 'description':'dotty.dokka.SignatureRenderer.renderLink', 'location':'scala3doc/dotty.dokka/-signature-renderer/render-link.html', 'searchKey':'renderLink'},
{'name': 'case class SourceLinks(links: Map[DokkaConfiguration$DokkaSourceSet, String]) extends ExtraProperty[Documentable]', 'description':'dotty.dokka.SourceLinks', 'location':'scala3doc/dotty.dokka/-source-links/index.html', 'searchKey':'SourceLinks'},
{'name': ' object SourceLinks extends BaseKey[Documentable, SourceLinks]', 'description':'dotty.dokka.SourceLinks$', 'location':'scala3doc/dotty.dokka/-source-links$/index.html', 'searchKey':'SourceLinks$'},
{'name': ' enum TableStyle extends Style', 'description':'dotty.dokka.TableStyle', 'location':'scala3doc/dotty.dokka/-table-style/index.html', 'searchKey':'TableStyle'},
{'name': 'case class TastyDocumentableSource(path: String, lineNumber: Int) extends DocumentableSource', 'description':'dotty.dokka.TastyDocumentableSource', 'location':'scala3doc/dotty.dokka/-tasty-documentable-source/index.html', 'searchKey':'TastyDocumentableSource'},
{'name': 'case class Annotation(dri: DRI, params: List[AnnotationParameter])', 'description':'dotty.dokka.model.api.Annotation', 'location':'scala3doc/dotty.dokka/model/api/-annotation/index.html', 'searchKey':'Annotation'},
{'name': 'case class LinkParameter(name: Option[String], dri: DRI, value: String) extends AnnotationParameter', 'description':'dotty.dokka.model.api.Annotation$', 'location':'scala3doc/dotty.dokka/model/api/-annotation$/-link-parameter/index.html', 'searchKey':'Annotation$'},
{'name': ' trait Classlike', 'description':'dotty.dokka.model.api.Classlike', 'location':'scala3doc/dotty.dokka/model/api/-classlike/index.html', 'searchKey':'Classlike'},
{'name': 'case class CompositeMemberExtension(members: Seq[Member], directParents: Seq[Signature], parents: Seq[LinkToType], knownChildren: Seq[LinkToType]) extends ExtraProperty[Documentable]', 'description':'dotty.dokka.model.api.CompositeMemberExtension', 'location':'scala3doc/dotty.dokka/model/api/-composite-member-extension/index.html', 'searchKey':'CompositeMemberExtension'},
{'name': ' object CompositeMemberExtension extends BaseKey[Documentable, CompositeMemberExtension]', 'description':'dotty.dokka.model.api.CompositeMemberExtension$', 'location':'scala3doc/dotty.dokka/model/api/-composite-member-extension$/index.html', 'searchKey':'CompositeMemberExtension$'},
{'name': 'case class Edge(from: Vertex, to: Vertex)', 'description':'dotty.dokka.model.api.Edge', 'location':'scala3doc/dotty.dokka/model/api/-edge/index.html', 'searchKey':'Edge'},
{'name': 'case class ExtensionTarget(name: String, signature: Signature, dri: DRI)', 'description':'dotty.dokka.model.api.ExtensionTarget', 'location':'scala3doc/dotty.dokka/model/api/-extension-target/index.html', 'searchKey':'ExtensionTarget'},
{'name': 'case class HierarchyDiagram(edges: Seq[Edge])', 'description':'dotty.dokka.model.api.HierarchyDiagram', 'location':'scala3doc/dotty.dokka/model/api/-hierarchy-diagram/index.html', 'searchKey':'HierarchyDiagram'},
{'name': ' trait ImplicitConversionProvider', 'description':'dotty.dokka.model.api.ImplicitConversionProvider', 'location':'scala3doc/dotty.dokka/model/api/-implicit-conversion-provider/index.html', 'searchKey':'ImplicitConversionProvider'},
{'name': ' def conversion: Option[ImplicitConversion]', 'description':'dotty.dokka.model.api.ImplicitConversionProvider.conversion', 'location':'scala3doc/dotty.dokka/model/api/-implicit-conversion-provider/conversion.html', 'searchKey':'conversion'},
{'name': ' enum Kind(val name: String)', 'description':'dotty.dokka.model.api.Kind', 'location':'scala3doc/dotty.dokka/model/api/-kind/index.html', 'searchKey':'Kind'},
{'name': 'case Given(as: Option[Signature], conversion: Option[ImplicitConversion]) extends Kind with ImplicitConversionProvider', 'description':'dotty.dokka.model.api.Kind$', 'location':'scala3doc/dotty.dokka/model/api/-kind/-given/index.html', 'searchKey':'Kind$'},
{'name': 'case class Link(name: String, dri: DRI)', 'description':'dotty.dokka.model.api.Link', 'location':'scala3doc/dotty.dokka/model/api/-link/index.html', 'searchKey':'Link'},
{'name': 'final case class Link(target: String, title: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Link', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-link/index.html', 'searchKey':'Link'},
{'name': 'case class LinkToType(signature: Signature, dri: DRI, kind: Kind)', 'description':'dotty.dokka.model.api.LinkToType', 'location':'scala3doc/dotty.dokka/model/api/-link-to-type/index.html', 'searchKey':'LinkToType'},
{'name': ' object MemberExtension extends BaseKey[Documentable, MemberExtension]', 'description':'dotty.dokka.model.api.MemberExtension$', 'location':'scala3doc/dotty.dokka/model/api/-member-extension/index.html', 'searchKey':'MemberExtension$'},
{'name': ' enum Modifier(val name: String, val prefix: Boolean)', 'description':'dotty.dokka.model.api.Modifier', 'location':'scala3doc/dotty.dokka/model/api/-modifier/index.html', 'searchKey':'Modifier'},
{'name': ' enum Origin', 'description':'dotty.dokka.model.api.Origin', 'location':'scala3doc/dotty.dokka/model/api/-origin/index.html', 'searchKey':'Origin'},
{'name': 'case ImplicitlyAddedBy(name: String, dri: DRI)', 'description':'dotty.dokka.model.api.Origin$', 'location':'scala3doc/dotty.dokka/model/api/-origin/-implicitly-added-by/index.html', 'searchKey':'Origin$'},
{'name': 'case class Vertex(id: Int, body: LinkToType)', 'description':'dotty.dokka.model.api.Vertex', 'location':'scala3doc/dotty.dokka/model/api/-vertex/index.html', 'searchKey':'Vertex'},
{'name': ' enum Visibility(val name: String)', 'description':'dotty.dokka.model.api.Visibility', 'location':'scala3doc/dotty.dokka/model/api/-visibility/index.html', 'searchKey':'Visibility'},
{'name': 'case Private(scope: VisibilityScope) extends Visibility', 'description':'dotty.dokka.model.api.Visibility$', 'location':'scala3doc/dotty.dokka/model/api/-visibility/-private/index.html', 'searchKey':'Visibility$'},
{'name': ' def asSignature: String', 'description':'dotty.dokka.model.api.Visibility.asSignature', 'location':'scala3doc/dotty.dokka/model/api/-visibility/as-signature.html', 'searchKey':'asSignature'},
{'name': ' enum VisibilityScope', 'description':'dotty.dokka.model.api.VisibilityScope', 'location':'scala3doc/dotty.dokka/model/api/-visibility-scope/index.html', 'searchKey':'VisibilityScope'},
{'name': 'case ExplicitTypeScope(typeName: String)', 'description':'dotty.dokka.model.api.VisibilityScope$', 'location':'scala3doc/dotty.dokka/model/api/-visibility-scope/-explicit-type-scope/index.html', 'searchKey':'VisibilityScope$'},
{'name': ' object Member', 'description':'dotty.dokka.model.api.api$package$', 'location':'scala3doc/dotty.dokka/model/api/-member/index.html', 'searchKey':'api$package$'},
{'name': ' def allMembers[T]: Seq[Member]', 'description':'dotty.dokka.model.api.api$package$.extension_allMembers', 'location':'scala3doc/dotty.dokka/model/api/extension_all-members.html', 'searchKey':'extension_allMembers'},
{'name': ' def annotations[T]: List[Annotation]', 'description':'dotty.dokka.model.api.api$package$.extension_annotations', 'location':'scala3doc/dotty.dokka/model/api/extension_annotations.html', 'searchKey':'extension_annotations'},
{'name': ' def asLink[T]: LinkToType', 'description':'dotty.dokka.model.api.api$package$.extension_asLink', 'location':'scala3doc/dotty.dokka/model/api/extension_as-link.html', 'searchKey':'extension_asLink'},
{'name': ' def directParents[T]: Seq[Signature]', 'description':'dotty.dokka.model.api.api$package$.extension_directParents', 'location':'scala3doc/dotty.dokka/model/api/extension_direct-parents.html', 'searchKey':'extension_directParents'},
{'name': ' def dri[T]: DRI', 'description':'dotty.dokka.model.api.api$package$.extension_dri', 'location':'scala3doc/dotty.dokka/model/api/extension_dri.html', 'searchKey':'extension_dri'},
{'name': 'final def dri: DRI', 'description':'dotty.dokka.tasty.BasicSupport.extension_dri', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_dri.html', 'searchKey':'extension_dri'},
{'name': ' def dri: DRI', 'description':'dotty.dokka.tasty.SymOps.extension_dri', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_dri.html', 'searchKey':'extension_dri'},
{'name': ' def driMap: Map[DRI, Member]', 'description':'dotty.dokka.model.api.api$package$.extension_driMap', 'location':'scala3doc/dotty.dokka/model/api/extension_dri-map.html', 'searchKey':'extension_driMap'},
{'name': ' def join(a: Signature): Signature', 'description':'dotty.dokka.model.api.api$package$.extension_join', 'location':'scala3doc/dotty.dokka/model/api/extension_join.html', 'searchKey':'extension_join'},
{'name': ' def kind[T]: Kind', 'description':'dotty.dokka.model.api.api$package$.extension_kind', 'location':'scala3doc/dotty.dokka/model/api/extension_kind.html', 'searchKey':'extension_kind'},
{'name': ' def knownChildren[T]: Seq[LinkToType]', 'description':'dotty.dokka.model.api.api$package$.extension_knownChildren', 'location':'scala3doc/dotty.dokka/model/api/extension_known-children.html', 'searchKey':'extension_knownChildren'},
{'name': ' def membersBy[T](op: Member => Boolean): (Seq[Member], Seq[Member])', 'description':'dotty.dokka.model.api.api$package$.extension_membersBy', 'location':'scala3doc/dotty.dokka/model/api/extension_members-by.html', 'searchKey':'extension_membersBy'},
{'name': ' def modifiers[T]: Seq[Modifier]', 'description':'dotty.dokka.model.api.api$package$.extension_modifiers', 'location':'scala3doc/dotty.dokka/model/api/extension_modifiers.html', 'searchKey':'extension_modifiers'},
{'name': ' def name[T]: String', 'description':'dotty.dokka.model.api.api$package$.extension_name', 'location':'scala3doc/dotty.dokka/model/api/extension_name.html', 'searchKey':'extension_name'},
{'name': ' def origin[T]: Origin', 'description':'dotty.dokka.model.api.api$package$.extension_origin', 'location':'scala3doc/dotty.dokka/model/api/extension_origin.html', 'searchKey':'extension_origin'},
{'name': ' def parents[T]: Seq[LinkToType]', 'description':'dotty.dokka.model.api.api$package$.extension_parents', 'location':'scala3doc/dotty.dokka/model/api/extension_parents.html', 'searchKey':'extension_parents'},
{'name': ' def signature[T]: Signature', 'description':'dotty.dokka.model.api.api$package$.extension_signature', 'location':'scala3doc/dotty.dokka/model/api/extension_signature.html', 'searchKey':'extension_signature'},
{'name': ' def visibility[T]: Visibility', 'description':'dotty.dokka.model.api.api$package$.extension_visibility', 'location':'scala3doc/dotty.dokka/model/api/extension_visibility.html', 'searchKey':'extension_visibility'},
{'name': ' def unapply(d: Documentable): Option[(String, DRI, Visibility, Kind, Origin)]', 'description':'dotty.dokka.model.api.api$package$.unapply', 'location':'scala3doc/dotty.dokka/model/api/-member/unapply.html', 'searchKey':'unapply'},
{'name': ' def unapply(el: RepresentationLink): Some[(Inline, LinkTo)]', 'description':'dotty.dokka.tasty.comments.wiki.RepresentationLink$.unapply', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-representation-link$/unapply.html', 'searchKey':'unapply'},
{'name': ' def asSignature: Signature', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_asSignature', 'location':'scala3doc/dotty.dokka/model/api/extension_as-signature.html', 'searchKey':'extension_asSignature'},
{'name': ' def copy(modifiers: Seq[Modifier]): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_copy', 'location':'scala3doc/dotty.dokka/model/api/extension_copy.html', 'searchKey':'extension_copy'},
{'name': ' def updateMembers(op: Member => Member): DModule', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_updateMembers', 'location':'scala3doc/dotty.dokka/model/api/extension_update-members.html', 'searchKey':'extension_updateMembers'},
{'name': ' def updatePackages(op: Seq[DPackage] => Seq[DPackage]): DModule', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_updatePackages', 'location':'scala3doc/dotty.dokka/model/api/extension_update-packages.html', 'searchKey':'extension_updatePackages'},
{'name': ' def updateRecusivly(op: Member => Member): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_updateRecusivly', 'location':'scala3doc/dotty.dokka/model/api/extension_update-recusivly.html', 'searchKey':'extension_updateRecusivly'},
{'name': ' def withKind(kind: Kind): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_withKind', 'location':'scala3doc/dotty.dokka/model/api/extension_with-kind.html', 'searchKey':'extension_withKind'},
{'name': ' def withKnownChildren(knownChildren: Seq[LinkToType]): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_withKnownChildren', 'location':'scala3doc/dotty.dokka/model/api/extension_with-known-children.html', 'searchKey':'extension_withKnownChildren'},
{'name': ' def withMembers(newMembers: Seq[Member]): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_withMembers', 'location':'scala3doc/dotty.dokka/model/api/extension_with-members.html', 'searchKey':'extension_withMembers'},
{'name': ' def withNewMembers(newMembers: Seq[Member]): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_withNewMembers', 'location':'scala3doc/dotty.dokka/model/api/extension_with-new-members.html', 'searchKey':'extension_withNewMembers'},
{'name': ' def withOrigin(origin: Origin): Member', 'description':'dotty.dokka.model.api.internalExtensions$package$.extension_withOrigin', 'location':'scala3doc/dotty.dokka/model/api/extension_with-origin.html', 'searchKey':'extension_withOrigin'},
{'name': ' object SymOps extends SymOps[reflect.type]', 'description':'dotty.dokka.tasty.BasicSupport', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/-sym-ops/index.html', 'searchKey':'BasicSupport'},
{'name': ' def documentation(cxt: Context): Map[DokkaConfiguration$DokkaSourceSet, DocumentationNode]', 'description':'dotty.dokka.tasty.BasicSupport.extension_documentation', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_documentation.html', 'searchKey':'extension_documentation'},
{'name': 'final def extendedSymbol: Option[ValDef]', 'description':'dotty.dokka.tasty.BasicSupport.extension_extendedSymbol', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_extended-symbol.html', 'searchKey':'extension_extendedSymbol'},
{'name': ' def extendedSymbol: Option[ValDef]', 'description':'dotty.dokka.tasty.SymOps.extension_extendedSymbol', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_extended-symbol.html', 'searchKey':'extension_extendedSymbol'},
{'name': ' def getAnnotations(): List[Annotation]', 'description':'dotty.dokka.tasty.BasicSupport.extension_getAnnotations', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_get-annotations.html', 'searchKey':'extension_getAnnotations'},
{'name': 'final def getCompanionSymbol: Option[Symbol]', 'description':'dotty.dokka.tasty.BasicSupport.extension_getCompanionSymbol', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_get-companion-symbol.html', 'searchKey':'extension_getCompanionSymbol'},
{'name': ' def getCompanionSymbol: Option[Symbol]', 'description':'dotty.dokka.tasty.SymOps.extension_getCompanionSymbol', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_get-companion-symbol.html', 'searchKey':'extension_getCompanionSymbol'},
{'name': 'final def getExtraModifiers(): Seq[Modifier]', 'description':'dotty.dokka.tasty.BasicSupport.extension_getExtraModifiers', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_get-extra-modifiers.html', 'searchKey':'extension_getExtraModifiers'},
{'name': ' def getExtraModifiers(): Seq[Modifier]', 'description':'dotty.dokka.tasty.SymOps.extension_getExtraModifiers', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_get-extra-modifiers.html', 'searchKey':'extension_getExtraModifiers'},
{'name': 'final def getVisibility(): Visibility', 'description':'dotty.dokka.tasty.BasicSupport.extension_getVisibility', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_get-visibility.html', 'searchKey':'extension_getVisibility'},
{'name': ' def getVisibility(): Visibility', 'description':'dotty.dokka.tasty.SymOps.extension_getVisibility', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_get-visibility.html', 'searchKey':'extension_getVisibility'},
{'name': 'final def hackIsOpen: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_hackIsOpen', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_hack-is-open.html', 'searchKey':'extension_hackIsOpen'},
{'name': ' def hackIsOpen: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_hackIsOpen', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_hack-is-open.html', 'searchKey':'extension_hackIsOpen'},
{'name': 'final def isCompanionObject: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_isCompanionObject', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_is-companion-object.html', 'searchKey':'extension_isCompanionObject'},
{'name': ' def isCompanionObject: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_isCompanionObject', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_is-companion-object.html', 'searchKey':'extension_isCompanionObject'},
{'name': 'final def isExtensionMethod: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_isExtensionMethod', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_is-extension-method.html', 'searchKey':'extension_isExtensionMethod'},
{'name': ' def isExtensionMethod: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_isExtensionMethod', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_is-extension-method.html', 'searchKey':'extension_isExtensionMethod'},
{'name': 'final def isGiven: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_isGiven', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_is-given.html', 'searchKey':'extension_isGiven'},
{'name': ' def isGiven: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_isGiven', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_is-given.html', 'searchKey':'extension_isGiven'},
{'name': 'final def isHiddenByVisibility: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_isHiddenByVisibility', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_is-hidden-by-visibility.html', 'searchKey':'extension_isHiddenByVisibility'},
{'name': ' def isHiddenByVisibility: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_isHiddenByVisibility', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_is-hidden-by-visibility.html', 'searchKey':'extension_isHiddenByVisibility'},
{'name': 'final def isLeftAssoc(d: Symbol): Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_isLeftAssoc', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_is-left-assoc.html', 'searchKey':'extension_isLeftAssoc'},
{'name': ' def isLeftAssoc(d: Symbol): Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_isLeftAssoc', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_is-left-assoc.html', 'searchKey':'extension_isLeftAssoc'},
{'name': 'final def packageName(ctx: Context): String', 'description':'dotty.dokka.tasty.BasicSupport.extension_packageName', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_package-name.html', 'searchKey':'extension_packageName'},
{'name': ' def packageName(ctx: Context): String', 'description':'dotty.dokka.tasty.SymOps.extension_packageName', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_package-name.html', 'searchKey':'extension_packageName'},
{'name': 'final def shouldDocumentClasslike: Boolean', 'description':'dotty.dokka.tasty.BasicSupport.extension_shouldDocumentClasslike', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_should-document-classlike.html', 'searchKey':'extension_shouldDocumentClasslike'},
{'name': ' def shouldDocumentClasslike: Boolean', 'description':'dotty.dokka.tasty.SymOps.extension_shouldDocumentClasslike', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_should-document-classlike.html', 'searchKey':'extension_shouldDocumentClasslike'},
{'name': ' def source(ctx: Context): Map[DokkaConfiguration$DokkaSourceSet, TastyDocumentableSource]', 'description':'dotty.dokka.tasty.BasicSupport.extension_source', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_source.html', 'searchKey':'extension_source'},
{'name': 'final def topLevelEntryName(ctx: Context): Option[String]', 'description':'dotty.dokka.tasty.BasicSupport.extension_topLevelEntryName', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/extension_top-level-entry-name.html', 'searchKey':'extension_topLevelEntryName'},
{'name': ' def topLevelEntryName(ctx: Context): Option[String]', 'description':'dotty.dokka.tasty.SymOps.extension_topLevelEntryName', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/extension_top-level-entry-name.html', 'searchKey':'extension_topLevelEntryName'},
{'name': ' def parseAnnotation(annotTerm: Term): Annotation', 'description':'dotty.dokka.tasty.BasicSupport.parseAnnotation', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/parse-annotation.html', 'searchKey':'parseAnnotation'},
{'name': 'final def r: r.type', 'description':'dotty.dokka.tasty.BasicSupport.r', 'location':'scala3doc/dotty.dokka/tasty/-basic-support/r.html', 'searchKey':'r'},
{'name': ' object DClass', 'description':'dotty.dokka.tasty.ClassLikeSupport', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/-d-class/index.html', 'searchKey':'ClassLikeSupport'},
{'name': ' def extractMembers: Seq[Member]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_extractMembers', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_extract-members.html', 'searchKey':'extension_extractMembers'},
{'name': ' def getCompanion: Option[DRI]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getCompanion', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-companion.html', 'searchKey':'extension_getCompanion'},
{'name': ' def getConstructorMethod: Option[DFunction]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getConstructorMethod', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-constructor-method.html', 'searchKey':'extension_getConstructorMethod'},
{'name': ' def getConstructors: List[Symbol]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getConstructors', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-constructors.html', 'searchKey':'extension_getConstructors'},
{'name': ' def getNonTrivialInheritedMemberTrees: List[Tree]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getNonTrivialInheritedMemberTrees', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-non-trivial-inherited-member-trees.html', 'searchKey':'extension_getNonTrivialInheritedMemberTrees'},
{'name': ' def getParameterModifier(parameter: Symbol): String', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getParameterModifier', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-parameter-modifier.html', 'searchKey':'extension_getParameterModifier'},
{'name': ' def getParents: List[Tree]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getParents', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-parents.html', 'searchKey':'extension_getParents'},
{'name': ' def getTypeParams: List[TypeDef]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_getTypeParams', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_get-type-params.html', 'searchKey':'extension_getTypeParams'},
{'name': ' def membersToDocument: List[Statement]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extension_membersToDocument', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extension_members-to-document.html', 'searchKey':'extension_membersToDocument'},
{'name': ' def extractImplicitConversion(tpe: Type): Option[ImplicitConversion]', 'description':'dotty.dokka.tasty.ClassLikeSupport.extractImplicitConversion', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/extract-implicit-conversion.html', 'searchKey':'extractImplicitConversion'},
{'name': ' def parseArgument(argument: ValDef, prefix: Symbol => String, isExtendedSymbol: Boolean, isGrouped: Boolean): DParameter', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseArgument', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-argument.html', 'searchKey':'parseArgument'},
{'name': ' def parseClasslike(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseClasslike', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-classlike.html', 'searchKey':'parseClasslike'},
{'name': ' def parseEnum(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseEnum', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-enum.html', 'searchKey':'parseEnum'},
{'name': ' def parseMethod(methodSymbol: Symbol, emptyParamsList: Boolean, paramPrefix: Symbol => String, kind: Kind): DFunction', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseMethod', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-method.html', 'searchKey':'parseMethod'},
{'name': ' def parseObject(classDef: ClassDef, signatureOnly: Boolean)(ctx: Context): DClass', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseObject', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-object.html', 'searchKey':'parseObject'},
{'name': ' def parseTypeArgument(argument: TypeDef): DTypeParameter', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseTypeArgument', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-type-argument.html', 'searchKey':'parseTypeArgument'},
{'name': ' def parseTypeDef(typeDef: TypeDef): DProperty', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseTypeDef', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-type-def.html', 'searchKey':'parseTypeDef'},
{'name': ' def parseValDef(valDef: ValDef): DProperty', 'description':'dotty.dokka.tasty.ClassLikeSupport.parseValDef', 'location':'scala3doc/dotty.dokka/tasty/-class-like-support/parse-val-def.html', 'searchKey':'parseValDef'},
{'name': ' trait DokkaBaseTastyInspector', 'description':'dotty.dokka.tasty.DokkaBaseTastyInspector', 'location':'scala3doc/dotty.dokka/tasty/-dokka-base-tasty-inspector/index.html', 'searchKey':'DokkaBaseTastyInspector'},
{'name': ' def mergeWith(other: DPackage): DPackage', 'description':'dotty.dokka.tasty.DokkaBaseTastyInspector.extension_mergeWith', 'location':'scala3doc/dotty.dokka/tasty/-dokka-base-tasty-inspector/extension_merge-with.html', 'searchKey':'extension_mergeWith'},
{'name': ' def processCompilationUnit(reflect: Reflection)(root: Tree): Unit', 'description':'dotty.dokka.tasty.DokkaBaseTastyInspector.processCompilationUnit', 'location':'scala3doc/dotty.dokka/tasty/-dokka-base-tasty-inspector/process-compilation-unit.html', 'searchKey':'processCompilationUnit'},
{'name': ' def result(): List[DPackage]', 'description':'dotty.dokka.tasty.DokkaBaseTastyInspector.result', 'location':'scala3doc/dotty.dokka/tasty/-dokka-base-tasty-inspector/result.html', 'searchKey':'result'},
{'name': 'case class DokkaTastyInspector(sourceSet: SourceSetWrapper, parser: Parser, config: DottyDokkaConfig) extends DokkaBaseTastyInspector with TastyInspector', 'description':'dotty.dokka.tasty.DokkaTastyInspector', 'location':'scala3doc/dotty.dokka/tasty/-dokka-tasty-inspector/index.html', 'searchKey':'DokkaTastyInspector'},
{'name': ' trait PackageSupport', 'description':'dotty.dokka.tasty.PackageSupport', 'location':'scala3doc/dotty.dokka/tasty/-package-support/index.html', 'searchKey':'PackageSupport'},
{'name': ' def parsePackage(pck: PackageClause): DPackage', 'description':'dotty.dokka.tasty.PackageSupport.parsePackage', 'location':'scala3doc/dotty.dokka/tasty/-package-support/parse-package.html', 'searchKey':'parsePackage'},
{'name': ' def parsePackageObject(pckObj: ClassDef): DPackage', 'description':'dotty.dokka.tasty.PackageSupport.parsePackageObject', 'location':'scala3doc/dotty.dokka/tasty/-package-support/parse-package-object.html', 'searchKey':'parsePackageObject'},
{'name': ' class TastyFromClass extends TASTYCompiler', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/index.html', 'searchKey':'SbtDokkaTastyInspector'},
{'name': 'override protected def backendPhases: List[List[Phase]]', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.backendPhases', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/backend-phases.html', 'searchKey':'backendPhases'},
{'name': 'override protected def frontendPhases: List[List[Phase]]', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.frontendPhases', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/frontend-phases.html', 'searchKey':'frontendPhases'},
{'name': 'override protected def newCompiler(ctx: Context): Compiler', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.newCompiler', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-inspector-driver/new-compiler.html', 'searchKey':'newCompiler'},
{'name': 'override def newRun(ctx: Context): Run', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.newRun', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/new-run.html', 'searchKey':'newRun'},
{'name': 'override def phaseName: String', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.phaseName', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-inspector-phase/phase-name.html', 'searchKey':'phaseName'},
{'name': 'override protected def picklerPhases: List[List[Phase]]', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.picklerPhases', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/pickler-phases.html', 'searchKey':'picklerPhases'},
{'name': ' def run(filesToDocument: List[String])(ctx: Context): Unit', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.run', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-inspector-driver/run.html', 'searchKey':'run'},
{'name': 'override protected def transformPhases: List[List[Phase]]', 'description':'dotty.dokka.tasty.SbtDokkaTastyInspector.transformPhases', 'location':'scala3doc/dotty.dokka/tasty/-sbt-dokka-tasty-inspector/-tasty-from-class/transform-phases.html', 'searchKey':'transformPhases'},
{'name': ' trait ScaladocSupport', 'description':'dotty.dokka.tasty.ScaladocSupport', 'location':'scala3doc/dotty.dokka/tasty/-scaladoc-support/index.html', 'searchKey':'ScaladocSupport'},
{'name': ' def parseComment(commentNode: Comment, tree: Tree): DocumentationNode', 'description':'dotty.dokka.tasty.ScaladocSupport.parseComment', 'location':'scala3doc/dotty.dokka/tasty/-scaladoc-support/parse-comment.html', 'searchKey':'parseComment'},
{'name': ' class SymOps[R <: Reflection](val r: R)', 'description':'dotty.dokka.tasty.SymOps', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/index.html', 'searchKey':'SymOps'},
{'name': 'given R as R', 'description':'dotty.dokka.tasty.SymOps.given_R', 'location':'scala3doc/dotty.dokka/tasty/-sym-ops/-r.html', 'searchKey':'given_R'},
{'name': 'given R as R', 'description':'tests.givenSignatures.GivenClass.given_R', 'location':'scala3doc/tests/givenSignatures/-given-class/-r.html', 'searchKey':'given_R'},
{'name': 'case class TastyParser(reflect: Reflection, inspector: DokkaBaseTastyInspector, config: DottyDokkaConfig) extends ScaladocSupport with BasicSupport with TypesSupport with ClassLikeSupport with SyntheticsSupport with PackageSupport', 'description':'dotty.dokka.tasty.TastyParser', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/index.html', 'searchKey':'TastyParser'},
{'name': ' def parseRootTree(root: Tree): Seq[Documentable]', 'description':'dotty.dokka.tasty.TastyParser.parseRootTree', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/parse-root-tree.html', 'searchKey':'parseRootTree'},
{'name': ' def processSymbol[T](sym: Symbol)(op: => T): Option[T]', 'description':'dotty.dokka.tasty.TastyParser.processSymbol', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/process-symbol.html', 'searchKey':'processSymbol'},
{'name': ' def processTree[T](tree: Tree)(op: => T): Option[T]', 'description':'dotty.dokka.tasty.TastyParser.processTree', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/process-tree.html', 'searchKey':'processTree'},
{'name': ' def processTreeOpt[T](tree: Tree)(op: => Option[T]): Option[T]', 'description':'dotty.dokka.tasty.TastyParser.processTreeOpt', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/process-tree-opt.html', 'searchKey':'processTreeOpt'},
{'name': ' def sourceSet: SourceSetWrapper', 'description':'dotty.dokka.tasty.TastyParser.sourceSet', 'location':'scala3doc/dotty.dokka/tasty/-tasty-parser/source-set.html', 'searchKey':'sourceSet'},
{'name': ' trait TypesSupport', 'description':'dotty.dokka.tasty.TypesSupport', 'location':'scala3doc/dotty.dokka/tasty/-types-support/index.html', 'searchKey':'TypesSupport'},
{'name': ' def getGivenInstance(method: DefDef): Option[Bound]', 'description':'dotty.dokka.tasty.TypesSupport.getGivenInstance', 'location':'scala3doc/dotty.dokka/tasty/-types-support/get-given-instance.html', 'searchKey':'getGivenInstance'},
{'name': ' trait BaseConverter', 'description':'dotty.dokka.tasty.comments.BaseConverter', 'location':'scala3doc/dotty.dokka/tasty/comments/-base-converter/index.html', 'searchKey':'BaseConverter'},
{'name': 'protected def withParsedQuery(queryStr: String)(thunk: Query => DocTag): DocTag', 'description':'dotty.dokka.tasty.comments.BaseConverter.withParsedQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/-base-converter/with-parsed-query.html', 'searchKey':'withParsedQuery'},
{'name': ' object Cleaner', 'description':'dotty.dokka.tasty.comments.Cleaner$', 'location':'scala3doc/dotty.dokka/tasty/comments/-cleaner/index.html', 'searchKey':'Cleaner$'},
{'name': ' def clean(comment: String): List[String]', 'description':'dotty.dokka.tasty.comments.Cleaner$.clean', 'location':'scala3doc/dotty.dokka/tasty/comments/-cleaner/clean.html', 'searchKey':'clean'},
{'name': 'case class Comment(body: DocTag, short: Option[DocTag], authors: List[DocTag], see: List[DocTag], result: Option[DocTag], throws: SortedMap[String, (DocTag, DocTag)], valueParams: SortedMap[String, DocTag], typeParams: SortedMap[String, DocTag], version: Option[DocTag], since: Option[DocTag], todo: List[DocTag], deprecated: Option[DocTag], note: List[DocTag], example: List[DocTag], constructor: Option[DocTag], group: Option[DocTag], groupDesc: SortedMap[String, DocTag], groupNames: SortedMap[String, DocTag], groupPrio: SortedMap[String, DocTag], hideImplicitConversions: List[DocTag])', 'description':'dotty.dokka.tasty.comments.Comment', 'location':'scala3doc/dotty.dokka/tasty/comments/-comment/index.html', 'searchKey':'Comment'},
{'name': 'case class DokkaCommentBody(summary: Option[DocTag], body: DocTag)', 'description':'dotty.dokka.tasty.comments.DokkaCommentBody', 'location':'scala3doc/dotty.dokka/tasty/comments/-dokka-comment-body/index.html', 'searchKey':'DokkaCommentBody'},
{'name': ' object Emitter', 'description':'dotty.dokka.tasty.comments.Emitter$', 'location':'scala3doc/dotty.dokka/tasty/comments/-emitter/index.html', 'searchKey':'Emitter$'},
{'name': ' def collect[T](thunk: Emitter[T] => Unit): Seq[T]', 'description':'dotty.dokka.tasty.comments.Emitter$.collect', 'location':'scala3doc/dotty.dokka/tasty/comments/-emitter/collect.html', 'searchKey':'collect'},
{'name': ' def emit[T](e: Emitter[T])(t: T): Emitter[T]', 'description':'dotty.dokka.tasty.comments.Emitter$.emit', 'location':'scala3doc/dotty.dokka/tasty/comments/-emitter/emit.html', 'searchKey':'emit'},
{'name': ' def lastEmittedItem[T](e: Emitter[T]): Option[T]', 'description':'dotty.dokka.tasty.comments.Emitter$.lastEmittedItem', 'location':'scala3doc/dotty.dokka/tasty/comments/-emitter/last-emitted-item.html', 'searchKey':'lastEmittedItem'},
{'name': ' class MarkdownCommentParser(repr: Repr) extends MarkupConversion[Document]', 'description':'dotty.dokka.tasty.comments.MarkdownCommentParser', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-comment-parser/index.html', 'searchKey':'MarkdownCommentParser'},
{'name': ' def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]', 'description':'dotty.dokka.tasty.comments.MarkdownCommentParser.linkedExceptions', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-comment-parser/linked-exceptions.html', 'searchKey':'linkedExceptions'},
{'name': 'protected def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]', 'description':'dotty.dokka.tasty.comments.MarkupConversion.linkedExceptions', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/linked-exceptions.html', 'searchKey':'linkedExceptions'},
{'name': ' def linkedExceptions(m: SortedMap[String, String]): SortedMap[String, (DocTag, DocTag)]', 'description':'dotty.dokka.tasty.comments.WikiCommentParser.linkedExceptions', 'location':'scala3doc/dotty.dokka/tasty/comments/-wiki-comment-parser/linked-exceptions.html', 'searchKey':'linkedExceptions'},
{'name': ' def markupToDokka(md: Document): DocTag', 'description':'dotty.dokka.tasty.comments.MarkdownCommentParser.markupToDokka', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-comment-parser/markup-to-dokka.html', 'searchKey':'markupToDokka'},
{'name': 'protected def markupToDokka(t: T): DocTag', 'description':'dotty.dokka.tasty.comments.MarkupConversion.markupToDokka', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/markup-to-dokka.html', 'searchKey':'markupToDokka'},
{'name': ' def markupToDokka(body: Body): DocTag', 'description':'dotty.dokka.tasty.comments.WikiCommentParser.markupToDokka', 'location':'scala3doc/dotty.dokka/tasty/comments/-wiki-comment-parser/markup-to-dokka.html', 'searchKey':'markupToDokka'},
{'name': ' def markupToDokkaCommentBody(md: Document): DokkaCommentBody', 'description':'dotty.dokka.tasty.comments.MarkdownCommentParser.markupToDokkaCommentBody', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-comment-parser/markup-to-dokka-comment-body.html', 'searchKey':'markupToDokkaCommentBody'},
{'name': 'protected def markupToDokkaCommentBody(t: T): DokkaCommentBody', 'description':'dotty.dokka.tasty.comments.MarkupConversion.markupToDokkaCommentBody', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/markup-to-dokka-comment-body.html', 'searchKey':'markupToDokkaCommentBody'},
{'name': ' def markupToDokkaCommentBody(body: Body): DokkaCommentBody', 'description':'dotty.dokka.tasty.comments.WikiCommentParser.markupToDokkaCommentBody', 'location':'scala3doc/dotty.dokka/tasty/comments/-wiki-comment-parser/markup-to-dokka-comment-body.html', 'searchKey':'markupToDokkaCommentBody'},
{'name': ' def stringToMarkup(str: String): Document', 'description':'dotty.dokka.tasty.comments.MarkdownCommentParser.stringToMarkup', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-comment-parser/string-to-markup.html', 'searchKey':'stringToMarkup'},
{'name': 'protected def stringToMarkup(str: String): T', 'description':'dotty.dokka.tasty.comments.MarkupConversion.stringToMarkup', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/string-to-markup.html', 'searchKey':'stringToMarkup'},
{'name': ' def stringToMarkup(str: String): Body', 'description':'dotty.dokka.tasty.comments.WikiCommentParser.stringToMarkup', 'location':'scala3doc/dotty.dokka/tasty/comments/-wiki-comment-parser/string-to-markup.html', 'searchKey':'stringToMarkup'},
{'name': ' object SymOps extends SymOps[r.type]', 'description':'dotty.dokka.tasty.comments.MarkdownConverter', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/-sym-ops/index.html', 'searchKey':'MarkdownConverter'},
{'name': ' object MarkdownConverter', 'description':'dotty.dokka.tasty.comments.MarkdownConverter$', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter$/index.html', 'searchKey':'MarkdownConverter$'},
{'name': ' def splitWikiLink(chars: String): (String, String)', 'description':'dotty.dokka.tasty.comments.MarkdownConverter$.splitWikiLink', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter$/split-wiki-link.html', 'searchKey':'splitWikiLink'},
{'name': ' def convertChildren(n: Node): Seq[DocTag]', 'description':'dotty.dokka.tasty.comments.MarkdownConverter.convertChildren', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/convert-children.html', 'searchKey':'convertChildren'},
{'name': ' def convertDocument(doc: Document): DocTag', 'description':'dotty.dokka.tasty.comments.MarkdownConverter.convertDocument', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/convert-document.html', 'searchKey':'convertDocument'},
{'name': ' def emitConvertedNode(n: Node)(x$2: Emitter[DocTag]): Unit', 'description':'dotty.dokka.tasty.comments.MarkdownConverter.emitConvertedNode', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/emit-converted-node.html', 'searchKey':'emitConvertedNode'},
{'name': ' def extractAndConvertSummary(doc: Document): Option[DocTag]', 'description':'dotty.dokka.tasty.comments.MarkdownConverter.extractAndConvertSummary', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/extract-and-convert-summary.html', 'searchKey':'extractAndConvertSummary'},
{'name': ' def resolveLinkQuery(queryStr: String, body: String): DocTag', 'description':'dotty.dokka.tasty.comments.MarkdownConverter.resolveLinkQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-converter/resolve-link-query.html', 'searchKey':'resolveLinkQuery'},
{'name': ' def resolveLinkQuery(queryStr: String, bodyOpt: Option[Inline]): DocTag', 'description':'dotty.dokka.tasty.comments.wiki.Converter.resolveLinkQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/resolve-link-query.html', 'searchKey':'resolveLinkQuery'},
{'name': ' object MarkdownParser', 'description':'dotty.dokka.tasty.comments.MarkdownParser$', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-parser/index.html', 'searchKey':'MarkdownParser$'},
{'name': ' def parseToMarkdown(text: String): Document', 'description':'dotty.dokka.tasty.comments.MarkdownParser$.parseToMarkdown', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-parser/parse-to-markdown.html', 'searchKey':'parseToMarkdown'},
{'name': ' def renderToText(node: Node): String', 'description':'dotty.dokka.tasty.comments.MarkdownParser$.renderToText', 'location':'scala3doc/dotty.dokka/tasty/comments/-markdown-parser/render-to-text.html', 'searchKey':'renderToText'},
{'name': ' trait MarkupConversion[T]', 'description':'dotty.dokka.tasty.comments.MarkupConversion', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/index.html', 'searchKey':'MarkupConversion'},
{'name': 'final def parse(preparsed: PreparsedComment): Comment', 'description':'dotty.dokka.tasty.comments.MarkupConversion.parse', 'location':'scala3doc/dotty.dokka/tasty/comments/-markup-conversion/parse.html', 'searchKey':'parse'},
{'name': ' def parse(str: String): Document', 'description':'dotty.dokka.tasty.comments.dbg$.parse', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/parse.html', 'searchKey':'parse'},
{'name': ' trait MemberLookup', 'description':'dotty.dokka.tasty.comments.MemberLookup', 'location':'scala3doc/dotty.dokka/tasty/comments/-member-lookup/index.html', 'searchKey':'MemberLookup'},
{'name': ' object MemberLookup extends MemberLookup', 'description':'dotty.dokka.tasty.comments.MemberLookup$', 'location':'scala3doc/dotty.dokka/tasty/comments/-member-lookup$/index.html', 'searchKey':'MemberLookup$'},
{'name': ' def lookup(r: Reflection)(query: Query, owner: Symbol): Option[(Symbol, String)]', 'description':'dotty.dokka.tasty.comments.MemberLookup.lookup', 'location':'scala3doc/dotty.dokka/tasty/comments/-member-lookup/lookup.html', 'searchKey':'lookup'},
{'name': ' def lookupOpt(r: Reflection)(query: Query, ownerOpt: Option[Symbol]): Option[(Symbol, String)]', 'description':'dotty.dokka.tasty.comments.MemberLookup.lookupOpt', 'location':'scala3doc/dotty.dokka/tasty/comments/-member-lookup/lookup-opt.html', 'searchKey':'lookupOpt'},
{'name': 'case class PreparsedComment(body: String, authors: List[String], see: List[String], result: List[String], throws: SortedMap[String, String], valueParams: SortedMap[String, String], typeParams: SortedMap[String, String], version: List[String], since: List[String], todo: List[String], deprecated: List[String], note: List[String], example: List[String], constructor: List[String], group: List[String], groupDesc: SortedMap[String, String], groupNames: SortedMap[String, String], groupPrio: SortedMap[String, String], hideImplicitConversions: List[String], shortDescription: List[String], syntax: List[String])', 'description':'dotty.dokka.tasty.comments.PreparsedComment', 'location':'scala3doc/dotty.dokka/tasty/comments/-preparsed-comment/index.html', 'searchKey':'PreparsedComment'},
{'name': ' object Preparser', 'description':'dotty.dokka.tasty.comments.Preparser$', 'location':'scala3doc/dotty.dokka/tasty/comments/-preparser/index.html', 'searchKey':'Preparser$'},
{'name': ' def preparse(comment: List[String]): PreparsedComment', 'description':'dotty.dokka.tasty.comments.Preparser$.preparse', 'location':'scala3doc/dotty.dokka/tasty/comments/-preparser/preparse.html', 'searchKey':'preparse'},
{'name': 'sealed trait Query', 'description':'dotty.dokka.tasty.comments.Query', 'location':'scala3doc/dotty.dokka/tasty/comments/-query/index.html', 'searchKey':'Query'},
{'name': 'case Id(id: String)', 'description':'dotty.dokka.tasty.comments.Query$', 'location':'scala3doc/dotty.dokka/tasty/comments/-query$/-qual/-id/index.html', 'searchKey':'Query$'},
{'name': ' def asString: String', 'description':'dotty.dokka.tasty.comments.Query$.asString', 'location':'scala3doc/dotty.dokka/tasty/comments/-query$/-qual/as-string.html', 'searchKey':'asString'},
{'name': ' def asList: List[String]', 'description':'dotty.dokka.tasty.comments.Query.asList', 'location':'scala3doc/dotty.dokka/tasty/comments/-query/as-list.html', 'searchKey':'asList'},
{'name': ' def join: String', 'description':'dotty.dokka.tasty.comments.Query.join', 'location':'scala3doc/dotty.dokka/tasty/comments/-query/join.html', 'searchKey':'join'},
{'name': ' class QueryParseException(val query: CharSequence, val at: Int, val problem: String) extends Exception', 'description':'dotty.dokka.tasty.comments.QueryParser', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/-query-parse-exception/index.html', 'searchKey':'QueryParser'},
{'name': ' def readIdentifier(): Qual', 'description':'dotty.dokka.tasty.comments.QueryParser.readIdentifier', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/read-identifier.html', 'searchKey':'readIdentifier'},
{'name': ' def readQuery(): Query', 'description':'dotty.dokka.tasty.comments.QueryParser.readQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/read-query.html', 'searchKey':'readQuery'},
{'name': ' def readQuotedIdentifier(): Qual', 'description':'dotty.dokka.tasty.comments.QueryParser.readQuotedIdentifier', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/read-quoted-identifier.html', 'searchKey':'readQuotedIdentifier'},
{'name': ' def readSegmentedQuery(): QuerySegment', 'description':'dotty.dokka.tasty.comments.QueryParser.readSegmentedQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/read-segmented-query.html', 'searchKey':'readSegmentedQuery'},
{'name': ' def readSimpleIdentifier(): Qual', 'description':'dotty.dokka.tasty.comments.QueryParser.readSimpleIdentifier', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/read-simple-identifier.html', 'searchKey':'readSimpleIdentifier'},
{'name': ' def tryReadQuery(): Either[QueryParseException, Query]', 'description':'dotty.dokka.tasty.comments.QueryParser.tryReadQuery', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-parser/try-read-query.html', 'searchKey':'tryReadQuery'},
{'name': 'sealed trait QuerySegment extends Query', 'description':'dotty.dokka.tasty.comments.QuerySegment', 'location':'scala3doc/dotty.dokka/tasty/comments/-query-segment/index.html', 'searchKey':'QuerySegment'},
{'name': ' object Regexes', 'description':'dotty.dokka.tasty.comments.Regexes$', 'location':'scala3doc/dotty.dokka/tasty/comments/-regexes/index.html', 'searchKey':'Regexes$'},
{'name': ' def htmlReplacement(mtch: Match): String', 'description':'dotty.dokka.tasty.comments.Regexes$.htmlReplacement', 'location':'scala3doc/dotty.dokka/tasty/comments/-regexes/html-replacement.html', 'searchKey':'htmlReplacement'},
{'name': ' def javadocReplacement(mtch: Match): String', 'description':'dotty.dokka.tasty.comments.Regexes$.javadocReplacement', 'location':'scala3doc/dotty.dokka/tasty/comments/-regexes/javadoc-replacement.html', 'searchKey':'javadocReplacement'},
{'name': ' class Repr(val r: Reflection)(val sym: Symbol)', 'description':'dotty.dokka.tasty.comments.Repr', 'location':'scala3doc/dotty.dokka/tasty/comments/-repr/index.html', 'searchKey':'Repr'},
{'name': 'case class WikiCommentParser(repr: Repr) extends MarkupConversion[Body]', 'description':'dotty.dokka.tasty.comments.WikiCommentParser', 'location':'scala3doc/dotty.dokka/tasty/comments/-wiki-comment-parser/index.html', 'searchKey':'WikiCommentParser'},
{'name': 'case class See(n: Node, c: Seq[See])', 'description':'dotty.dokka.tasty.comments.dbg$', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/-see/index.html', 'searchKey':'dbg$'},
{'name': ' def parseRaw(str: String): Document', 'description':'dotty.dokka.tasty.comments.dbg$.parseRaw', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/parse-raw.html', 'searchKey':'parseRaw'},
{'name': ' def see(n: Node): See', 'description':'dotty.dokka.tasty.comments.dbg$.see', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/see.html', 'searchKey':'see'},
{'name': ' def show(sb: StringBuilder, indent: Int): Unit', 'description':'dotty.dokka.tasty.comments.dbg$.show', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/-see/show.html', 'searchKey':'show'},
{'name': 'override def toString: String', 'description':'dotty.dokka.tasty.comments.dbg$.toString', 'location':'scala3doc/dotty.dokka/tasty/comments/dbg/-see/to-string.html', 'searchKey':'toString'},
{'name': ' object dkk', 'description':'dotty.dokka.tasty.comments.dkk$', 'location':'scala3doc/dotty.dokka/tasty/comments/dkk/index.html', 'searchKey':'dkk$'},
{'name': ' def pre(params: (String, String)*)(children: DocTag*): Pre', 'description':'dotty.dokka.tasty.comments.dkk$.pre', 'location':'scala3doc/dotty.dokka/tasty/comments/dkk/pre.html', 'searchKey':'pre'},
{'name': ' object kt', 'description':'dotty.dokka.tasty.comments.kt$', 'location':'scala3doc/dotty.dokka/tasty/comments/kt/index.html', 'searchKey':'kt$'},
{'name': ' def emptyList[T]: List[T]', 'description':'dotty.dokka.tasty.comments.kt$.emptyList', 'location':'scala3doc/dotty.dokka/tasty/comments/kt/empty-list.html', 'searchKey':'emptyList'},
{'name': ' def emptyMap[A, B]: Map[A, B]', 'description':'dotty.dokka.tasty.comments.kt$.emptyMap', 'location':'scala3doc/dotty.dokka/tasty/comments/kt/empty-map.html', 'searchKey':'emptyMap'},
{'name': 'sealed abstract class Block', 'description':'dotty.dokka.tasty.comments.wiki.Block', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-block/index.html', 'searchKey':'Block'},
{'name': 'final case class Body(blocks: Seq[Block])', 'description':'dotty.dokka.tasty.comments.wiki.Body', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-body/index.html', 'searchKey':'Body'},
{'name': 'final case class Bold(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Bold', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-bold/index.html', 'searchKey':'Bold'},
{'name': 'final case class Chain(items: Seq[Inline]) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Chain', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-chain/index.html', 'searchKey':'Chain'},
{'name': ' object Chain', 'description':'dotty.dokka.tasty.comments.wiki.Chain$', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-chain$/index.html', 'searchKey':'Chain$'},
{'name': 'sealed class CharReader(buffer: String)', 'description':'dotty.dokka.tasty.comments.wiki.CharReader', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/index.html', 'searchKey':'CharReader'},
{'name': ' def char: Char', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.char', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/char.html', 'searchKey':'char'},
{'name': 'final def check(chars: String): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.check', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/check.html', 'searchKey':'check'},
{'name': ' def countWhitespace: Int', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.countWhitespace', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/count-whitespace.html', 'searchKey':'countWhitespace'},
{'name': ' def isWhitespace(c: Char): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.isWhitespace', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/is-whitespace.html', 'searchKey':'isWhitespace'},
{'name': ' def isWhitespaceOrNewLine(c: Char): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.isWhitespaceOrNewLine', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/is-whitespace-or-new-line.html', 'searchKey':'isWhitespaceOrNewLine'},
{'name': ' def jumpWhitespace(): Int', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.jumpWhitespace', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/jump-whitespace.html', 'searchKey':'jumpWhitespace'},
{'name': ' def jumpWhitespaceOrNewLine(): Int', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.jumpWhitespaceOrNewLine', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/jump-whitespace-or-new-line.html', 'searchKey':'jumpWhitespaceOrNewLine'},
{'name': 'final def nextChar(): Unit', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.nextChar', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/next-char.html', 'searchKey':'nextChar'},
{'name': 'final def repeatJump(c: Char, max: Int): Int', 'description':'dotty.dokka.tasty.comments.wiki.CharReader.repeatJump', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-char-reader/repeat-jump.html', 'searchKey':'repeatJump'},
{'name': 'final case class Code(data: String) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.Code', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-code/index.html', 'searchKey':'Code'},
{'name': ' object SymOps extends SymOps[r.type]', 'description':'dotty.dokka.tasty.comments.wiki.Converter', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/-sym-ops/index.html', 'searchKey':'Converter'},
{'name': ' def convertBlock(block: Block): Seq[DocTag]', 'description':'dotty.dokka.tasty.comments.wiki.Converter.convertBlock', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/convert-block.html', 'searchKey':'convertBlock'},
{'name': ' def convertBody(body: Body): DocTag', 'description':'dotty.dokka.tasty.comments.wiki.Converter.convertBody', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/convert-body.html', 'searchKey':'convertBody'},
{'name': ' def convertInline(inl: Inline): Seq[DocTag]', 'description':'dotty.dokka.tasty.comments.wiki.Converter.convertInline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/convert-inline.html', 'searchKey':'convertInline'},
{'name': ' def convertListItems(items: Seq[Block]): Seq[DocTag]', 'description':'dotty.dokka.tasty.comments.wiki.Converter.convertListItems', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/convert-list-items.html', 'searchKey':'convertListItems'},
{'name': ' def emitBlock(block: Block)(x$2: Emitter[DocTag]): Unit', 'description':'dotty.dokka.tasty.comments.wiki.Converter.emitBlock', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/emit-block.html', 'searchKey':'emitBlock'},
{'name': ' def emitInline(inl: Inline)(x$2: Emitter[DocTag]): Unit', 'description':'dotty.dokka.tasty.comments.wiki.Converter.emitInline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-converter/emit-inline.html', 'searchKey':'emitInline'},
{'name': 'final case class DefinitionList(items: SortedMap[Inline, Block]) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.DefinitionList', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-definition-list/index.html', 'searchKey':'DefinitionList'},
{'name': 'final case class HorizontalRule() extends Block', 'description':'dotty.dokka.tasty.comments.wiki.HorizontalRule', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-horizontal-rule/index.html', 'searchKey':'HorizontalRule'},
{'name': 'final case class HtmlTag(data: String) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.HtmlTag', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-html-tag/index.html', 'searchKey':'HtmlTag'},
{'name': ' def canClose(open: HtmlTag): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.HtmlTag.canClose', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-html-tag/can-close.html', 'searchKey':'canClose'},
{'name': ' def close: Option[HtmlTag]', 'description':'dotty.dokka.tasty.comments.wiki.HtmlTag.close', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-html-tag/close.html', 'searchKey':'close'},
{'name': 'sealed abstract class Inline', 'description':'dotty.dokka.tasty.comments.wiki.Inline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-inline/index.html', 'searchKey':'Inline'},
{'name': ' def isEmpty: Boolean', 'description':'dotty.dokka.tasty.comments.wiki.Inline.isEmpty', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-inline/is-empty.html', 'searchKey':'isEmpty'},
{'name': 'final case class Italic(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Italic', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-italic/index.html', 'searchKey':'Italic'},
{'name': 'sealed trait LinkTo', 'description':'dotty.dokka.tasty.comments.wiki.LinkTo', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-link-to/index.html', 'searchKey':'LinkTo'},
{'name': 'final case class Monospace(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Monospace', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-monospace/index.html', 'searchKey':'Monospace'},
{'name': 'final case class OrderedList(items: Seq[Block], style: String) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.OrderedList', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-ordered-list/index.html', 'searchKey':'OrderedList'},
{'name': 'final case class Paragraph(text: Inline) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.Paragraph', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-paragraph/index.html', 'searchKey':'Paragraph'},
{'name': 'final class Parser(val buffer: String) extends CharReader', 'description':'dotty.dokka.tasty.comments.wiki.Parser', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/index.html', 'searchKey':'Parser'},
{'name': ' def block(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.block', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/block.html', 'searchKey':'block'},
{'name': ' def blockEnded(blockType: String): Unit', 'description':'dotty.dokka.tasty.comments.wiki.Parser.blockEnded', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/block-ended.html', 'searchKey':'blockEnded'},
{'name': ' def bold(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.bold', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/bold.html', 'searchKey':'bold'},
{'name': ' def checkList: Boolean', 'description':'dotty.dokka.tasty.comments.wiki.Parser.checkList', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/check-list.html', 'searchKey':'checkList'},
{'name': ' def checkParaEnded(): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.Parser.checkParaEnded', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/check-para-ended.html', 'searchKey':'checkParaEnded'},
{'name': ' def checkSentenceEnded(): Boolean', 'description':'dotty.dokka.tasty.comments.wiki.Parser.checkSentenceEnded', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/check-sentence-ended.html', 'searchKey':'checkSentenceEnded'},
{'name': ' def code(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.code', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/code.html', 'searchKey':'code'},
{'name': ' def document(): Body', 'description':'dotty.dokka.tasty.comments.wiki.Parser.document', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/document.html', 'searchKey':'document'},
{'name': ' def getInline(isInlineEnd: => Boolean): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.getInline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/get-inline.html', 'searchKey':'getInline'},
{'name': ' def hrule(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.hrule', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/hrule.html', 'searchKey':'hrule'},
{'name': ' def htmlTag(): HtmlTag', 'description':'dotty.dokka.tasty.comments.wiki.Parser.htmlTag', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/html-tag.html', 'searchKey':'htmlTag'},
{'name': ' def italic(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.italic', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/italic.html', 'searchKey':'italic'},
{'name': ' def listBlock(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.listBlock', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/list-block.html', 'searchKey':'listBlock'},
{'name': ' def monospace(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.monospace', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/monospace.html', 'searchKey':'monospace'},
{'name': ' def normalizeIndentation(_code: String): String', 'description':'dotty.dokka.tasty.comments.wiki.Parser.normalizeIndentation', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/normalize-indentation.html', 'searchKey':'normalizeIndentation'},
{'name': ' def para(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.para', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/para.html', 'searchKey':'para'},
{'name': ' def reportError(message: String): Unit', 'description':'dotty.dokka.tasty.comments.wiki.Parser.reportError', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/report-error.html', 'searchKey':'reportError'},
{'name': ' def subscript(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.subscript', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/subscript.html', 'searchKey':'subscript'},
{'name': ' def summary(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.summary', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/summary.html', 'searchKey':'summary'},
{'name': ' def superscript(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.superscript', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/superscript.html', 'searchKey':'superscript'},
{'name': ' def title(): Block', 'description':'dotty.dokka.tasty.comments.wiki.Parser.title', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/title.html', 'searchKey':'title'},
{'name': ' def underline(): Inline', 'description':'dotty.dokka.tasty.comments.wiki.Parser.underline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-parser/underline.html', 'searchKey':'underline'},
{'name': 'abstract class RepresentationLink(val title: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.RepresentationLink', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-representation-link/index.html', 'searchKey':'RepresentationLink'},
{'name': ' object RepresentationLink', 'description':'dotty.dokka.tasty.comments.wiki.RepresentationLink$', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-representation-link$/index.html', 'searchKey':'RepresentationLink$'},
{'name': 'final case class Subscript(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Subscript', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-subscript/index.html', 'searchKey':'Subscript'},
{'name': 'final case class Summary(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Summary', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-summary/index.html', 'searchKey':'Summary'},
{'name': 'final case class Superscript(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Superscript', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-superscript/index.html', 'searchKey':'Superscript'},
{'name': 'final case class Text(text: String) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Text', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-text/index.html', 'searchKey':'Text'},
{'name': 'final case class Title(text: Inline, level: Int) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.Title', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-title/index.html', 'searchKey':'Title'},
{'name': 'final case class Underline(text: Inline) extends Inline', 'description':'dotty.dokka.tasty.comments.wiki.Underline', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-underline/index.html', 'searchKey':'Underline'},
{'name': 'final case class UnorderedList(items: Seq[Block]) extends Block', 'description':'dotty.dokka.tasty.comments.wiki.UnorderedList', 'location':'scala3doc/dotty.dokka/tasty/comments/wiki/-unordered-list/index.html', 'searchKey':'UnorderedList'},
{'name': ' object FilterAttributes', 'description':'dotty.dokka.translators.FilterAttributes$', 'location':'scala3doc/dotty.dokka/translators/-filter-attributes/index.html', 'searchKey':'FilterAttributes$'},
{'name': ' def attributesFor(documentable: Documentable): Map[String, String]', 'description':'dotty.dokka.translators.FilterAttributes$.attributesFor', 'location':'scala3doc/dotty.dokka/translators/-filter-attributes/attributes-for.html', 'searchKey':'attributesFor'},
{'name': ' def defaultValues: Map[String, String]', 'description':'dotty.dokka.translators.FilterAttributes$.defaultValues', 'location':'scala3doc/dotty.dokka/translators/-filter-attributes/default-values.html', 'searchKey':'defaultValues'},
{'name': ' def defaultValue[V]: V', 'description':'dotty.dokka.utils$package$.extension_defaultValue', 'location':'scala3doc/dotty.dokka/extension_default-value.html', 'searchKey':'extension_defaultValue'},
{'name': ' def get[V](key: Key[, V]): V', 'description':'dotty.dokka.utils$package$.extension_get', 'location':'scala3doc/dotty.dokka/extension_get.html', 'searchKey':'extension_get'},
{'name': ' def isRightAssociative(): Boolean', 'description':'dotty.dokka.utils$package$.extension_isRightAssociative', 'location':'scala3doc/dotty.dokka/extension_is-right-associative.html', 'searchKey':'extension_isRightAssociative'},
{'name': ' def put[E <: WithExtraProperties[E]](value: ExtraProperty[ >: E]): E', 'description':'dotty.dokka.utils$package$.extension_put', 'location':'scala3doc/dotty.dokka/extension_put.html', 'searchKey':'extension_put'},
{'name': ' def toDisplay: Set[DisplaySourceSet]', 'description':'dotty.dokka.utils$package$.extension_toDisplay', 'location':'scala3doc/dotty.dokka/extension_to-display.html', 'searchKey':'extension_toDisplay'},
{'name': ' def getContentGroupWithParents(root: ContentGroup, condition: ContentGroup => Boolean): Seq[ContentGroup]', 'description':'dotty.dokka.utils$package$.getContentGroupWithParents', 'location':'scala3doc/dotty.dokka/get-content-group-with-parents.html', 'searchKey':'getContentGroupWithParents'},
{'name': ' def getFromExtra[V](e: WithExtraProperties[], k: Key[, V]): Option[V]', 'description':'dotty.dokka.utils$package$.getFromExtra', 'location':'scala3doc/dotty.dokka/get-from-extra.html', 'searchKey':'getFromExtra'},
{'name': ' def modifyContentGroup(originalContentNodeWithParents: Seq[ContentGroup], modifiedContentNode: ContentGroup): ContentGroup', 'description':'dotty.dokka.utils$package$.modifyContentGroup', 'location':'scala3doc/dotty.dokka/modify-content-group.html', 'searchKey':'modifyContentGroup'},
{'name': 'override def process(args: Array[String], rootCtx: Context): Reporter', 'description':'dotty.tools.dottydoc.Main$.process', 'location':'scala3doc/dotty.tools/dottydoc/-main/process.html', 'searchKey':'process'},
{'name': ' object X', 'description':'example.A', 'location':'scala3doc/example/-a/-x/index.html', 'searchKey':'A'},
{'name': ' class AA', 'description':'tests.A', 'location':'scala3doc/tests/-a/-a-a/index.html', 'searchKey':'A'},
{'name': ' trait A', 'description':'tests.enumSignatures.A', 'location':'scala3doc/tests/enumSignatures/-a/index.html', 'searchKey':'A'},
{'name': 'case class A(cA: String, var cB: Int)', 'description':'tests.fieldsSignatures.A', 'location':'scala3doc/tests/fieldsSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' class A', 'description':'tests.genericSignatures.A', 'location':'scala3doc/tests/genericSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' class Bar()', 'description':'tests.implicitConversions.A', 'location':'scala3doc/tests/implicitConversions/-a/-d/-bar/index.html', 'searchKey':'A'},
{'name': ' class A', 'description':'tests.methodsAndConstructors.A', 'location':'scala3doc/tests/methodsAndConstructors/-a/index.html', 'searchKey':'A'},
{'name': ' class C', 'description':'tests.nested.A', 'location':'scala3doc/tests/nested/-a/-c/index.html', 'searchKey':'A'},
{'name': ' class A[T]', 'description':'tests.objectSignatures.A', 'location':'scala3doc/tests/objectSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' class A', 'description':'tests.packageSymbolSignatures.A', 'location':'scala3doc/tests/packageSymbolSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' class A', 'description':'tests.signatureTestSource.A', 'location':'scala3doc/tests/signatureTestSource/-a/index.html', 'searchKey':'A'},
{'name': ' trait A', 'description':'tests.traitSignatures.A', 'location':'scala3doc/tests/traitSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' class A', 'description':'tests.typesSignatures.A', 'location':'scala3doc/tests/typesSignatures/-a/index.html', 'searchKey':'A'},
{'name': ' def foo: String', 'description':'example.A.extension_foo', 'location':'scala3doc/example/-a/extension_foo.html', 'searchKey':'extension_foo'},
{'name': 'given Unit', 'description':'example.A.given_Unit', 'location':'scala3doc/example/-a/-unit.html', 'searchKey':'given_Unit'},
{'name': ' class C extends A', 'description':'example.C', 'location':'scala3doc/example/-c/index.html', 'searchKey':'C'},
{'name': ' object CC', 'description':'tests.C', 'location':'scala3doc/tests/-c/-c-c$/index.html', 'searchKey':'C'},
{'name': 'abstract case class C(s: String)', 'description':'tests.classModifiers.C', 'location':'scala3doc/tests/classModifiers/-c/index.html', 'searchKey':'C'},
{'name': ' trait C', 'description':'tests.fieldsSignatures.C', 'location':'scala3doc/tests/fieldsSignatures/-c/index.html', 'searchKey':'C'},
{'name': ' class C', 'description':'tests.implicitConversions.C', 'location':'scala3doc/tests/implicitConversions/-c/index.html', 'searchKey':'C'},
{'name': ' class C', 'description':'tests.methodsAndConstructors.C', 'location':'scala3doc/tests/methodsAndConstructors/-c/index.html', 'searchKey':'C'},
{'name': ' trait C', 'description':'tests.objectSignatures.C', 'location':'scala3doc/tests/objectSignatures/-c/index.html', 'searchKey':'C'},
{'name': ' class C', 'description':'tests.signatureTestSource.C', 'location':'scala3doc/tests/signatureTestSource/-c/index.html', 'searchKey':'C'},
{'name': ' trait C(a: Int)', 'description':'tests.traitSignatures.C', 'location':'scala3doc/tests/traitSignatures/-c/index.html', 'searchKey':'C'},
{'name': 'abstract class DocumentationInheritance[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]', 'description':'example.DocumentationInheritance', 'location':'scala3doc/example/-documentation-inheritance/index.html', 'searchKey':'DocumentationInheritance'},
{'name': ' class DocumentationInheritanceMethod', 'description':'example.DocumentationInheritanceMethod', 'location':'scala3doc/example/-documentation-inheritance-method/index.html', 'searchKey':'DocumentationInheritanceMethod'},
{'name': ' def threOtherWay[A <: Nothing, B >: Any](a: A, c: B): Unit', 'description':'example.DocumentationInheritanceMethod.threOtherWay', 'location':'scala3doc/example/-documentation-inheritance-method/thre-other-way.html', 'searchKey':'threOtherWay'},
{'name': ' def wierdMethod[T, A <: Int, B >: String](t: T, a: A): B', 'description':'example.DocumentationInheritanceMethod.wierdMethod', 'location':'scala3doc/example/-documentation-inheritance-method/wierd-method.html', 'searchKey':'wierdMethod'},
{'name': ' object ReturnObjectWithType', 'description':'example.ReturnObjectWithType$', 'location':'scala3doc/example/-return-object-with-type/index.html', 'searchKey':'ReturnObjectWithType$'},
{'name': ' class ReturnTypeClass[T]', 'description':'example.ReturnTypeClass', 'location':'scala3doc/example/-return-type-class/index.html', 'searchKey':'ReturnTypeClass'},
{'name': ' class UserDocLinkingClass', 'description':'example.UserDocLinkingClass', 'location':'scala3doc/example/-user-doc-linking-class/index.html', 'searchKey':'UserDocLinkingClass'},
{'name': ' def linkMeFromUserDoc(): Nothing', 'description':'example.UserDocLinkingClass.linkMeFromUserDoc', 'location':'scala3doc/example/-user-doc-linking-class/link-me-from-user-doc.html', 'searchKey':'linkMeFromUserDoc'},
{'name': 'sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]', 'description':'example.level2.ClassExtendingDocumentation', 'location':'scala3doc/example/level2/-class-extending-documentation/index.html', 'searchKey':'ClassExtendingDocumentation'},
{'name': 'sealed abstract class ClassExtendingDocumentation[T, A <: Int, B >: String, -X, +Y] extends Documentation[T, A, B, X, Y]', 'description':'tests.classSignatureTestSource.ClassExtendingDocumentation', 'location':'scala3doc/tests/classSignatureTestSource/-class-extending-documentation/index.html', 'searchKey':'ClassExtendingDocumentation'},
{'name': ' object testObject', 'description':'example.level2.Documentation', 'location':'scala3doc/example/level2/-documentation/test-object/index.html', 'searchKey':'Documentation'},
{'name': ' object testObject', 'description':'tests.classSignatureTestSource.Documentation', 'location':'scala3doc/tests/classSignatureTestSource/-documentation/test-object/index.html', 'searchKey':'Documentation'},
{'name': ' object Documentation', 'description':'example.level2.Documentation$', 'location':'scala3doc/example/level2/-documentation$/index.html', 'searchKey':'Documentation$'},
{'name': ' object Documentation', 'description':'tests.classSignatureTestSource.Documentation$', 'location':'scala3doc/tests/classSignatureTestSource/-documentation$/index.html', 'searchKey':'Documentation$'},
{'name': ' object Documentation', 'description':'tests.fieldsSignatures.Documentation$', 'location':'scala3doc/tests/fieldsSignatures/-documentation/index.html', 'searchKey':'Documentation$'},
{'name': ' def defInAPackage(abc: String): List[Int]', 'description':'example.level2.Documentation$package$.defInAPackage', 'location':'scala3doc/example/level2/def-in-a-package.html', 'searchKey':'defInAPackage'},
{'name': ' def abstractDefinition: Int', 'description':'example.level2.Documentation.abstractDefinition', 'location':'scala3doc/example/level2/-documentation/abstract-definition.html', 'searchKey':'abstractDefinition'},
{'name': ' def defReturningInnerClass(): innerDocumentationClass', 'description':'example.level2.Documentation.defReturningInnerClass', 'location':'scala3doc/example/level2/-documentation/def-returning-inner-class.html', 'searchKey':'defReturningInnerClass'},
{'name': ' def docWithMd: Nothing', 'description':'example.level2.Documentation.docWithMd', 'location':'scala3doc/example/level2/-documentation/doc-with-md.html', 'searchKey':'docWithMd'},
{'name': ' def functionWithType[U >: String](): U', 'description':'example.level2.Documentation.functionWithType', 'location':'scala3doc/example/level2/-documentation/function-with-type.html', 'searchKey':'functionWithType'},
{'name': ' def iterator: Iterator[T]', 'description':'example.level2.Documentation.iterator', 'location':'scala3doc/example/level2/-documentation/iterator.html', 'searchKey':'iterator'},
{'name': 'override def length: Int', 'description':'example.level2.Documentation.length', 'location':'scala3doc/example/level2/-documentation/length.html', 'searchKey':'length'},
{'name': ' def linkMethodInDoc(): Nothing', 'description':'example.level2.Documentation.linkMethodInDoc', 'location':'scala3doc/example/level2/-documentation/link-method-in-doc.html', 'searchKey':'linkMethodInDoc'},
{'name': ' def linkingGraph(g: Graph): Node', 'description':'example.level2.Documentation.linkingGraph', 'location':'scala3doc/example/level2/-documentation/linking-graph.html', 'searchKey':'linkingGraph'},
{'name': ' def methodsWithCallByName(x: => Int): Nothing', 'description':'example.level2.Documentation.methodsWithCallByName', 'location':'scala3doc/example/level2/-documentation/methods-with-call-by-name.html', 'searchKey':'methodsWithCallByName'},
{'name': ' def methodsWithDefault(x: Int): Nothing', 'description':'example.level2.Documentation.methodsWithDefault', 'location':'scala3doc/example/level2/-documentation/methods-with-default.html', 'searchKey':'methodsWithDefault'},
{'name': ' def methodsWithImplicit(x: Int)(imp: Int, notImp: String): Nothing', 'description':'example.level2.Documentation.methodsWithImplicit', 'location':'scala3doc/example/level2/-documentation/methods-with-implicit.html', 'searchKey':'methodsWithImplicit'},
{'name': ' def methodsWithParams(x: T, y: Int): List[Map[Int, T]]', 'description':'example.level2.Documentation.methodsWithParams', 'location':'scala3doc/example/level2/-documentation/methods-with-params.html', 'searchKey':'methodsWithParams'},
{'name': ' def useOfOutsideType(): ReturnTypeClass[T]', 'description':'example.level2.Documentation.useOfOutsideType', 'location':'scala3doc/example/level2/-documentation/use-of-outside-type.html', 'searchKey':'useOfOutsideType'},
{'name': ' def useOfOutsideTypeInsideObject(): returnType', 'description':'example.level2.Documentation.useOfOutsideTypeInsideObject', 'location':'scala3doc/example/level2/-documentation/use-of-outside-type-inside-object.html', 'searchKey':'useOfOutsideTypeInsideObject'},
{'name': ' def useOfSameLevelOutsideType(): SameLevelTypeLinking', 'description':'example.level2.Documentation.useOfSameLevelOutsideType', 'location':'scala3doc/example/level2/-documentation/use-of-same-level-outside-type.html', 'searchKey':'useOfSameLevelOutsideType'},
{'name': ' class SameLevelTypeLinking', 'description':'example.level2.SameLevelTypeLinking', 'location':'scala3doc/example/level2/-same-level-type-linking/index.html', 'searchKey':'SameLevelTypeLinking'},
{'name': ' trait TraitTest', 'description':'example.level2.TraitTest', 'location':'scala3doc/example/level2/-trait-test/index.html', 'searchKey':'TraitTest'},
{'name': ' trait TraitTest', 'description':'tests.classSignatureTestSource.TraitTest', 'location':'scala3doc/tests/classSignatureTestSource/-trait-test/index.html', 'searchKey':'TraitTest'},
{'name': ' trait TraitWithCompanion', 'description':'example.level2.TraitWithCompanion', 'location':'scala3doc/example/level2/-trait-with-companion/index.html', 'searchKey':'TraitWithCompanion'},
{'name': ' trait TraitWithCompanion', 'description':'tests.classSignatureTestSource.TraitWithCompanion', 'location':'scala3doc/tests/classSignatureTestSource/-trait-with-companion/index.html', 'searchKey':'TraitWithCompanion'},
{'name': ' object TraitWithCompanion', 'description':'example.level2.TraitWithCompanion$', 'location':'scala3doc/example/level2/-trait-with-companion$/index.html', 'searchKey':'TraitWithCompanion$'},
{'name': ' object TraitWithCompanion', 'description':'tests.classSignatureTestSource.TraitWithCompanion$', 'location':'scala3doc/tests/classSignatureTestSource/-trait-with-companion$/index.html', 'searchKey':'TraitWithCompanion$'},
{'name': 'sealed abstract class ClassLevel4[T, A <: Int, B >: String, -X, +Y]() extends Documentation[T, A, B, X, Y]', 'description':'example.level2.level3.level4.ClassLevel4', 'location':'scala3doc/example/level2/level3.level4/-class-level4/index.html', 'searchKey':'ClassLevel4'},
{'name': ' def linkingToDocMethodInUserDoc: Nothing', 'description':'example.level2.level3.level4.ClassLevel4.linkingToDocMethodInUserDoc', 'location':'scala3doc/example/level2/level3.level4/-class-level4/linking-to-doc-method-in-user-doc.html', 'searchKey':'linkingToDocMethodInUserDoc'},
{'name': ' object A', 'description':'tests.A$', 'location':'scala3doc/tests/-a$/index.html', 'searchKey':'A$'},
{'name': ' object A', 'description':'tests.objectSignatures.A$', 'location':'scala3doc/tests/objectSignatures/-a$/index.html', 'searchKey':'A$'},
{'name': ' def method(s: String): String', 'description':'tests.A.method', 'location':'scala3doc/tests/-a/method.html', 'searchKey':'method'},
{'name': ' class BB', 'description':'tests.B', 'location':'scala3doc/tests/-b/-b-b/index.html', 'searchKey':'B'},
{'name': 'sealed abstract class B', 'description':'tests.classModifiers.B', 'location':'scala3doc/tests/classModifiers/-b/index.html', 'searchKey':'B'},
{'name': ' class B', 'description':'tests.implicitConversions.B', 'location':'scala3doc/tests/implicitConversions/-b/index.html', 'searchKey':'B'},
{'name': ' class B extends A', 'description':'tests.methodsAndConstructors.B', 'location':'scala3doc/tests/methodsAndConstructors/-b/index.html', 'searchKey':'B'},
{'name': ' class B extends A', 'description':'tests.signatureTestSource.B', 'location':'scala3doc/tests/signatureTestSource/-b/index.html', 'searchKey':'B'},
{'name': ' trait B extends A', 'description':'tests.traitSignatures.B', 'location':'scala3doc/tests/traitSignatures/-b/index.html', 'searchKey':'B'},
{'name': ' object B', 'description':'tests.B$', 'location':'scala3doc/tests/-b$/index.html', 'searchKey':'B$'},
{'name': ' def otherMethod(s: String): String', 'description':'tests.B.otherMethod', 'location':'scala3doc/tests/-b/other-method.html', 'searchKey':'otherMethod'},
{'name': ' class Constructors(a: String)', 'description':'tests.Constructors', 'location':'scala3doc/tests/-constructors/index.html', 'searchKey':'Constructors'},
{'name': ' class Constructors(a: String)', 'description':'tests.methodsAndConstructors.Constructors', 'location':'scala3doc/tests/methodsAndConstructors/-constructors/index.html', 'searchKey':'Constructors'},
{'name': ' class D[T]', 'description':'tests.D', 'location':'scala3doc/tests/-d/index.html', 'searchKey':'D'},
{'name': 'sealed case class D(c: String)', 'description':'tests.classModifiers.D', 'location':'scala3doc/tests/classModifiers/-d/index.html', 'searchKey':'D'},
{'name': 'abstract class D extends C', 'description':'tests.fieldsSignatures.D', 'location':'scala3doc/tests/fieldsSignatures/-d/index.html', 'searchKey':'D'},
{'name': ' class D[T]', 'description':'tests.genericSignatures.D', 'location':'scala3doc/tests/genericSignatures/-d/index.html', 'searchKey':'D'},
{'name': ' class D[T]', 'description':'tests.methodsAndConstructors.D', 'location':'scala3doc/tests/methodsAndConstructors/-d/index.html', 'searchKey':'D'},
{'name': ' class D[T]', 'description':'tests.signatureTestSource.D', 'location':'scala3doc/tests/signatureTestSource/-d/index.html', 'searchKey':'D'},
{'name': ' trait D(b: Double) extends C with A', 'description':'tests.traitSignatures.D', 'location':'scala3doc/tests/traitSignatures/-d/index.html', 'searchKey':'D'},
{'name': ' class E[T] extends D[T]', 'description':'tests.E', 'location':'scala3doc/tests/-e/index.html', 'searchKey':'E'},
{'name': 'final case class E(c: String)', 'description':'tests.classModifiers.E', 'location':'scala3doc/tests/classModifiers/-e/index.html', 'searchKey':'E'},
{'name': ' class E[T] extends D[T]', 'description':'tests.genericSignatures.E', 'location':'scala3doc/tests/genericSignatures/-e/index.html', 'searchKey':'E'},
{'name': ' class E[T] extends D[T]', 'description':'tests.methodsAndConstructors.E', 'location':'scala3doc/tests/methodsAndConstructors/-e/index.html', 'searchKey':'E'},
{'name': ' class E[T] extends D[T]', 'description':'tests.signatureTestSource.E', 'location':'scala3doc/tests/signatureTestSource/-e/index.html', 'searchKey':'E'},
{'name': 'protected object ProtectedObject', 'description':'tests.FilterTest', 'location':'scala3doc/tests/-filter-test/-protected-object/index.html', 'searchKey':'FilterTest'},
{'name': ' def extensionMethod(name: FilterTest): FilterTest', 'description':'tests.FilterTest$package$.extension_extensionMethod', 'location':'scala3doc/tests/extension_extension-method.html', 'searchKey':'extension_extensionMethod'},
{'name': ' def extensionMethodBase(name: FilterTest): FilterTest', 'description':'tests.FilterTest$package$.extension_extensionMethodBase', 'location':'scala3doc/tests/extension_extension-method-base.html', 'searchKey':'extension_extensionMethodBase'},
{'name': 'given List_String', 'description':'tests.FilterTest.given_List_String', 'location':'scala3doc/tests/-filter-test/-list_-string.html', 'searchKey':'given_List_String'},
{'name': 'given Seq_String', 'description':'tests.FilterTest.given_Seq_String', 'location':'scala3doc/tests/-filter-test/-seq_-string.html', 'searchKey':'given_Seq_String'},
{'name': 'given namedList', 'description':'tests.FilterTest.namedList', 'location':'scala3doc/tests/-filter-test/named-list.html', 'searchKey':'namedList'},
{'name': 'given namedSeq', 'description':'tests.FilterTest.namedSeq', 'location':'scala3doc/tests/-filter-test/named-seq.html', 'searchKey':'namedSeq'},
{'name': 'protected def protectetDef(a: B): String', 'description':'tests.FilterTest.protectetDef', 'location':'scala3doc/tests/-filter-test/protectet-def.html', 'searchKey':'protectetDef'},
{'name': ' def publicDef(a: D): FilterTest', 'description':'tests.FilterTest.publicDef', 'location':'scala3doc/tests/-filter-test/public-def.html', 'searchKey':'publicDef'},
{'name': 'protected object ProtectedObjectInherited', 'description':'tests.FilterTestBase', 'location':'scala3doc/tests/-filter-test-base/-protected-object-inherited/index.html', 'searchKey':'FilterTestBase'},
{'name': 'given Map_String_Double', 'description':'tests.FilterTestBase.given_Map_String_Double', 'location':'scala3doc/tests/-filter-test-base/-map_-string_-double.html', 'searchKey':'given_Map_String_Double'},
{'name': 'given Set_String', 'description':'tests.FilterTestBase.given_Set_String', 'location':'scala3doc/tests/-filter-test-base/-set_-string.html', 'searchKey':'given_Set_String'},
{'name': 'given namedMap', 'description':'tests.FilterTestBase.namedMap', 'location':'scala3doc/tests/-filter-test-base/named-map.html', 'searchKey':'namedMap'},
{'name': 'given namedSet', 'description':'tests.FilterTestBase.namedSet', 'location':'scala3doc/tests/-filter-test-base/named-set.html', 'searchKey':'namedSet'},
{'name': 'protected def protectetDefInherited(a: Int): String', 'description':'tests.FilterTestBase.protectetDefInherited', 'location':'scala3doc/tests/-filter-test-base/protectet-def-inherited.html', 'searchKey':'protectetDefInherited'},
{'name': ' def publicDefInherited(a: Int): String', 'description':'tests.FilterTestBase.publicDefInherited', 'location':'scala3doc/tests/-filter-test-base/public-def-inherited.html', 'searchKey':'publicDefInherited'},
{'name': ' object PublicObjectInheritedTrait', 'description':'tests.FilterTestBaseTrait', 'location':'scala3doc/tests/-filter-test-base-trait/-public-object-inherited-trait/index.html', 'searchKey':'FilterTestBaseTrait'},
{'name': 'protected def protectetDefInheriteTrait(a: Int): String', 'description':'tests.FilterTestBaseTrait.protectetDefInheriteTrait', 'location':'scala3doc/tests/-filter-test-base-trait/protectet-def-inherite-trait.html', 'searchKey':'protectetDefInheriteTrait'},
{'name': ' def publicDefInheritedTrait(a: Int): String', 'description':'tests.FilterTestBaseTrait.publicDefInheritedTrait', 'location':'scala3doc/tests/-filter-test-base-trait/public-def-inherited-trait.html', 'searchKey':'publicDefInheritedTrait'},
{'name': ' class MdLists', 'description':'tests.MdLists', 'location':'scala3doc/tests/-md-lists/index.html', 'searchKey':'MdLists'},
{'name': ' class MdTables', 'description':'tests.MdTables', 'location':'scala3doc/tests/-md-tables/index.html', 'searchKey':'MdTables'},
{'name': ' class Methods', 'description':'tests.Methods', 'location':'scala3doc/tests/-methods/index.html', 'searchKey':'Methods'},
{'name': ' class Methods', 'description':'tests.methodsAndConstructors.Methods', 'location':'scala3doc/tests/methodsAndConstructors/-methods/index.html', 'searchKey':'Methods'},
{'name': 'abstract class Methods()', 'description':'tests.modifiersSignatureTestSource.Methods', 'location':'scala3doc/tests/modifiersSignatureTestSource/-methods/index.html', 'searchKey':'Methods'},
{'name': ' def arrays(a: Array[String], b: Array[Int]): Array[Double]', 'description':'tests.Methods.arrays', 'location':'scala3doc/tests/-methods/arrays.html', 'searchKey':'arrays'},
{'name': ' def arrays(a: Array[String], b: Array[Int]): Array[Double]', 'description':'tests.methodsAndConstructors.Methods.arrays', 'location':'scala3doc/tests/methodsAndConstructors/-methods/arrays.html', 'searchKey':'arrays'},
{'name': ' def arrays(a: Array[String], b: Array[Int]): Array[Double]', 'description':'tests.signatureTestSource.SignatureTestClass.arrays', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/arrays.html', 'searchKey':'arrays'},
{'name': ' def generic[T](a: D[T]): D[T]', 'description':'tests.Methods.generic', 'location':'scala3doc/tests/-methods/generic.html', 'searchKey':'generic'},
{'name': ' def generic[T](a: D[T]): D[T]', 'description':'tests.methodsAndConstructors.Methods.generic', 'location':'scala3doc/tests/methodsAndConstructors/-methods/generic.html', 'searchKey':'generic'},
{'name': ' def generic[T](a: D[T]): D[T]', 'description':'tests.signatureTestSource.SignatureTestClass.generic', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/generic.html', 'searchKey':'generic'},
{'name': ' def generic2[T, V](a: D[T], b: E[V]): D[T]', 'description':'tests.Methods.generic2', 'location':'scala3doc/tests/-methods/generic2.html', 'searchKey':'generic2'},
{'name': ' def generic2[T, V](a: D[T], b: E[V]): D[T]', 'description':'tests.methodsAndConstructors.Methods.generic2', 'location':'scala3doc/tests/methodsAndConstructors/-methods/generic2.html', 'searchKey':'generic2'},
{'name': ' def generic2[T, V](a: D[T], b: E[V]): D[T]', 'description':'tests.signatureTestSource.SignatureTestClass.generic2', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/generic2.html', 'searchKey':'generic2'},
{'name': ' def multipleList(a: A)(b: B): C', 'description':'tests.Methods.multipleList', 'location':'scala3doc/tests/-methods/multiple-list.html', 'searchKey':'multipleList'},
{'name': ' def multipleList(a: A)(b: B): C', 'description':'tests.methodsAndConstructors.Methods.multipleList', 'location':'scala3doc/tests/methodsAndConstructors/-methods/multiple-list.html', 'searchKey':'multipleList'},
{'name': ' def multipleList(a: A)(b: B): C', 'description':'tests.signatureTestSource.SignatureTestClass.multipleList', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/multiple-list.html', 'searchKey':'multipleList'},
{'name': ' def multipleParams(a: A, b: B): C', 'description':'tests.Methods.multipleParams', 'location':'scala3doc/tests/-methods/multiple-params.html', 'searchKey':'multipleParams'},
{'name': ' def multipleParams(a: A, b: B): C', 'description':'tests.methodsAndConstructors.Methods.multipleParams', 'location':'scala3doc/tests/methodsAndConstructors/-methods/multiple-params.html', 'searchKey':'multipleParams'},
{'name': ' def multipleParams(a: A, b: B): C', 'description':'tests.signatureTestSource.SignatureTestClass.multipleParams', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/multiple-params.html', 'searchKey':'multipleParams'},
{'name': ' def nobraces: A', 'description':'tests.Methods.nobraces', 'location':'scala3doc/tests/-methods/nobraces.html', 'searchKey':'nobraces'},
{'name': ' def nobraces: A', 'description':'tests.methodsAndConstructors.Methods.nobraces', 'location':'scala3doc/tests/methodsAndConstructors/-methods/nobraces.html', 'searchKey':'nobraces'},
{'name': ' def oneParam(a: A): B', 'description':'tests.Methods.oneParam', 'location':'scala3doc/tests/-methods/one-param.html', 'searchKey':'oneParam'},
{'name': ' def oneParam(a: A): B', 'description':'tests.methodsAndConstructors.Methods.oneParam', 'location':'scala3doc/tests/methodsAndConstructors/-methods/one-param.html', 'searchKey':'oneParam'},
{'name': ' def oneParam(a: A): B', 'description':'tests.signatureTestSource.SignatureTestClass.oneParam', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/one-param.html', 'searchKey':'oneParam'},
{'name': ' def primitives(a: Int, b: Double, c: Short): Byte', 'description':'tests.Methods.primitives', 'location':'scala3doc/tests/-methods/primitives.html', 'searchKey':'primitives'},
{'name': ' def primitives(a: Int, b: Double, c: Short): Byte', 'description':'tests.methodsAndConstructors.Methods.primitives', 'location':'scala3doc/tests/methodsAndConstructors/-methods/primitives.html', 'searchKey':'primitives'},
{'name': ' def primitives(a: Int, b: Double, c: Short): Byte', 'description':'tests.signatureTestSource.SignatureTestClass.primitives', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/primitives.html', 'searchKey':'primitives'},
{'name': ' def simple(): B', 'description':'tests.Methods.simple', 'location':'scala3doc/tests/-methods/simple.html', 'searchKey':'simple'},
{'name': ' def simple(): B', 'description':'tests.methodsAndConstructors.Methods.simple', 'location':'scala3doc/tests/methodsAndConstructors/-methods/simple.html', 'searchKey':'simple'},
{'name': ' def simple(): B', 'description':'tests.signatureTestSource.SignatureTestClass.simple', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/simple.html', 'searchKey':'simple'},
{'name': ' def strings(a: String): String', 'description':'tests.Methods.strings', 'location':'scala3doc/tests/-methods/strings.html', 'searchKey':'strings'},
{'name': ' def strings(a: String): String', 'description':'tests.methodsAndConstructors.Methods.strings', 'location':'scala3doc/tests/methodsAndConstructors/-methods/strings.html', 'searchKey':'strings'},
{'name': ' def strings(a: String): String', 'description':'tests.signatureTestSource.SignatureTestClass.strings', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/strings.html', 'searchKey':'strings'},
{'name': ' def vararg(a: A*): C', 'description':'tests.Methods.vararg', 'location':'scala3doc/tests/-methods/vararg.html', 'searchKey':'vararg'},
{'name': ' def vararg(a: A*): C', 'description':'tests.methodsAndConstructors.Methods.vararg', 'location':'scala3doc/tests/methodsAndConstructors/-methods/vararg.html', 'searchKey':'vararg'},
{'name': ' def vararg(a: A*): C', 'description':'tests.signatureTestSource.SignatureTestClass.vararg', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/vararg.html', 'searchKey':'vararg'},
{'name': ' class WikiLists', 'description':'tests.WikiLists', 'location':'scala3doc/tests/-wiki-lists/index.html', 'searchKey':'WikiLists'},
{'name': '@AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\') @MyAnnotation  class AnnotatedClass', 'description':'tests.annotations.AnnotatedClass', 'location':'scala3doc/tests/annotations/-annotated-class/index.html', 'searchKey':'AnnotatedClass'},
{'name': '@MyAnnotation @AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\') @EnumAnnotation(Enum.A)  class AnnotatedClass', 'description':'tests.annotationsExample.AnnotatedClass', 'location':'scala3doc/tests/annotationsExample/-annotated-class/index.html', 'searchKey':'AnnotatedClass'},
{'name': ' class AnnotatedMethods', 'description':'tests.annotations.AnnotatedMethods', 'location':'scala3doc/tests/annotations/-annotated-methods/index.html', 'searchKey':'AnnotatedMethods'},
{'name': ' class AnnotatedMethods', 'description':'tests.annotationsExample.AnnotatedMethods', 'location':'scala3doc/tests/annotationsExample/-annotated-methods/index.html', 'searchKey':'AnnotatedMethods'},
{'name': '@MyAnnotation @AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\')  def a: String', 'description':'tests.annotations.AnnotatedMethods.a', 'location':'scala3doc/tests/annotations/-annotated-methods/a.html', 'searchKey':'a'},
{'name': '@MyAnnotation @AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\')  def a: String', 'description':'tests.annotationsExample.AnnotatedMethods.a', 'location':'scala3doc/tests/annotationsExample/-annotated-methods/a.html', 'searchKey':'a'},
{'name': ' class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\') val b: Int)', 'description':'tests.annotations.AnnotatedParams', 'location':'scala3doc/tests/annotations/-annotated-params/index.html', 'searchKey':'AnnotatedParams'},
{'name': ' class AnnotatedParams(@MyAnnotation val a: String, @AnnotationWithMultiArg(2, "cda", \'a\', \'b\', \'c\') val b: Int)', 'description':'tests.annotationsExample.AnnotatedParams', 'location':'scala3doc/tests/annotationsExample/-annotated-params/index.html', 'searchKey':'AnnotatedParams'},
{'name': ' class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation', 'description':'tests.annotations.AnnotationWithArg', 'location':'scala3doc/tests/annotations/-annotation-with-arg/index.html', 'searchKey':'AnnotationWithArg'},
{'name': ' class AnnotationWithArg(val s: String, val o: SomeObject) extends StaticAnnotation', 'description':'tests.annotationsExample.AnnotationWithArg', 'location':'scala3doc/tests/annotationsExample/-annotation-with-arg/index.html', 'searchKey':'AnnotationWithArg'},
{'name': ' class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation', 'description':'tests.annotations.AnnotationWithMultiArg', 'location':'scala3doc/tests/annotations/-annotation-with-multi-arg/index.html', 'searchKey':'AnnotationWithMultiArg'},
{'name': ' class AnnotationWithMultiArg(val i: Int, val s: String, val c: Char*) extends StaticAnnotation', 'description':'tests.annotationsExample.AnnotationWithMultiArg', 'location':'scala3doc/tests/annotationsExample/-annotation-with-multi-arg/index.html', 'searchKey':'AnnotationWithMultiArg'},
{'name': ' class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation', 'description':'tests.annotations.ClassAnnotation', 'location':'scala3doc/tests/annotations/-class-annotation/index.html', 'searchKey':'ClassAnnotation'},
{'name': ' class ClassAnnotation[T](val c: Class[T]) extends StaticAnnotation', 'description':'tests.annotationsExample.ClassAnnotation', 'location':'scala3doc/tests/annotationsExample/-class-annotation/index.html', 'searchKey':'ClassAnnotation'},
{'name': ' class EnumAnnotation(val e: Enum) extends StaticAnnotation', 'description':'tests.annotations.EnumAnnotation', 'location':'scala3doc/tests/annotations/-enum-annotation/index.html', 'searchKey':'EnumAnnotation'},
{'name': ' class EnumAnnotation(val e: Enum) extends StaticAnnotation', 'description':'tests.annotationsExample.EnumAnnotation', 'location':'scala3doc/tests/annotationsExample/-enum-annotation/index.html', 'searchKey':'EnumAnnotation'},
{'name': ' class MyAnnotation extends StaticAnnotation', 'description':'tests.annotations.MyAnnotation', 'location':'scala3doc/tests/annotations/-my-annotation/index.html', 'searchKey':'MyAnnotation'},
{'name': ' class MyAnnotation extends StaticAnnotation', 'description':'tests.annotationsExample.MyAnnotation', 'location':'scala3doc/tests/annotationsExample/-my-annotation/index.html', 'searchKey':'MyAnnotation'},
{'name': ' class SomeObject(val s: String)', 'description':'tests.annotations.SomeObject', 'location':'scala3doc/tests/annotations/-some-object/index.html', 'searchKey':'SomeObject'},
{'name': ' class SomeObject(val s: String)', 'description':'tests.annotationsExample.SomeObject', 'location':'scala3doc/tests/annotationsExample/-some-object/index.html', 'searchKey':'SomeObject'},
{'name': ' enum Enum', 'description':'tests.annotationsExample.Enum', 'location':'scala3doc/tests/annotationsExample/-enum/index.html', 'searchKey':'Enum'},
{'name': 'open class F', 'description':'tests.classModifiers.F', 'location':'scala3doc/tests/classModifiers/-f/index.html', 'searchKey':'F'},
{'name': ' class F[+T, -F] extends DD[T]', 'description':'tests.genericSignatures.F', 'location':'scala3doc/tests/genericSignatures/-f/index.html', 'searchKey':'F'},
{'name': 'case class ManyModifiers(x: Int, var y: Double, z: String)', 'description':'tests.classSignatureTestSource.ManyModifiers', 'location':'scala3doc/tests/classSignatureTestSource/-many-modifiers/index.html', 'searchKey':'ManyModifiers'},
{'name': ' class ManyModifiers2(val x: Int, var y: Double, z: String)', 'description':'tests.classSignatureTestSource.ManyModifiers2', 'location':'scala3doc/tests/classSignatureTestSource/-many-modifiers2/index.html', 'searchKey':'ManyModifiers2'},
{'name': 'case class CaseClass(parameterOfClassConstructor: String)', 'description':'tests.companionObjectSignatures.CaseClass', 'location':'scala3doc/tests/companionObjectSignatures/-case-class/index.html', 'searchKey':'CaseClass'},
{'name': 'case object CaseClass', 'description':'tests.companionObjectSignatures.CaseClass$', 'location':'scala3doc/tests/companionObjectSignatures/-case-class$/index.html', 'searchKey':'CaseClass$'},
{'name': ' def methodInCompanion1(): String', 'description':'tests.companionObjectSignatures.CaseClass$.methodInCompanion1', 'location':'scala3doc/tests/companionObjectSignatures/-case-class$/method-in-companion1.html', 'searchKey':'methodInCompanion1'},
{'name': ' def methodInCompanion2(): CaseClass', 'description':'tests.companionObjectSignatures.CaseClass$.methodInCompanion2', 'location':'scala3doc/tests/companionObjectSignatures/-case-class$/method-in-companion2.html', 'searchKey':'methodInCompanion2'},
{'name': ' def methodInClass1(): String', 'description':'tests.companionObjectSignatures.CaseClass.methodInClass1', 'location':'scala3doc/tests/companionObjectSignatures/-case-class/method-in-class1.html', 'searchKey':'methodInClass1'},
{'name': ' def methodInClass2(): CaseClass', 'description':'tests.companionObjectSignatures.CaseClass.methodInClass2', 'location':'scala3doc/tests/companionObjectSignatures/-case-class/method-in-class2.html', 'searchKey':'methodInClass2'},
{'name': ' class StandardClass', 'description':'tests.companionObjectSignatures.StandardClass', 'location':'scala3doc/tests/companionObjectSignatures/-standard-class/index.html', 'searchKey':'StandardClass'},
{'name': ' object StandardClass', 'description':'tests.companionObjectSignatures.StandardClass$', 'location':'scala3doc/tests/companionObjectSignatures/-standard-class$/index.html', 'searchKey':'StandardClass$'},
{'name': ' class StandardClassWithCaseCompanion', 'description':'tests.companionObjectSignatures.StandardClassWithCaseCompanion', 'location':'scala3doc/tests/companionObjectSignatures/-standard-class-with-case-companion/index.html', 'searchKey':'StandardClassWithCaseCompanion'},
{'name': 'case object StandardClassWithCaseCompanion', 'description':'tests.companionObjectSignatures.StandardClassWithCaseCompanion$', 'location':'scala3doc/tests/companionObjectSignatures/-standard-class-with-case-companion$/index.html', 'searchKey':'StandardClassWithCaseCompanion$'},
{'name': 'case class WithoutExplicitCompanion(parameter: Int)', 'description':'tests.companionObjectSignatures.WithoutExplicitCompanion', 'location':'scala3doc/tests/companionObjectSignatures/-without-explicit-companion/index.html', 'searchKey':'WithoutExplicitCompanion'},
{'name': ' enum Enum1', 'description':'tests.enumSignatures.Enum1', 'location':'scala3doc/tests/enumSignatures/-enum1/index.html', 'searchKey':'Enum1'},
{'name': ' enum Enum2(val i: Int)', 'description':'tests.enumSignatures.Enum2', 'location':'scala3doc/tests/enumSignatures/-enum2/index.html', 'searchKey':'Enum2'},
{'name': 'case B(t: String) extends Enum2', 'description':'tests.enumSignatures.Enum2$', 'location':'scala3doc/tests/enumSignatures/-enum2/-b/index.html', 'searchKey':'Enum2$'},
{'name': ' enum Enum3(val param: Int)', 'description':'tests.enumSignatures.Enum3', 'location':'scala3doc/tests/enumSignatures/-enum3/index.html', 'searchKey':'Enum3'},
{'name': ' enum Enum4[+T]', 'description':'tests.enumSignatures.Enum4', 'location':'scala3doc/tests/enumSignatures/-enum4/index.html', 'searchKey':'Enum4'},
{'name': 'case G[T](s: String)', 'description':'tests.enumSignatures.Enum4$', 'location':'scala3doc/tests/enumSignatures/-enum4/-g/index.html', 'searchKey':'Enum4$'},
{'name': ' class ClassOne', 'description':'tests.extensionMethodSignatures.ClassOne', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/index.html', 'searchKey':'ClassOne'},
{'name': ' def getB(): String', 'description':'tests.extensionMethodSignatures.ClassOne.extension_getB', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_get-b.html', 'searchKey':'extension_getB'},
{'name': ' def getGivenParams(a: Int, b: Int, d: Int)(e: String): Int', 'description':'tests.extensionMethodSignatures.ClassOne.extension_getGivenParams', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_get-given-params.html', 'searchKey':'extension_getGivenParams'},
{'name': ' def getInt(): Int', 'description':'tests.extensionMethodSignatures.ClassOne.extension_getInt', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_get-int.html', 'searchKey':'extension_getInt'},
{'name': ' def getString(a: String): String', 'description':'tests.extensionMethodSignatures.ClassOne.extension_getString', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_get-string.html', 'searchKey':'extension_getString'},
{'name': ' def otherMethod(a: Int): Int', 'description':'tests.extensionMethodSignatures.ClassOne.extension_otherMethod', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_other-method.html', 'searchKey':'extension_otherMethod'},
{'name': ' def secondGroup(): String', 'description':'tests.extensionMethodSignatures.ClassOne.extension_secondGroup', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_second-group.html', 'searchKey':'extension_secondGroup'},
{'name': ' def someMethod(): String', 'description':'tests.extensionMethodSignatures.ClassOne.extension_someMethod', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_some-method.html', 'searchKey':'extension_someMethod'},
{'name': ' def |||:(a: Int, b: Int, d: Int)(e: String): Int', 'description':'tests.extensionMethodSignatures.ClassOne.extension_|||:', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one/extension_|||:.html', 'searchKey':'extension_|||:'},
{'name': ' class ClassOneTwo extends ClassOne', 'description':'tests.extensionMethodSignatures.ClassOneTwo', 'location':'scala3doc/tests/extensionMethodSignatures/-class-one-two/index.html', 'searchKey':'ClassOneTwo'},
{'name': 'case class ClassTwo(a: String, b: String)', 'description':'tests.extensionMethodSignatures.ClassTwo', 'location':'scala3doc/tests/extensionMethodSignatures/-class-two/index.html', 'searchKey':'ClassTwo'},
{'name': ' trait C2', 'description':'tests.fieldsSignatures.C2', 'location':'scala3doc/tests/fieldsSignatures/-c2/index.html', 'searchKey':'C2'},
{'name': ' def d: Int', 'description':'tests.fieldsSignatures.C2.d', 'location':'scala3doc/tests/fieldsSignatures/-c2/d.html', 'searchKey':'d'},
{'name': 'abstract class D2 extends C', 'description':'tests.fieldsSignatures.D2', 'location':'scala3doc/tests/fieldsSignatures/-d2/index.html', 'searchKey':'D2'},
{'name': ' class D2[T]()', 'description':'tests.genericSignatures.D2', 'location':'scala3doc/tests/genericSignatures/-d2/index.html', 'searchKey':'D2'},
{'name': ' class Types', 'description':'tests.genericMethods.Types', 'location':'scala3doc/tests/genericMethods/-types/index.html', 'searchKey':'Types'},
{'name': ' def andTypes(base: Int & String, nested: List[Int & Double] & Seq[String]): Unit', 'description':'tests.genericMethods.Types.andTypes', 'location':'scala3doc/tests/genericMethods/-types/and-types.html', 'searchKey':'andTypes'},
{'name': ' def byName(a: => Int, b: => String | Int): Unit', 'description':'tests.genericMethods.Types.byName', 'location':'scala3doc/tests/genericMethods/-types/by-name.html', 'searchKey':'byName'},
{'name': ' def literal(i: 1, d: 3.3, c: \'c\'): 34', 'description':'tests.genericMethods.Types.literal', 'location':'scala3doc/tests/genericMethods/-types/literal.html', 'searchKey':'literal'},
{'name': ' def mixedAndAndOr(base: Int & String, nested: List[Int | Double] & Seq[String]): Unit', 'description':'tests.genericMethods.Types.mixedAndAndOr', 'location':'scala3doc/tests/genericMethods/-types/mixed-and-and-or.html', 'searchKey':'mixedAndAndOr'},
{'name': ' def orTypes(base: Int | String, nested: List[Int | Double] | Seq[String]): Unit', 'description':'tests.genericMethods.Types.orTypes', 'location':'scala3doc/tests/genericMethods/-types/or-types.html', 'searchKey':'orTypes'},
{'name': ' class A2[E, +T <: DD[E]]', 'description':'tests.genericSignatures.A2', 'location':'scala3doc/tests/genericSignatures/-a2/index.html', 'searchKey':'A2'},
{'name': ' class DD[+T]', 'description':'tests.genericSignatures.DD', 'location':'scala3doc/tests/genericSignatures/-d-d/index.html', 'searchKey':'DD'},
{'name': ' class GivenType', 'description':'tests.givenSignatures.GivenClass', 'location':'scala3doc/tests/givenSignatures/-given-class/-given-type/index.html', 'searchKey':'GivenClass'},
{'name': 'given IntOps as Int.type', 'description':'tests.givenSignatures.GivenClass.IntOps', 'location':'scala3doc/tests/givenSignatures/-given-class/-int-ops.html', 'searchKey':'IntOps'},
{'name': 'given asd as B', 'description':'tests.givenSignatures.GivenClass.asd', 'location':'scala3doc/tests/givenSignatures/-given-class/asd.html', 'searchKey':'asd'},
{'name': 'given asd2 as C[T]', 'description':'tests.givenSignatures.GivenClass.asd2', 'location':'scala3doc/tests/givenSignatures/-given-class/asd2.html', 'searchKey':'asd2'},
{'name': ' def compare(xs: List[T], ys: List[T]): Int', 'description':'tests.givenSignatures.GivenClass.compare', 'location':'scala3doc/tests/givenSignatures/-given-class/list-ord/compare.html', 'searchKey':'compare'},
{'name': ' def <(y: T): Boolean', 'description':'tests.givenSignatures.GivenClass.extension_<', 'location':'scala3doc/tests/givenSignatures/-given-class/-ord/extension_-.html', 'searchKey':'extension_<'},
{'name': ' def >(y: T): Boolean', 'description':'tests.givenSignatures.GivenClass.extension_>', 'location':'scala3doc/tests/givenSignatures/-given-class/-ord/extension_-.html', 'searchKey':'extension_>'},
{'name': 'given GivenType', 'description':'tests.givenSignatures.GivenClass.given_GivenType', 'location':'scala3doc/tests/givenSignatures/-given-class/-given-type.html', 'searchKey':'given_GivenType'},
{'name': 'given listOrd as Ord[List[T]]', 'description':'tests.givenSignatures.GivenClass.listOrd', 'location':'scala3doc/tests/givenSignatures/-given-class/list-ord.html', 'searchKey':'listOrd'},
{'name': ' def bar: String', 'description':'tests.implicitConversions.A.bar', 'location':'scala3doc/tests/implicitConversions/-a/-c/bar.html', 'searchKey':'bar'},
{'name': ' def bar: String', 'description':'tests.implicitConversions.nested.Wrapper$.bar', 'location':'scala3doc/tests/implicitConversions/nested/-wrapper/-bar/bar.html', 'searchKey':'bar'},
{'name': ' def bar2: String', 'description':'tests.implicitConversions.A.bar2', 'location':'scala3doc/tests/implicitConversions/-a/-d/bar2.html', 'searchKey':'bar2'},
{'name': ' def extended_bar(): String', 'description':'tests.implicitConversions.A.extension_extended_bar', 'location':'scala3doc/tests/implicitConversions/-a/-d/extension_extended_bar.html', 'searchKey':'extension_extended_bar'},
{'name': ' def extended_bar(): String', 'description':'tests.implicitConversions.implicitConversions$package$.extension_extended_bar', 'location':'scala3doc/tests/implicitConversions/extension_extended_bar.html', 'searchKey':'extension_extended_bar'},
{'name': ' def inherited: Int', 'description':'tests.implicitConversions.A.inherited', 'location':'scala3doc/tests/implicitConversions/-a/-e/inherited.html', 'searchKey':'inherited'},
{'name': ' def foo: Int', 'description':'tests.implicitConversions.B.foo', 'location':'scala3doc/tests/implicitConversions/-b/foo.html', 'searchKey':'foo'},
{'name': ' object C', 'description':'tests.implicitConversions.C$', 'location':'scala3doc/tests/implicitConversions/-c$/index.html', 'searchKey':'C$'},
{'name': 'implicit def companionConversion(c: C): B', 'description':'tests.implicitConversions.C$.companionConversion', 'location':'scala3doc/tests/implicitConversions/-c$/companion-conversion.html', 'searchKey':'companionConversion'},
{'name': ' def extensionInCompanion: String', 'description':'tests.implicitConversions.C$.extension_extensionInCompanion', 'location':'scala3doc/tests/implicitConversions/-c$/extension_extension-in-companion.html', 'searchKey':'extension_extensionInCompanion'},
{'name': ' def extensionInCompanion: String', 'description':'tests.implicitConversions.C.extensionInCompanion', 'location':'scala3doc/tests/implicitConversions/-c/extension-in-companion.html', 'searchKey':'extensionInCompanion'},
{'name': ' class Lst[A]', 'description':'tests.implicitConversions.nested.Lst', 'location':'scala3doc/tests/implicitConversions/nested/-lst/index.html', 'searchKey':'Lst'},
{'name': ' object Lst', 'description':'tests.implicitConversions.nested.Lst$', 'location':'scala3doc/tests/implicitConversions/nested/-lst$/index.html', 'searchKey':'Lst$'},
{'name': ' def sum: Int', 'description':'tests.implicitConversions.nested.Lst$.extension_sum', 'location':'scala3doc/tests/implicitConversions/nested/-lst$/extension_sum.html', 'searchKey':'extension_sum'},
{'name': ' def sum: Int', 'description':'tests.implicitConversions.nested.implicitConversions$package$.extension_sum', 'location':'scala3doc/tests/implicitConversions/nested/extension_sum.html', 'searchKey':'extension_sum'},
{'name': ' class Opt[A]', 'description':'tests.implicitConversions.nested.Opt', 'location':'scala3doc/tests/implicitConversions/nested/-opt/index.html', 'searchKey':'Opt'},
{'name': ' class Bar', 'description':'tests.implicitConversions.nested.Wrapper$', 'location':'scala3doc/tests/implicitConversions/nested/-wrapper/-bar/index.html', 'searchKey':'Wrapper$'},
{'name': 'implicit def foobar(foo: Foo): Bar', 'description':'tests.implicitConversions.nested.Wrapper$.foobar', 'location':'scala3doc/tests/implicitConversions/nested/-wrapper/foobar.html', 'searchKey':'foobar'},
{'name': ' class Z', 'description':'tests.implicitConversions.nested.Z', 'location':'scala3doc/tests/implicitConversions/nested/-z/index.html', 'searchKey':'Z'},
{'name': ' object ImplicitMemberTarget', 'description':'tests.implicitMembers.OuterClass', 'location':'scala3doc/tests/implicitMembers/-outer-class/-implicit-member-target$/index.html', 'searchKey':'OuterClass'},
{'name': ' def extensionFromCompanion: String', 'description':'tests.implicitMembers.OuterClass.extension_extensionFromCompanion', 'location':'scala3doc/tests/implicitMembers/-outer-class/-implicit-member-target$/extension_extension-from-companion.html', 'searchKey':'extension_extensionFromCompanion'},
{'name': ' def extensionFromOuterClass: String', 'description':'tests.implicitMembers.OuterClass.extension_extensionFromOuterClass', 'location':'scala3doc/tests/implicitMembers/-outer-class/extension_extension-from-outer-class.html', 'searchKey':'extension_extensionFromOuterClass'},
{'name': ' def extensionFromPackage: String', 'description':'tests.implicitMembers.implicitMembers$package$.extension_extensionFromPackage', 'location':'scala3doc/tests/implicitMembers/extension_extension-from-package.html', 'searchKey':'extension_extensionFromPackage'},
{'name': ' def methodFromPackage1(): Int', 'description':'tests.mergedPackage.mergedPackage1$package$.methodFromPackage1', 'location':'scala3doc/tests/mergedPackage/method-from-package1.html', 'searchKey':'methodFromPackage1'},
{'name': ' def methodFromPackage2(): String', 'description':'tests.mergedPackage.mergedPackage2$package$.methodFromPackage2', 'location':'scala3doc/tests/mergedPackage/method-from-package2.html', 'searchKey':'methodFromPackage2'},
{'name': ' def functionFromPackageObject(): String => String', 'description':'tests.mergedPackage.package$.functionFromPackageObject', 'location':'scala3doc/tests/mergedPackage/function-from-package-object.html', 'searchKey':'functionFromPackageObject'},
{'name': 'abstract class Abstract()', 'description':'tests.modifiersSignatureTestSource.Abstract', 'location':'scala3doc/tests/modifiersSignatureTestSource/-abstract/index.html', 'searchKey':'Abstract'},
{'name': 'case class Case()', 'description':'tests.modifiersSignatureTestSource.Case', 'location':'scala3doc/tests/modifiersSignatureTestSource/-case/index.html', 'searchKey':'Case'},
{'name': ' class Empty()', 'description':'tests.modifiersSignatureTestSource.Empty', 'location':'scala3doc/tests/modifiersSignatureTestSource/-empty/index.html', 'searchKey':'Empty'},
{'name': 'final class Final()', 'description':'tests.modifiersSignatureTestSource.Final', 'location':'scala3doc/tests/modifiersSignatureTestSource/-final/index.html', 'searchKey':'Final'},
{'name': ' class ImplementedMethods() extends Methods', 'description':'tests.modifiersSignatureTestSource.ImplementedMethods', 'location':'scala3doc/tests/modifiersSignatureTestSource/-implemented-methods/index.html', 'searchKey':'ImplementedMethods'},
{'name': 'override def method1(): Unit', 'description':'tests.modifiersSignatureTestSource.ImplementedMethods.method1', 'location':'scala3doc/tests/modifiersSignatureTestSource/-implemented-methods/method1.html', 'searchKey':'method1'},
{'name': ' def method1(): Unit', 'description':'tests.modifiersSignatureTestSource.Methods.method1', 'location':'scala3doc/tests/modifiersSignatureTestSource/-methods/method1.html', 'searchKey':'method1'},
{'name': 'override def method1(): Unit', 'description':'tests.modifiersSignatureTestSource.ReimplementedMethods.method1', 'location':'scala3doc/tests/modifiersSignatureTestSource/-reimplemented-methods/method1.html', 'searchKey':'method1'},
{'name': ' def method1(): Int', 'description':'tests.packageObjectSymbolSignatures.package$.method1', 'location':'scala3doc/tests/packageObjectSymbolSignatures/method1.html', 'searchKey':'method1'},
{'name': 'inline def inlineMethod(): Unit', 'description':'tests.modifiersSignatureTestSource.Methods.inlineMethod', 'location':'scala3doc/tests/modifiersSignatureTestSource/-methods/inline-method.html', 'searchKey':'inlineMethod'},
{'name': 'implicit def toImplicitString(): String', 'description':'tests.modifiersSignatureTestSource.Methods.toImplicitString', 'location':'scala3doc/tests/modifiersSignatureTestSource/-methods/to-implicit-string.html', 'searchKey':'toImplicitString'},
{'name': 'open class Open', 'description':'tests.modifiersSignatureTestSource.Open', 'location':'scala3doc/tests/modifiersSignatureTestSource/-open/index.html', 'searchKey':'Open'},
{'name': 'case class ReimplementedMethods() extends ImplementedMethods', 'description':'tests.modifiersSignatureTestSource.ReimplementedMethods', 'location':'scala3doc/tests/modifiersSignatureTestSource/-reimplemented-methods/index.html', 'searchKey':'ReimplementedMethods'},
{'name': 'sealed class Sealed()', 'description':'tests.modifiersSignatureTestSource.Sealed', 'location':'scala3doc/tests/modifiersSignatureTestSource/-sealed/index.html', 'searchKey':'Sealed'},
{'name': ' def bb(): Int', 'description':'tests.nested.A.bb', 'location':'scala3doc/tests/nested/-a/-b/bb.html', 'searchKey':'bb'},
{'name': ' def bb(): Int', 'description':'tests.nested.R$.bb', 'location':'scala3doc/tests/nested/-r/-b/bb.html', 'searchKey':'bb'},
{'name': ' def cc: Int', 'description':'tests.nested.A.cc', 'location':'scala3doc/tests/nested/-a/-c/cc.html', 'searchKey':'cc'},
{'name': ' def cc: Int', 'description':'tests.nested.R$.cc', 'location':'scala3doc/tests/nested/-r/-c/cc.html', 'searchKey':'cc'},
{'name': 'sealed trait ErrorKind', 'description':'tests.nested.ErrorKind', 'location':'scala3doc/tests/nested/-error-kind/index.html', 'searchKey':'ErrorKind'},
{'name': ' object ErrorKind', 'description':'tests.nested.ErrorKind$', 'location':'scala3doc/tests/nested/-error-kind$/index.html', 'searchKey':'ErrorKind$'},
{'name': ' object B', 'description':'tests.nested.R$', 'location':'scala3doc/tests/nested/-r/-b/index.html', 'searchKey':'R$'},
{'name': ' object Y', 'description':'tests.nested.X', 'location':'scala3doc/tests/nested/-x/-y/index.html', 'searchKey':'X'},
{'name': ' def method3(): String', 'description':'tests.objectSignatures.A.method3', 'location':'scala3doc/tests/objectSignatures/-a/method3.html', 'searchKey':'method3'},
{'name': ' object A2 extends A[String] with C', 'description':'tests.objectSignatures.A2$', 'location':'scala3doc/tests/objectSignatures/-a2/index.html', 'searchKey':'A2$'},
{'name': ' object Base', 'description':'tests.objectSignatures.Base$', 'location':'scala3doc/tests/objectSignatures/-base/index.html', 'searchKey':'Base$'},
{'name': ' def method2(): String', 'description':'tests.packageObjectSymbolSignatures.package$.method2', 'location':'scala3doc/tests/packageObjectSymbolSignatures/method2.html', 'searchKey':'method2'},
{'name': ' def packageMethod1: String', 'description':'tests.packageSymbolSignatures.packageSymbolSignatures$package$.packageMethod1', 'location':'scala3doc/tests/packageSymbolSignatures/package-method1.html', 'searchKey':'packageMethod1'},
{'name': ' def packageMethod2: Int', 'description':'tests.packageSymbolSignatures.packageSymbolSignatures$package$.packageMethod2', 'location':'scala3doc/tests/packageSymbolSignatures/package-method2.html', 'searchKey':'packageMethod2'},
{'name': ' class SignatureTestClass(a: String)', 'description':'tests.signatureTestSource.SignatureTestClass', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/index.html', 'searchKey':'SignatureTestClass'},
{'name': ' def bounds1[T <: String](a: T, b: T): Unit', 'description':'tests.signatureTestSource.SignatureTestClass.bounds1', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/bounds1.html', 'searchKey':'bounds1'},
{'name': ' def bounds2[T >: String](a: T, b: T): Unit', 'description':'tests.signatureTestSource.SignatureTestClass.bounds2', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/bounds2.html', 'searchKey':'bounds2'},
{'name': ' def likeVararg(a: Seq[A]): C', 'description':'tests.signatureTestSource.SignatureTestClass.likeVararg', 'location':'scala3doc/tests/signatureTestSource/-signature-test-class/like-vararg.html', 'searchKey':'likeVararg'},
{'name': ' class Record(elems: (String, Any)*) extends Selectable', 'description':'tests.structuralTypes.Record', 'location':'scala3doc/tests/structuralTypes/-record/index.html', 'searchKey':'Record'},
{'name': ' def selectDynamic(name: String): Any', 'description':'tests.structuralTypes.Record.selectDynamic', 'location':'scala3doc/tests/structuralTypes/-record/select-dynamic.html', 'searchKey':'selectDynamic'},
{'name': ' class Base', 'description':'tests.typesSignatures.Base', 'location':'scala3doc/tests/typesSignatures/-base/index.html', 'searchKey':'Base'},
{'name': ' class Generic[T]', 'description':'tests.typesSignatures.Generic', 'location':'scala3doc/tests/typesSignatures/-generic/index.html', 'searchKey':'Generic'},
{'name': ' class Operators', 'description':'tests.typesSignatures.Operators', 'location':'scala3doc/tests/typesSignatures/-operators/index.html', 'searchKey':'Operators'},
{'name': ' trait V', 'description':'tests.typesSignatures.V', 'location':'scala3doc/tests/typesSignatures/-v/index.html', 'searchKey':'V'},
{'name': ' class InClassVisibility()', 'description':'tests.visibility.InClassVisibility', 'location':'scala3doc/tests/visibility/-in-class-visibility/index.html', 'searchKey':'InClassVisibility'},
{'name': 'protected[InClassVisibility] def protectedInClassMethod: Int', 'description':'tests.visibility.InClassVisibility.protectedInClassMethod', 'location':'scala3doc/tests/visibility/-in-class-visibility/protected-in-class-method.html', 'searchKey':'protectedInClassMethod'},
{'name': 'protected def protectedMethod: Int', 'description':'tests.visibility.InClassVisibility.protectedMethod', 'location':'scala3doc/tests/visibility/-in-class-visibility/protected-method.html', 'searchKey':'protectedMethod'},
{'name': ' object InObjectVisibility', 'description':'tests.visibility.InObjectVisibility$', 'location':'scala3doc/tests/visibility/-in-object-visibility/index.html', 'searchKey':'InObjectVisibility$'},
{'name': ' trait InTraitVisibility', 'description':'tests.visibility.InTraitVisibility', 'location':'scala3doc/tests/visibility/-in-trait-visibility/index.html', 'searchKey':'InTraitVisibility'},
{'name': 'protected[InTraitVisibility] def protectedInTraitMethod: Int', 'description':'tests.visibility.InTraitVisibility.protectedInTraitMethod', 'location':'scala3doc/tests/visibility/-in-trait-visibility/protected-in-trait-method.html', 'searchKey':'protectedInTraitMethod'}]
